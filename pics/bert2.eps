%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 318.000000 642.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 318 642
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 318 642
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /u put
dup 35 /l put
dup 36 /t put
dup 37 /i put
dup 38 /hyphen put
dup 39 /H put
dup 40 /e put
dup 41 /a put
dup 42 /d put
dup 43 /space put
dup 44 /A put
dup 45 /n put
dup 46 /o put
dup 47 /ampersand put
dup 48 /N put
dup 49 /r put
dup 50 /m put
dup 51 /F put
dup 52 /w put
dup 53 /C put
dup 54 /h put
dup 55 /c put
dup 56 /E put
dup 57 /b put
dup 58 /g put
dup 59 /L put
dup 60 /y put
dup 61 /P put
dup 62 /s put
dup 63 /S put
dup 64 /q put
dup 65 /T put
dup 66 /f put
dup 67 /B put
dup 68 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



82E2E102CAFD360252FDAE0252FDAE02CAFDA802580000000001004D0000028602CA000B004BBA0003000000032BB8000310BA0007000800032BB8000710B8000810B8000AD0B8000A2F00B800012FB800052FB800002FB800072FBA000400010000111239BA000A0001000011123930311311331133013311231123014D5A020175685A02FE8802CAFD36023DFDC302CAFDBD02430000000002004E0000026202CA000800130089B800152FBA0001000900032BB8000110B8001510B80010DCB80005DC410500DA000500EA000500025D411B0009000500190005002900050039000500490005005900050069000500790005008900050099000500A9000500B9000500C90005000D5DB8000110B8000BD000B8000A2FBA0009000100032BB8000910BA0000000C00032BB800001030311311333216151406270111331133163635342623ADBA514B4B51FEE75FDA6C6F6F6C0174010643404044010156FD360124017064646F0000010025FFF0026302DB0039008DBA001E001F00032BB8001E10BA0029001400032BB8002910B8001E10B8000BDC410500DA001400EA001400025D411B0009001400190014002900140039001400490014005900140069001400790014008900140099001400A9001400B9001400C90014000D5DB80032DCB8002910B8003BDC00BA0019002400032BB8001910BA0006003700032BB8000610303101332E0323220E0215141E0615140E0223222E023523141E0233323E0235342E0635343E0233321601EB5A0229475E37315D492C2741525552412720344120284C39235A2F516B3C31635033274152555241271B2D3A1E4A5F01F93B55381A19334F363141291913121D2E2527321D0C142A412D415F3D1E1733513935462E1B14111A2921232F1C0C45000000000100020000023D02CA00070027BA0003000000032BB800031000B800012FBA0006000700032BB8000610B8000710B80003D030311311331133352115F05FEEFDC5027AFD86027A5050000000020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007

2B293D2713019055020E292E2E143B593B1D1E3B593C365A1502FE264838222136472624463722203645DA02CAFEF6171F13082B49623737624A2C262B46000000020024FFF502030211000A0026005BBA0014001F00032BB8001410BA0015000000032BB8001510B8001410B80001D0B8000010B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E0223220E02151E0333323601A7FED702162635212035271754540B45362A3E28120101830215375B4535594124021F3E5B3E587401341E352817172736AE33321C2F3D222F6858392848623B3B644828580001000C0000012902D20017004FBA0003000000032BB8000310B80006D0B8000010B8000DDCB8000010B80014D000B800012FBA0011000A00032BB8001110BA0015000000032BB8001510B8000010B80003D0B8001510B80005D030311311331133352335343633321617352E012322061D01231563556464221F0B1A0B0C1F0C46495701BAFE4601BA4B48221803044A0404413F4D4B0000020024FF2F01FE02110028003C00BDBA002E000C00032BB8002E10BA0001000200032BB8000110B8000210B80038D0B800382FBA000400020038111239B8000210B80015D0411B0006002E0016002E0026002E0036002E0046002E0056002E0066002E0076002E0086002E0096002E00A6002E00B6002E00C6002E000D5D410500D5002E00E5002E00025DBA0021000C002E111239B800212FB80020DCB8000110B8003EDC00BA001B002600032BB8001B10BA0007003300032BB8000710BA0029001100032BB8002910303125112315232E0123220E0215141E02333236373315140E0223222E0227231E0333323627222E0235343E0233321E0215140E0201FE5001175231435C38181D3A563A3259160211263A2A152E271B015502283D4B247C74EE2A38220E11253A292838231011243B2C01D94A2B2B334F612E355F472A2D30222B48331D091420172A3A24107E98233946232544341F20354222244839230000010040000001EC02CA001A0051BA001A000000032BB8001A10BA000E000B00032BB8000E10B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000C2FBA0013000800032BB8001310BA001900010000111239303113113311343E0233321615113311342E0223220E02072311405513263927313855112A443317312D240A0202CAFD360124233B2C183830FEA201542A45321C0A1521180111000200450000009A02CA00030007002FBA0001000200032BB8000110B8000210B80004D0B8000110B80006D000B800052FBA0001000000032BB800011030311335231D011133119A5555026268685DFD
FB020500000100450000020702CA000B0033BA000B000000032BB8000B10B80002D000B800012FB800052FB800002FBA000800010000111239BA000A000100001112393031131133353713330337230711455550B16CDCCD72EC02CAFD36C44AFEF20149BCE201A7000100450000009A02CA00030017BA0003000000032BB800031000B800012FB800002F303113113311455502CAFD3602CA00000000010040000003150211002A00B7BA0003000000032BB8000310B8000DDC4103005F000D00015D4103008F000D00015D41030020000D00015D410300B0000D00015DB80010DCB80018DC4103008F001800015D4103005F001800015D41030020001800015D410300B0001800015DB8001BDCBA0023000D0010111239B8000310B80028D0B800282FBA002900000003111239B8001B10B8002CDC00B800012FB8000E2FB800192FBA0026000800032BB8002610B8000810B80013D0B8002610B80020D0303113113311343E0233321E0215113311343633321E0215113311342E02232206072E01232207233540550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C00000000010040000001EC021100170045BA0003000000032BB8000310BA000E000B00032BB8000E10B8000310B80015D0B800152FBA00160000000311123900B800012FB8000C2FBA0013000800032BB8001310303113113311343E0233321615113311342E022322072335405513263927313855112A44337335020205FDFB0124233B2C183830FEA201542A45321C5E520000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020024FF3B020E02110013002C00A9B8002D2FBA0015000A00032BB8001510B8002D10B80022D0B800222FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6


00>] def
/CharStrings 38 dict dup begin
/.notdef 0 def
/space 1 def
/ampersand 2 def
/hyphen 3 def
/A 4 def
/B 5 def
/C 6 def
/E 7 def
/F 8 def
/H 9 def
/L 10 def
/M 11 def
/N 12 def
/P 13 def
/S 14 def
/T 15 def
/a 16 def
/b 17 def
/c 18 def
/d 19 def
/e 20 def
/f 21 def
/g 22 def
/h 23 def
/i 24 def
/k 25 def
/l 26 def
/m 27 def
/n 28 def
/o 29 def
/q 30 def
/r 31 def
/s 32 def
/t 33 def
/u 34 def
/w 35 def
/y 36 def
/uni2B91 37 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9319293CFDFFDF66CFE9885998F65FE6E49EC9C7C15B8E78E1E7286DA621C56362171FEE49C2F1BF23FBB67B094DD4D3359D21DEF6C2353649B9E7F69B529243CC75281823F9F689AC429A724148A3EB354B35D1E6A5B4905FAECC90A8494BE00208EB4A93D53391B334E7915A83BEC2F64E31992A1E6E4DAE4003AB7D2A1F6F97BED4A785B511AA29C812D8FDF1CD6903853631816698D9F0EC797C86C0DA518C07F966C90D71A0EEF7867ECEFE7B604401410763C4178D4AA19746CF865B617559EAED0739845DF3238C58D6B9EB56A1729BF85BDA48F565E4ED5F559BD2A5FF9F292D0F22C8782F8453D45CE4A1377338D01CC5E3A209C047A1E2F1C1D35561AF9DDA532E344FE3BFF43DE82D7D47F25D0A54005B639C1BD6521EB227D8525B826BAF8208683790ECDEF6A62E608804612EE9AC6DD863D56A37B2698793EDFC33BFCC3D0310137C30F41A4AF99F3E46FF7FC719AD52CECC23F25CB1707A86908CBA897C775E0DB70D4162AB699D9E5E845C521F4AD651085B76D58D191EA89FD081F005B85188BC209586FC4AC38DE55E061D9886FD2EB61158D83B51040F348143FC37BE6B33801C29342152E0D1E7D769C6ADB7B5880E7511F3312EDBF49280510F5369A087E9D7443C82A196659692EA33368364FC6F0AB8FDEEFF689FEA3F60C6768F3BF8C5B8CA7F1E0D8885D7F1A28367453AB622943C9250CC2248D8B34E73FAA6554866010555B60BC06DEB37EDDAD40C3C3701DD25A79F4A001C5A


5BD6A9AA349B51A54BA6C6C45A0ACC9D0BAAC451AA015418B8166F03BDD564B69A9D64575117526BAEA54BB7F69B8BA33047794D4B9BE0813F275117D2CA2421CDA3A2C8E9E727B626048706772E3E0C72787266476C5C68BEC71419A94D09F4D155E85659CA53D1035348BA8A2B8937FC1A3768FAAEAFBACF60FA986B65964252EDFE557E4A7A3C6E9D7F265DFF2649F4F9047F22F84E78CB8FB7453543B35F8D1F5EC9865DA8117F4F5893D1F32D702963201A2CC519F401086D3FF47BA5842B2A9DC25F1B95A5221B818B53794C73D6AB9C8F8D83011CC9382F7E0DE5AF016AAC24AAF298F247C87B3C1721B2C9B311D652C814FDFD210D0B57EF8626CC562E7E7144209FD771A8A4555BF2ED55F659BC191E0BB595299993B1A13527EE46D2D13834FE7246D1495DE8A001F27459689441A4E593D68511DAB154E31092FDA8FD29C0563B1509B645CCC08D12C2DA862E966AD74A11AA911711FE0C282A9A31388FBE94816940F459A9FEE276B7CFEE6C44A23EACA27C2C81126167AB12323D31E155D31E82B69471563E5DEAB4169F8D1590E5C0DDB25901D9564A19C19F133D4CF5695089634E2A96EF9A3EEB053ACAED51967643A88E25DAE96053945DD1F91070439803A120C7CB6DBE2CD87A55ACA02A0842951D55BFD06F54C25592FC89486D4DC15521D239EE85BF36BB96DD13E0E588C20C5E68259864E4C41B09B13E6BB72B37193A88D75B713FA9283C97E62A7550CB49A8D596E5DC21A66E43795525F472B4647B170EB9DBAD40BF447774D0E1648F2726979F5ECEAC2133988D85583D39DE88B5E4CDDDCA65C00072C2DE32A7BDEBF5428EB8072E2E5F607878F84866F5BE7EB33BB052345070E30F4D69080C224DDC2CE64BB7774CE3C68E09107F5DE19756311A860571713C3E9B66B4EAF1634ADED9830CBFC97C88FA8C21942978C46E238B9CF4B34AC03841E6C232AA99E30986A71A4942017CDE72B32586F694FF28B1394EBD5B180BFD3996E990715493B52F87AA97C6A4FFFDA154B8F19BBE673E1D1402978463B07E83918EF65A58445E3F7A6293327E450CC985D76E0DA7B47DED995DD95D532D10AE90909E6C2058B014CFDAABEA054517117F60BA893D1A7C9A4AD825F40C76550C3BB0485CE0746455A994A9D48F92B16D4562C51EADC8A8FF3F33228A8881BD9317DCA4D12E49DDC11EDB992EFB47F9EF6803A939F808BB34434388721203F9D7FF01FBCE25FBD2BCCE3D719D681FEF62C4D0365A19B69FF66A20C84890503B668E1D924B75412AE58713451E447A01529F8DCF7C9F4AE777C9414EBC8BD2E10FCBC3CDFE4411711FA211ECA2001A9E2E05B9B34F696EA707FA567B8C9F7F645CFDD25436028B7E1ECD95FFD3F42D4816280CDF153E5977D552DAF36D826F204A30AB0573D06F420162BC19765D8D4F1017

2FB9E436580203852024D3044B85E2D6EB7B0FFB868E8554C59F1681F11EE0BEAF1CC56BD90E358405B1C2EFF810BFFAB6B05A582970F951E7B679E2E00334F9FDCC0FD73F6FA88D146571185D6568CB4AD40E900A177498C5FEEB9A1E7953FD9014997BF370163827C3953596E8D7B77D6B565633D0740FEBF2C5D4BD5FA4BE4885D58CF585E5B28724C02A70C2DDF7690EED6159DC43FE35D02EC78724F7B099E925ADB858E4DF3C394285A6283F42F01F863203708EA639656EC4AADB9E8A8411B8F41BBCD87F9CE2FB5AA7E20810D85F60AE6D91AB9E367F42FB9A58BB80B39A0C3FD1CA77EEE6486C09C6C031DFE0738EEB2EB53BF58002EDC14A20FE9ECCC0F7EF0F40A4548671BD3BEA40BBEC384CB3C4085378695343C9C1D41C07C8DB651A8D1718EC1EFBFAAE23946EA769201D7B03D04D11310DA4C9B2A2586CC385D47A052FC2C71D6BFD7B1A007EC79125D041B9131B5D303E2F90DB6599F32BE0EAD4EFE71B06C4C5A46B83DE41250A12D36F6E9A3CBE6F34088BB76CC0BDB7BD323A8BBF9771DAA0B5D30F3E4E07F4403FF29F28676D5CC352359C015FBC2320F3717E944CC5CB344EB4F02C9A57641BD5F7CD3589393E5A39B621057215CF400D3D20C16F0241087BEED83AE7004EDB116CF751C622ED000679E6C8BE515EB2DFDF141766A7349703F8770067065E8FAC06BF6CB16B0D1CC1D7409839D9223DB7595558371B2ED9859BBE60A89FE5853013665FAFA12C9FE670009D4121917889AEBBB9FDB79D826504B8882EC8711BA08F46A073436AEBBAC79A54388C50F9CCC184BE80E9B277A46FDED17C34AA184BD3B47BDC8648DFA3B5215838DAB781F9FFE665C447367A4202D54973637A305DD293CA5A192D39DE86DAABBF27F8EC6A0C662F1FD85AFD646ACC70FB199A38C127690A73EAC535EC554B3480681FED1BEA71482ADE00B6A9DAF1CF5F9D034898422D9BD0136551541D45776FD9AE39541EA3DB4DE6933D585513A789FEF90DC0E4B3E41022304522F832755B5C8661389B4FD363DAD5705AF42E1359500C33956C4E8511D5F2AC849BD7437182CFFA66FABC839A4FF5909584E0E222CD6435B35BCBC6CAF4FF323FC07F40EA7AA3ADD2173BDE6C43C9057BE759BBA1C5CFA7EBF2610D8B3D292E42CEA57D856294301A102479624078E00FB6ED9108579DA66FE53E9FC8F9734D17C07F0FAA0FD815186AF4F1B348777AAF2C7788254AABFBD8C6EE6527D001BAD3279DB4A47EF71A1A28889E18AACC5C7BD6196CEAE120B5B53FFAEC4A371263B765E98902B7624A21D37855F2FDECFC8F8C5A56EA7B54944731E8E2462C6570E59966F52940AA6DB48066D4A7353256B86AFBF019256D735C064734F889749405DCC52B7FAABD42D3F03D6ACB10BB44A4BE671A2889F253B8DA609205E9002ADB545A7C623B67
395919F27E622B1E237F4BC8617C082DD31C4B218DD7B8F54AA9393DAC23CEF1F3AC4435D37716E3C4E0DE9FD44A051C449FC4F8E435B1716D216F8B7D3961C2A0930DC08ED7F38EDCAC27356B02B4F191243922274D2682716DB348630949825F77CFE23667B9F1D8DB23429ADD7558FA7E2326D3EFB40F2A66E38072BC7DC88E659EFC19552D65B39C7DD8A23CB4A86F99A636A9F09B79AFF28F1F469CE5CCF5F24EB853DFFF53326ED37D08D49389E270FE2F780D2C8D9E0D2B85071D39A9B31B49D91AF8DBBF6155684A5014CF816A00678F166C4F90D60DD962A7EE94A1795F6161D3EB841D260336F087C6CF82A841891F77A6247EE272E50BB86B83B9B2B3D1F083C8960E318D2F9537C2B8F31DA995E0BAF48C8609402418039785BC116066436DA1F6773C87241B60FC90C67EF84913D3ED25114153A6D4790E6542A7709304D69FC744C03CBB46C818DB5B471C9A138922EB9A26F94BB082E1E6E8384F7CE691EC4E497145
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /multiply put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/N 1 def
/multiply 2 def
/u20BC 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-993 -481 1511 1077}def
/UniqueID 4287398 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94CF017316529A80F552C33559AB2C21302561FE61E935C1E32B3C9EA963332618F471070EE256FD7BED06069E2A68A97D3B6A6C56CEDA3D4FABB931857FA7CD012104B1CF6170A0593338EDAA2CDBA16F67F56F951CBB0EA06CB6E77BD9141376E54089042FDE822DB299EEC3C5EFCC727EDCDC1D240DFC76E4C9F073335E3A8E5B6CB5959312F1B82175E28C74D0D3285B42D7CF77848E9483ECDC71B23B0AF4AD4A309BCBEF3B83009F3B076E4E622A195F3326B7CF2FC454DA3D44D2A1E2E2FCDF1043E3B3E318048CD7A94FF4681694DC35F2A12CC4919C3B0521DBFAE229AD6F1F58ECC60A6C821A4067E676E526E88A618E7664B483C272EDD40DA19750DE5275BEBCA10CC7EEA52DF16DF1A47BC0119AF100DF1C29CE5C0F1106009024C716BB1560E77EE4C7B8DC0BEA9FE6657889FC31C338DB8519554A0718091595DC9F2EC679D08E0E363DDCEC667E04CD046134B66979B18FC8E63C1F46805E9DE675D4DF3B861237D2B92C324F7C463AC531ACD857886417D675E6268DC11D6839AF6329086A1DBB9BD70D8D95AE045243BD3C36CE5B4AEAE903A1F9112F2D175597DA8B482F669DF314F0A02C2176B169F6868A35DBCB4C30DF291EDC1B29912389F2091D92F3B66299E88AB6AD4400C0F18B2518608381731C7CF99EF9B092E04F1E17548CC7D39F81FD725FDDD26666429488F67F4CA0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F2.1/HelveticaNeue-Italic renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 318 642 rc
0 642 m
318 642 l
318 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-971.73914 1520.2609 m
1926.0869 1520.2609 l
1926.0869 -1061.2609 l
-971.73914 -1061.2609 l
h
-971.73914 1520.2609 m
f
65 580 m
290 580 l
297.17969 580 303 574.17969 303 567 c
303 295 l
303 287.82031 297.17969 282 290 282 c
65 282 l
57.820297 282 52 287.82031 52 295 c
52 567 l
52 574.17969 57.820297 580 65 580 c
h
65 580 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -565 987 cm
630 407 m
855 407 l
862.17969 407 868 412.82031 868 420 c
868 692 l
868 699.17969 862.17969 705 855 705 c
630 705 l
622.82031 705 617 699.17969 617 692 c
617 420 l
617 412.82031 622.82031 407 630 407 c
h
630 407 m
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
134.375 382.3631 m
264.875 382.3631 l
266.53186 382.3631 267.875 381.01996 267.875 379.3631 c
267.875 335.8631 l
267.875 334.20624 266.53186 332.8631 264.875 332.8631 c
134.375 332.8631 l
132.71814 332.8631 131.375 334.20624 131.375 335.8631 c
131.375 379.3631 l
131.375 381.01996 132.71814 382.3631 134.375 382.3631 c
h
134.375 382.3631 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -565 987 cm
699.375 604.6369 m
829.875 604.6369 l
831.53186 604.6369 832.875 605.98004 832.875 607.6369 c
832.875 651.1369 l
832.875 652.79376 831.53186 654.1369 829.875 654.1369 c
699.375 654.1369 l
697.71814 654.1369 696.375 652.79376 696.375 651.1369 c
696.375 607.6369 l
696.375 605.98004 697.71814 604.6369 699.375 604.6369 c
h
699.375 604.6369 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
724.91302 625.9389 m
(!"#$%&'\(\)*+)[ 13.936000 8.896000 3.552000 5.040000 3.552000 6.224000 11.552000 8.592000 8.592000 9.488000 0.000000 ] xS
732.32098 644.3869 m
(,$$\(-$%.-)[ 10.368000 5.040000 5.040000 8.592000 8.896000 5.040000 3.552000 9.184000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
134.375 419.91348 m
264.875 419.91348 l
266.53186 419.91348 267.875 418.57034 267.875 416.91348 c
267.875 401.41348 l
267.875 399.75662 266.53186 398.41348 264.875 398.41348 c
134.375 398.41348 l
132.71814 398.41348 131.375 399.75662 131.375 401.41348 c
131.375 416.91348 l
131.375 418.57034 132.71814 419.91348 134.375 419.91348 c
h
134.375 419.91348 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -565 987 cm
699.375 567.08649 m
829.875 567.08649 l
831.53186 567.08649 832.875 568.42969 832.875 570.08649 c
832.875 585.58649 l
832.875 587.24335 831.53186 588.58649 829.875 588.58649 c
699.375 588.58649 l
697.71814 588.58649 696.375 587.24335 696.375 585.58649 c
696.375 570.08649 l
696.375 568.42969 697.71814 567.08649 699.375 567.08649 c
h
699.375 567.08649 m
S
/Cs3 SC
0 sc
0 i
720.60901 582.83649 m
(,**+/+0.12)[ 10.368000 9.488000 9.488000 4.448000 10.080000 4.448000 11.552000 9.184000 5.328000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
134.375 546 m
264.875 546 l
266.53186 546 267.875 544.65686 267.875 543 c
267.875 527.5 l
267.875 525.84314 266.53186 524.5 264.875 524.5 c
134.375 524.5 l
132.71814 524.5 131.375 525.84314 131.375 527.5 c
131.375 543 l
131.375 544.65686 132.71814 546 134.375 546 c
h
134.375 546 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -565 987 cm
699.375 441 m
829.875 441 l
831.53186 441 832.875 442.34314 832.875 444 c
832.875 459.5 l
832.875 461.15686 831.53186 462.5 829.875 462.5 c
699.375 462.5 l
697.71814 462.5 696.375 461.15686 696.375 459.5 c
696.375 444 l
696.375 442.34314 697.71814 441 699.375 441 c
h
699.375 441 m
S
/Cs1 SC
0 sc
0 i
720.60901 456.75 m
(,**+/+0.12)[ 10.368000 9.488000 9.488000 4.448000 10.080000 4.448000 11.552000 9.184000 5.328000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
134.63202 505.5 m
265.13202 505.5 l
266.78888 505.5 268.13202 504.15686 268.13202 502.5 c
268.13202 459 l
268.13202 457.34314 266.78888 456 265.13202 456 c
134.63202 456 l
132.97517 456 131.63202 457.34314 131.63202 459 c
131.63202 502.5 l
131.63202 504.15686 132.97517 505.5 134.63202 505.5 c
h
134.63202 505.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -565 987 cm
699.63202 481.5 m
830.13202 481.5 l
831.78888 481.5 833.13202 482.84314 833.13202 484.5 c
833.13202 528 l
833.13202 529.65686 831.78888 531 830.13202 531 c
699.63202 531 l
697.97516 531 696.63202 529.65686 696.63202 528 c
696.63202 484.5 l
696.63202 482.84314 697.97516 481.5 699.63202 481.5 c
h
699.63202 481.5 m
S
/Cs3 SC
0 sc
0 i
715.258 511.25 m
(3\(\(*+3.14\)1*)[ 9.184000 8.592000 8.592000 9.488000 4.448000 9.184000 9.184000 5.328000 12.128000 8.592000 5.040000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
79.434784 153.47134 m
169.55978 153.47134 l
171.21664 153.47134 172.55978 152.1282 172.55978 150.47134 c
172.55978 98.636353 l
172.55978 96.9795 171.21664 95.636353 169.55978 95.636353 c
79.434784 95.636353 l
77.777931 95.636353 76.434784 96.9795 76.434784 98.636353 c
76.434784 150.47134 l
76.434784 152.1282 77.777931 153.47134 79.434784 153.47134 c
h
79.434784 153.47134 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -565 987 cm
644.43475 833.52863 m
734.55975 833.52863 l
736.21661 833.52863 737.55975 834.87177 737.55975 836.52863 c
737.55975 888.36365 l
737.55975 890.02051 736.21661 891.36365 734.55975 891.36365 c
644.43475 891.36365 l
642.77795 891.36365 641.43475 890.02051 641.43475 888.36365 c
641.43475 836.52863 l
641.43475 834.87177 642.77795 833.52863 644.43475 833.52863 c
h
644.43475 833.52863 m
S
/Cs3 SC
0 sc
0 i
654.24127 849.77417 m
(56\)1\)7$\(1+)[ 11.552000 8.896000 8.592000 5.328000 8.592000 8.592000 5.040000 8.592000 5.328000 0.000000 ] xS
648.44128 868.22217 m
(829\(**%-:+)[ 9.776000 13.648000 9.488000 8.592000 9.488000 9.488000 3.552000 8.896000 9.184000 0.000000 ] xS
669.79327 886.67017 m
(;\)<\(1)[ 8.896000 8.592000 8.000000 8.592000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
224.06172 153.47134 m
314.18671 153.47134 l
315.84357 153.47134 317.18671 152.1282 317.18671 150.47134 c
317.18671 98.636353 l
317.18671 96.9795 315.84357 95.636353 314.18671 95.636353 c
224.06172 95.636353 l
222.40486 95.636353 221.06172 96.9795 221.06172 98.636353 c
221.06172 150.47134 l
221.06172 152.1282 222.40486 153.47134 224.06172 153.47134 c
h
224.06172 153.47134 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -565 987 cm
789.06171 833.52863 m
879.18671 833.52863 l
880.84357 833.52863 882.18671 834.87177 882.18671 836.52863 c
882.18671 888.36365 l
882.18671 890.02051 880.84357 891.36365 879.18671 891.36365 c
789.06171 891.36365 l
787.40485 891.36365 786.06171 890.02051 786.06171 888.36365 c
786.06171 836.52863 l
786.06171 834.87177 787.40485 833.52863 789.06171 833.52863 c
h
789.06171 833.52863 m
S
/Cs1 SC
0 sc
0 i
799.16425 849.77417 m
(=.>%$%.-\)#+)[ 10.368000 9.184000 8.000000 3.552000 5.040000 3.552000 9.184000 8.896000 8.592000 3.552000 0.000000 ] xS
793.06824 868.22217 m
(829\(**%-:+)[ 9.776000 13.648000 9.488000 8.592000 9.488000 9.488000 3.552000 8.896000 9.184000 0.000000 ] xS
814.42023 886.67017 m
(;\)<\(1)[ 8.896000 8.592000 8.000000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
119.12931 35.347862 m
292.5043 35.347862 l
292.5043 1.3478632 l
119.12931 1.3478632 l
h
119.12931 35.347862 m
f
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
684.12933 951.65216 m
857.50433 951.65216 l
857.50433 985.65216 l
684.12933 985.65216 l
h
684.12933 951.65216 m
S
/Cs3 SC
0 sc
0 i
697.3288 973.65216 m
(56\)1\)7$\(1+?\(@"\(-7\()[ 11.552000 8.896000 8.592000 5.328000 8.592000 8.592000 5.040000 8.592000 5.328000 4.448000 10.368000 8.592000 9.488000 8.896000 8.592000 8.896000 8.592000 0.000000 ] xS
2 w
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
770.81683 925.45789 m
689.49725 925.45789 l
689.49725 904.26367 l
S
0 i
CM
124.49728 92.336349 m
120.89729 82.736351 l
128.09729 82.736351 l
h
124.49728 92.336349 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
689.49725 894.66364 m
685.89728 904.26367 l
693.09729 904.26367 l
h
689.49725 894.66364 m
S
1 J
1 j
0.60000002 i
770.81683 951.65216 m
770.81683 925.45789 l
834.12421 925.45789 l
834.12421 904.26367 l
S
0 i
CM
269.12421 92.336349 m
265.52423 82.736351 l
272.72421 82.736351 l
h
269.12421 92.336349 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
834.12421 894.66364 m
830.52423 904.26367 l
837.72424 904.26367 l
h
834.12421 894.66364 m
S
1 J
1 j
0.60000002 i
764.625 604.6369 m
764.625 601.48651 l
S
0 i
CM
199.625 395.11349 m
196.02499 385.51349 l
203.22501 385.51349 l
h
199.625 395.11349 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
764.625 591.88654 m
761.02502 601.48651 l
768.22498 601.48651 l
h
764.625 591.88654 m
S
2.5 w
1 J
1 j
0.60000002 i
764.66357 567.08649 m
764.74146 545.3999 l
S
0 i
CM
199.77879 452.00003 m
195.84149 441.61411 l
203.64143 441.58609 l
h
199.77879 452.00003 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
764.77881 535 m
760.84149 545.38593 l
768.64142 545.41388 l
h
764.77881 535 m
S
1 J
1 j
0.60000002 i
764.76532 481.5 m
764.74359 476.89984 l
S
0 i
CM
199.69456 520.50006 m
195.84366 510.08176 l
203.64357 510.11856 l
h
199.69456 520.50006 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
764.69458 466.49997 m
760.84363 476.91824 l
768.64355 476.88144 l
h
764.69458 466.49997 m
S
2 w
1 J
1 j
0.60000002 i
764.7265 549.56384 m
657.12878 549.56384 l
657.12878 451.75 l
683.47498 451.75 l
S
0 i
CM
128.075 535.25 m
118.475 538.84998 l
118.475 531.65002 l
h
128.075 535.25 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
693.07501 451.75 m
683.47498 448.14999 l
683.47498 455.35001 l
h
693.07501 451.75 m
S
/Cs1 SC
0 sc
/F2.1[ 19 0 0 -19 0 0]sf
578.21698 568.5 m
(!")[ 13.718000 0.000000 ] xS
/Cs3 SC
0 sc
/F1.1[ 16 0 0 -16 0 0]sf
626 430.17303 m
(A1\)->B.12\(1+C#.7D)[ 7.712000 5.328000 8.592000 8.896000 8.000000 4.736000 9.184000 5.328000 13.648000 8.592000 5.328000 4.448000 10.960000 3.552000 9.184000 8.592000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
166.0668 189.52174 m
235.93478 189.52174 l
237.59164 189.52174 238.93478 188.17859 238.93478 186.52174 c
238.93478 171.02174 l
238.93478 169.36488 237.59164 168.02174 235.93478 168.02174 c
166.0668 168.02174 l
164.40996 168.02174 163.0668 169.36488 163.0668 171.02174 c
163.0668 186.52174 l
163.0668 188.17859 164.40996 189.52174 166.0668 189.52174 c
h
166.0668 189.52174 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -565 987 cm
731.06683 797.47827 m
800.93475 797.47827 l
802.59161 797.47827 803.93475 798.82141 803.93475 800.47827 c
803.93475 815.97827 l
803.93475 817.63513 802.59161 818.97827 800.93475 818.97827 c
731.06683 818.97827 l
729.40997 818.97827 728.06683 817.63513 728.06683 815.97827 c
728.06683 800.47827 l
728.06683 798.82141 729.40997 797.47827 731.06683 797.47827 c
h
731.06683 797.47827 m
S
/Cs1 SC
0 sc
0 i
751.3288 813.22827 m
(,**+)[ 10.368000 9.488000 9.488000 0.000000 ] xS
2 w
0.60000002 i
/Cs2 SC
0 0 0 sc
689.49725 833.52863 m
689.49725 808.14435 l
698.01184 808.14435 l
709.16681 808.22827 l
715.16681 808.22827 l
S
0 i
CM
159.76682 178.77174 m
150.16681 182.37173 l
150.16681 175.17174 l
h
159.76682 178.77174 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
724.76678 808.22827 m
715.16681 804.62823 l
715.16681 811.82825 l
h
724.76678 808.22827 m
S
1 J
1 j
0.60000002 i
834.12421 833.52863 m
834.12421 822.52863 l
833.88574 807.83545 l
822.83478 808.22827 l
816.83478 808.22827 l
S
0 i
CM
242.23479 178.77174 m
251.83478 175.17174 l
251.83478 182.37173 l
h
242.23479 178.77174 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
807.2348 808.22827 m
816.83478 811.82825 l
816.83478 804.62823 l
h
807.2348 808.22827 m
S
1 1 1 sc
CM
117.88203 640.73914 m
281.88202 640.73914 l
282.4343 640.73914 282.88202 640.29144 282.88202 639.73914 c
282.88202 611.73914 l
282.88202 611.18683 282.4343 610.73914 281.88202 610.73914 c
117.88203 610.73914 l
117.32974 610.73914 116.88203 611.18683 116.88203 611.73914 c
116.88203 639.73914 l
116.88203 640.29144 117.32974 640.73914 117.88203 640.73914 c
h
117.88203 640.73914 m
f
1 J
1 j
[
8
8
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
682.88202 346.26086 m
846.88202 346.26086 l
847.43433 346.26086 847.88202 346.70859 847.88202 347.26086 c
847.88202 375.26086 l
847.88202 375.81314 847.43433 376.26086 846.88202 376.26086 c
682.88202 376.26086 l
682.32971 376.26086 681.88202 375.81314 681.88202 375.26086 c
681.88202 347.26086 l
681.88202 346.70859 682.32971 346.26086 682.88202 346.26086 c
h
682.88202 346.26086 m
S
0 i
1 1 1 sc
CM
150.78622 615.94916 m
150.78622 634.38818 l
152.79782 636.43695 l
170.90215 636.43695 l
170.90215 617.99792 l
168.89055 615.94916 l
h
150.78622 615.94916 m
f
1 w
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
715.78625 371.05087 m
715.78625 352.61185 l
717.79779 350.56308 l
735.90216 350.56308 l
735.90216 369.00208 l
733.89056 371.05087 l
715.78625 371.05087 l
715.78625 352.61185 m
733.89056 352.61185 l
735.90216 350.56308 l
733.89056 352.61185 m
733.89056 371.05087 l
S
0 i
0 0 0 sc
CM
176.13164 615.94916 m
176.13164 634.38818 l
178.14323 636.43695 l
196.24756 636.43695 l
196.24756 617.99792 l
194.23596 615.94916 l
h
176.13164 615.94916 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
741.13165 371.05087 m
741.13165 352.61185 l
743.14325 350.56308 l
761.24756 350.56308 l
761.24756 369.00208 l
759.23596 371.05087 l
741.13165 371.05087 l
741.13165 352.61185 m
759.23596 352.61185 l
761.24756 350.56308 l
759.23596 352.61185 m
759.23596 371.05087 l
S
0 i
1 1 1 sc
CM
201.47705 615.94916 m
201.47705 634.38818 l
203.48865 636.43695 l
221.59297 636.43695 l
221.59297 617.99792 l
219.58138 615.94916 l
h
201.47705 615.94916 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
766.47705 371.05087 m
766.47705 352.61185 l
768.48865 350.56308 l
786.59296 350.56308 l
786.59296 369.00208 l
784.58136 371.05087 l
766.47705 371.05087 l
766.47705 352.61185 m
784.58136 352.61185 l
786.59296 350.56308 l
784.58136 352.61185 m
784.58136 371.05087 l
S
0 i
1 1 1 sc
CM
226.82246 615.94916 m
226.82246 634.38818 l
228.83405 636.43695 l
246.93839 636.43695 l
246.93839 617.99792 l
244.92679 615.94916 l
h
226.82246 615.94916 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
791.82245 371.05087 m
791.82245 352.61185 l
793.83405 350.56308 l
811.93835 350.56308 l
811.93835 369.00208 l
809.92676 371.05087 l
791.82245 371.05087 l
791.82245 352.61185 m
809.92676 352.61185 l
811.93835 350.56308 l
809.92676 352.61185 m
809.92676 371.05087 l
S
0 i
1 1 1 sc
CM
125.44082 615.94916 m
125.44082 634.38818 l
127.45241 636.43695 l
145.55673 636.43695 l
145.55673 617.99792 l
143.54515 615.94916 l
h
125.44082 615.94916 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
690.4408 371.05087 m
690.4408 352.61185 l
692.45239 350.56308 l
710.55676 350.56308 l
710.55676 369.00208 l
708.54517 371.05087 l
690.4408 371.05087 l
690.4408 352.61185 m
708.54517 352.61185 l
710.55676 350.56308 l
708.54517 352.61185 m
708.54517 371.05087 l
S
0 i
1 1 1 sc
CM
252.16788 615.94916 m
252.16788 634.38818 l
254.17946 636.43695 l
272.28378 636.43695 l
272.28378 617.99792 l
270.27219 615.94916 l
h
252.16788 615.94916 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
817.16785 371.05087 m
817.16785 352.61185 l
819.17944 350.56308 l
837.28381 350.56308 l
837.28381 369.00208 l
835.27222 371.05087 l
817.16785 371.05087 l
817.16785 352.61185 m
835.27222 352.61185 l
837.28381 350.56308 l
835.27222 352.61185 m
835.27222 371.05087 l
S
/Cs1 SC
0 sc
0 i
/F1.1[ 11 0 0 -11 0 0]sf
576.99866 359.33749 m
(?\(2\)-$%7+3\(\)$"1\()[ 7.128000 5.907000 9.383000 5.907000 6.116000 3.465000 2.442000 5.907000 3.058000 6.314000 5.907000 5.907000 3.465000 6.116000 3.465000 0.000000 ] xS
595.44012 371.64548 m
(?\(@"\(-7\()[ 7.128000 5.907000 6.523000 6.116000 5.907000 6.116000 5.907000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
118.71196 251.64549 m
282.71194 251.64549 l
283.26425 251.64549 283.71194 251.19777 283.71194 250.64549 c
283.71194 222.64549 l
283.71194 222.0932 283.26425 221.64549 282.71194 221.64549 c
118.71196 221.64549 l
118.15967 221.64549 117.71196 222.0932 117.71196 222.64549 c
117.71196 250.64549 l
117.71196 251.19777 118.15967 251.64549 118.71196 251.64549 c
h
118.71196 251.64549 m
f
2 w
[
8
8
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
683.71198 735.35449 m
847.71198 735.35449 l
848.26422 735.35449 848.71198 735.80225 848.71198 736.35449 c
848.71198 764.35449 l
848.71198 764.9068 848.26422 765.35449 847.71198 765.35449 c
683.71198 765.35449 l
683.15967 765.35449 682.71198 764.9068 682.71198 764.35449 c
682.71198 736.35449 l
682.71198 735.80225 683.15967 735.35449 683.71198 735.35449 c
h
683.71198 735.35449 m
S
0 i
1 1 1 sc
CM
151.61617 226.85548 m
151.61617 245.29451 l
153.62775 247.34329 l
171.73207 247.34329 l
171.73207 228.90427 l
169.72049 226.85548 l
h
151.61617 226.85548 m
f
1 w
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
716.61615 760.14453 m
716.61615 741.70551 l
718.62775 739.65674 l
736.73206 739.65674 l
736.73206 758.0957 l
734.72046 760.14453 l
716.61615 760.14453 l
716.61615 741.70551 m
734.72046 741.70551 l
736.73206 739.65674 l
734.72046 741.70551 m
734.72046 760.14453 l
S
0 i
0 0 0 sc
CM
176.96156 226.85548 m
176.96156 245.29451 l
178.97316 247.34329 l
197.07748 247.34329 l
197.07748 228.90427 l
195.0659 226.85548 l
h
176.96156 226.85548 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
741.96155 760.14453 m
741.96155 741.70551 l
743.97314 739.65674 l
762.07751 739.65674 l
762.07751 758.0957 l
760.06592 760.14453 l
741.96155 760.14453 l
741.96155 741.70551 m
760.06592 741.70551 l
762.07751 739.65674 l
760.06592 741.70551 m
760.06592 760.14453 l
S
0 i
1 1 1 sc
CM
202.30698 226.85548 m
202.30698 245.29451 l
204.31857 247.34329 l
222.4229 247.34329 l
222.4229 228.90427 l
220.4113 226.85548 l
h
202.30698 226.85548 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
767.30701 760.14453 m
767.30701 741.70551 l
769.31854 739.65674 l
787.42291 739.65674 l
787.42291 758.0957 l
785.41132 760.14453 l
767.30701 760.14453 l
767.30701 741.70551 m
785.41132 741.70551 l
787.42291 739.65674 l
785.41132 741.70551 m
785.41132 760.14453 l
S
0 i
1 1 1 sc
CM
227.65239 226.85548 m
227.65239 245.29451 l
229.66399 247.34329 l
247.76831 247.34329 l
247.76831 228.90427 l
245.75671 226.85548 l
h
227.65239 226.85548 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
792.6524 760.14453 m
792.6524 741.70551 l
794.664 739.65674 l
812.76831 739.65674 l
812.76831 758.0957 l
810.75671 760.14453 l
792.6524 760.14453 l
792.6524 741.70551 m
810.75671 741.70551 l
812.76831 739.65674 l
810.75671 741.70551 m
810.75671 760.14453 l
S
0 i
1 1 1 sc
CM
126.27074 226.85548 m
126.27074 245.29451 l
128.28233 247.34329 l
146.38667 247.34329 l
146.38667 228.90427 l
144.37508 226.85548 l
h
126.27074 226.85548 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
691.27075 760.14453 m
691.27075 741.70551 l
693.28235 739.65674 l
711.38666 739.65674 l
711.38666 758.0957 l
709.37506 760.14453 l
691.27075 760.14453 l
691.27075 741.70551 m
709.37506 741.70551 l
711.38666 739.65674 l
709.37506 741.70551 m
709.37506 760.14453 l
S
0 i
1 1 1 sc
CM
252.9978 226.85548 m
252.9978 245.29451 l
255.0094 247.34329 l
273.11371 247.34329 l
273.11371 228.90427 l
271.10214 226.85548 l
h
252.9978 226.85548 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -565 987 cm
817.9978 760.14453 m
817.9978 741.70551 l
820.0094 739.65674 l
838.11371 739.65674 l
838.11371 758.0957 l
836.10211 760.14453 l
817.9978 760.14453 l
817.9978 741.70551 m
836.10211 741.70551 l
838.11371 739.65674 l
836.10211 741.70551 m
836.10211 760.14453 l
S
2 w
/Cs4 SC
0 0 0 sc
765.94714 797.47827 m
765.8562 779.25433 l
S
0 i
CM
200.80827 217.34554 m
197.25624 207.72768 l
204.45615 207.76361 l
h
200.80827 217.34554 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
765.80829 769.65448 m
762.25623 779.27234 l
769.45612 779.23639 l
h
765.80829 769.65448 m
S
1 J
1 j
0.60000002 i
765.56818 734.35449 m
764.96332 667.03638 l
S
0 i
CM
199.87704 329.56323 m
196.36345 319.93127 l
203.56316 319.99597 l
h
199.87704 329.56323 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
764.87701 657.43677 m
761.36346 667.06873 l
768.56317 667.00403 l
h
764.87701 657.43677 m
S
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
765.06152 677.96521 m
657.57098 677.96521 l
657.57098 577.83649 l
683.47498 577.83649 l
S
0 i
CM
128.075 409.16348 m
118.475 412.76349 l
118.475 405.56348 l
h
128.075 409.16348 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
693.07501 577.83649 m
683.47498 574.23651 l
683.47498 581.43652 l
h
693.07501 577.83649 m
S
1 J
1 j
0.60000002 i
/Cs4 SC
0 0 0 sc
764.65552 441 m
764.79993 390.16083 l
S
0 i
CM
199.82721 606.43915 m
196.19995 596.84943 l
203.39992 596.82898 l
h
199.82721 606.43915 m
f
0 J
0 j
1 0 0 -1 -565 987 cm
764.82721 380.56085 m
761.19995 390.1506 l
768.3999 390.17105 l
h
764.82721 380.56085 m
S
/Cs1 SC
0 sc
612.43402 747.59259 m
(829\(**%-:)[ 6.721000 9.383000 6.523000 5.907000 6.523000 6.523000 2.442000 6.116000 0.000000 ] xS
615.90448 759.90063 m
(?\(@"\(-7\()[ 7.128000 5.907000 6.523000 6.116000 5.907000 6.116000 5.907000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
