%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 294.000000 332.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 294 332
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 294 332
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /B put
dup 34 /L put
dup 35 /S put
dup 36 /T put
dup 37 /M put
dup 38 /space put
dup 39 /e put
dup 40 /m put
dup 41 /a put
dup 42 /n put
dup 43 /t put
dup 44 /i put
dup 45 /c put
dup 46 /f put
dup 47 /u put
dup 48 /r put
dup 49 /s put
dup 50 /q put
dup 51 /D put
dup 52 /b put
dup 53 /l put
dup 54 /O put
dup 55 /p put
dup 56 /o put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC0000153C686561640000000000001A1800000036686865610000000000001A5000000024686D74780000000000001A74000000686C6F63610000000000001ADC000000366D6178700000000000001B1400000020707265700000000000001B340000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546






00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/D 3 def
/L 4 def
/M 5 def
/O 6 def
/S 7 def
/T 8 def
/a 9 def
/b 10 def
/c 11 def
/e 12 def
/f 13 def
/i 14 def
/l 15 def
/m 16 def
/n 17 def
/o 18 def
/p 19 def
/q 20 def
/r 21 def
/s 22 def
/t 23 def
/u 24 def
/uni2B91 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9264C9384F249EBFD8DD5BFBB9BE844B0E83BCFE532E688793A86D21BB50B73F1E4CB55B3332FA078523601D7D59E771AAD72B0C3150466C78199AB7245DDDDDB744BE485E1956EC9C8F9F94015171004093B221EFCEA2ED2C5237FD6408A1F600E98635D7DADBE3773BA9B8069D63102F93049876AAA8822F0F1F041FA1346C10EA965A143BBE01D165E31B8687728FC59FFA1F52C499B048A5E33F3CB2EB14529B5291745A937F962E0F543E59A18B9CCD2A91638E3B6AC091BF67C8CAE32D06C7098F4B4F70663C20502D47D28BBAAE13055B7E0DD16D2069213AC290CCED80C5D0B67D908CBEDCE8AFC363160E3D07E5C3C89BA5E1A8A4A04B8D378F717D55C069CC96573E94C13AC662F439B2B8E736D2579706EEB56E1FD1C0E8AD9DB6F461647A998CE25D24BF26F379594908469051AD1A1F22EB9F1C06EBA7CFD9E1C65BE449020B03ECF634B1E8780B96A5B3AAF42E1EF758EE3654645398326BB4EAC12D8467BC0D27DE1468F750190F11691416059F9C0D9F9E12F9B7815D51090F93A0E817428A9EA605F464526DCD1C7F761DC14687188E22EA97C83D8A49834F2CD5A8122B464619A5DAF81B0EE16E2066AF7F1E7684F93683D8ED3D916EDE175943E382D1616C2315F0384B7B16E52B9716CCB53687FDC746126E95B02AF3DD6F1C656E5309DEF04F527B60174B16F489910C80D2CE802E7724AAADF3A53C279F61DA2B5DEBDA169D865C2FA4C33897F03702A3B81722F9A10E7587F21B3248


F5C152EBE2B0CD6F30CA064157FF6C5AFFEB1A4E1CBB7A442A2F22A1EF8BF43EDDA4A615EC93307DAD041C7D575DE2D7D0F3C16D166D139EF094257CF00BCCE5B51F37D2BA81E4EDCF0B179C439A02A845F646A776B8B97EBE72F2C5D6B2F28E5AFAD948269E82329AA245427E43AD7F451176DD0881650BF63E7AD40FB654DE1F05212AF57F09F2B7EB6F329E8860FDF7990BD348C6C183C0AC36CCB045DA071EC99B17588A02FD7F41E7B71F016286E671F039B121513CD668C2B2CAE3FF31E0CB8C68300BE1BDC3FDC9347FB720DD531D0FA62F3A7AFFD57808CF5BA2A67D05B762B95C4D2CF021ED2CF8A3B2962E3E3103C7E39805520A931310B60631994414C5871ECFB7E17E22E4DEBDE3A2E28699426FB4275C5510E845AD5AA21D674A17F95B069549BF0C9B11FBBD0D3D6F4FD142DED4EE9AC2B89B1BA29207BD849E140CE9F7916BB8519113F37C816BC392D323445FB96AFB331CBAFEDB639D1C68DADFEBDA0C81B03E9ECE35DAB1C8C0B84F18C968F95358DA69D7017CE68E0740B170D2A684DC0F5AEF50CCCA05483180121499AF5E582AC4B730ED8823CB6420621066CFBBD9F3A533C544EA7ADB7D9AD3F01E6344C73C98F8E8778F39C463A5AE77588393AF364E6C701EB22222C631C346CA557A7030C57DDB06E5A494230EB4F2D44A8BFBAEEFB7FE74BA7DB16A3677E2F014FCF61AF5C0E961D1D0284ACDCE4E1EC996263730C10DE2E18F667DC273F2BD0BD61576E08F18AED98BC6AD5058A1873EA615CC86E78064A9F8F37C3EC032610EAC521C5455B7AE5C4B69A76E7A762C0A0D9D3FDD22DAE9726AFDB8537408806DC5915516A8621758F489D1674827BF06B696945F05B8B6B30A2D9350842B844C7F2BB95C6A9491311CFD01F7173205826E5A94177815DB78C74E7C9A485C5AAF0AC46AD3D7DAFB4C8233C8480A1092B7A305EEA7E0E13562D97D32CC3B0A59E5C981C5093D8983BC4E822C5FBBC671A9CBC2DC141BF68FEF0FD8A0591E11670980A521F104791643431805F3E98452649ED0D6989CDFFF9C2EAB9BD4362338997041465AA8DE4982C13AF5E5CCB0C0162C6EA2DB3DDF5649A6CC20264EC0590440E2FA4D3B44428D70147C58FC7B694B5F30CED0A82D60A325D0300D65C8114006FF959DB3BC433E56659B3D763E0D54CC78F6699DC8152FB3E9BD1A90D9D14CCCECEE44AA75E27659F9F691C7ED043CD4B27FAE88DAE06613A53E3BDD04664A18FF8FF0B7C0EA4BF609879EED2F92D37A5692EBD6BD2EB220C7B7299ADF1AF753648539610E06FD34987D488A97833D757BE3B307B4AE1D0A991412FDEBE7C3268871BBBEEB55AC61B1EA89BFCD6DD88A4E427121CBB51B8235AF80E54D22B88F7C956A4F5744D81625142487F3C5EF7604E826DB677ACBE9057534E9904F05C86DFA1621B590EE232937

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 294 332 rc
0 332 m
294 332 l
294 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-764.10254 1022.5983 m
1513.6752 1022.5983 l
1513.6752 -1007.3162 l
-764.10254 -1007.3162 l
h
-764.10254 1022.5983 m
f
1.2684824 32.5 m
180.5 32.5 l
180.5 4.0678391 l
1.2684824 4.0678391 l
h
1.2684824 32.5 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
840.26849 724.5 m
1019.5 724.5 l
1019.5 752.93219 l
840.26849 752.93219 l
h
840.26849 724.5 m
S
0 i
1 1 1 sc
CM
11.102789 27.992462 m
24.283285 27.992462 l
25.387854 27.992462 26.283285 27.097033 26.283285 25.992462 c
26.283285 10.575377 l
26.283285 9.4708071 25.387854 8.5753765 24.283285 8.5753765 c
11.102789 8.5753765 l
9.9982195 8.5753765 9.1027889 9.4708071 9.1027889 10.575377 c
9.1027889 25.992462 l
9.1027889 27.097033 9.9982195 27.992462 11.102789 27.992462 c
h
11.102789 27.992462 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
850.10278 729.00751 m
863.28326 729.00751 l
864.38788 729.00751 865.28326 729.90295 865.28326 731.00751 c
865.28326 746.42462 l
865.28326 747.52917 864.38788 748.42462 863.28326 748.42462 c
850.10278 748.42462 l
848.99823 748.42462 848.10278 747.52917 848.10278 746.42462 c
848.10278 731.00751 l
848.10278 729.90295 848.99823 729.00751 850.10278 729.00751 c
h
850.10278 729.00751 m
S
0 i
1 1 1 sc
CM
39.450607 27.992462 m
52.631104 27.992462 l
53.735672 27.992462 54.631104 27.097033 54.631104 25.992462 c
54.631104 10.575377 l
54.631104 9.4708071 53.735672 8.5753765 52.631104 8.5753765 c
39.450607 8.5753765 l
38.346039 8.5753765 37.450607 9.4708071 37.450607 10.575377 c
37.450607 25.992462 l
37.450607 27.097033 38.346039 27.992462 39.450607 27.992462 c
h
39.450607 27.992462 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
878.45062 729.00751 m
891.6311 729.00751 l
892.73566 729.00751 893.6311 729.90295 893.6311 731.00751 c
893.6311 746.42462 l
893.6311 747.52917 892.73566 748.42462 891.6311 748.42462 c
878.45062 748.42462 l
877.34601 748.42462 876.45062 747.52917 876.45062 746.42462 c
876.45062 731.00751 l
876.45062 729.90295 877.34601 729.00751 878.45062 729.00751 c
h
878.45062 729.00751 m
S
0 i
0.40000001 0.40000001 0.40000001 sc
CM
67.798424 27.992462 m
80.97892 27.992462 l
82.083488 27.992462 82.97892 27.097033 82.97892 25.992462 c
82.97892 10.575377 l
82.97892 9.4708071 82.083488 8.5753765 80.97892 8.5753765 c
67.798424 8.5753765 l
66.693855 8.5753765 65.798424 9.4708071 65.798424 10.575377 c
65.798424 25.992462 l
65.798424 27.097033 66.693855 27.992462 67.798424 27.992462 c
h
67.798424 27.992462 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
906.7984 729.00751 m
919.97894 729.00751 l
921.0835 729.00751 921.97894 729.90295 921.97894 731.00751 c
921.97894 746.42462 l
921.97894 747.52917 921.0835 748.42462 919.97894 748.42462 c
906.7984 748.42462 l
905.69385 748.42462 904.7984 747.52917 904.7984 746.42462 c
904.7984 731.00751 l
904.7984 729.90295 905.69385 729.00751 906.7984 729.00751 c
h
906.7984 729.00751 m
S
0 i
1 1 1 sc
CM
96.146248 27.992462 m
109.32674 27.992462 l
110.43131 27.992462 111.32674 27.097033 111.32674 25.992462 c
111.32674 10.575377 l
111.32674 9.4708071 110.43131 8.5753765 109.32674 8.5753765 c
96.146248 8.5753765 l
95.041672 8.5753765 94.146248 9.4708071 94.146248 10.575377 c
94.146248 25.992462 l
94.146248 27.097033 95.041672 27.992462 96.146248 27.992462 c
h
96.146248 27.992462 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
935.14624 729.00751 m
948.32672 729.00751 l
949.43134 729.00751 950.32672 729.90295 950.32672 731.00751 c
950.32672 746.42462 l
950.32672 747.52917 949.43134 748.42462 948.32672 748.42462 c
935.14624 748.42462 l
934.04169 748.42462 933.14624 747.52917 933.14624 746.42462 c
933.14624 731.00751 l
933.14624 729.90295 934.04169 729.00751 935.14624 729.00751 c
h
935.14624 729.00751 m
S
0 i
1 1 1 sc
CM
124.49406 27.992462 m
137.67456 27.992462 l
138.77913 27.992462 139.67456 27.097033 139.67456 25.992462 c
139.67456 10.575377 l
139.67456 9.4708071 138.77913 8.5753765 137.67456 8.5753765 c
124.49406 8.5753765 l
123.3895 8.5753765 122.49406 9.4708071 122.49406 10.575377 c
122.49406 25.992462 l
122.49406 27.097033 123.3895 27.992462 124.49406 27.992462 c
h
124.49406 27.992462 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
963.49408 729.00751 m
976.67456 729.00751 l
977.77911 729.00751 978.67456 729.90295 978.67456 731.00751 c
978.67456 746.42462 l
978.67456 747.52917 977.77911 748.42462 976.67456 748.42462 c
963.49408 748.42462 l
962.38947 748.42462 961.49408 747.52917 961.49408 746.42462 c
961.49408 731.00751 l
961.49408 729.90295 962.38947 729.00751 963.49408 729.00751 c
h
963.49408 729.00751 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
1051.076 615.10901 m
(!"#$%&)[ 8.220000 6.672000 7.776000 6.888000 10.452000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
153.12822 27.992462 m
166.30872 27.992462 l
167.41328 27.992462 168.30872 27.097033 168.30872 25.992462 c
168.30872 10.575377 l
168.30872 9.4708071 167.41328 8.5753765 166.30872 8.5753765 c
153.12822 8.5753765 l
152.02365 8.5753765 151.12822 9.4708071 151.12822 10.575377 c
151.12822 25.992462 l
151.12822 27.097033 152.02365 27.992462 153.12822 27.992462 c
h
153.12822 27.992462 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
992.12823 729.00751 m
1005.3087 729.00751 l
1006.4133 729.00751 1007.3087 729.90295 1007.3087 731.00751 c
1007.3087 746.42462 l
1007.3087 747.52917 1006.4133 748.42462 1005.3087 748.42462 c
992.12823 748.42462 l
991.02368 748.42462 990.12823 747.52917 990.12823 746.42462 c
990.12823 731.00751 l
990.12823 729.90295 991.02368 729.00751 992.12823 729.00751 c
h
992.12823 729.00751 m
S
0 i
1 1 1 sc
CM
3.2684824 97.613853 m
178.5 97.613853 l
179.60457 97.613853 180.5 96.718422 180.5 95.613853 c
180.5 64.940483 l
180.5 63.835915 179.60457 62.940483 178.5 62.940483 c
3.2684824 62.940483 l
2.163913 62.940483 1.2684824 63.835915 1.2684824 64.940483 c
1.2684824 95.613853 l
1.2684824 96.718422 2.163913 97.613853 3.2684824 97.613853 c
h
3.2684824 97.613853 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
842.26849 659.38617 m
1017.5 659.38617 l
1018.6046 659.38617 1019.5 660.28156 1019.5 661.38617 c
1019.5 692.05951 l
1019.5 693.16406 1018.6046 694.05951 1017.5 694.05951 c
842.26849 694.05951 l
841.16394 694.05951 840.26849 693.16406 840.26849 692.05951 c
840.26849 661.38617 l
840.26849 660.28156 841.16394 659.38617 842.26849 659.38617 c
h
842.26849 659.38617 m
S
0 i
1 1 1 sc
CM
33.589394 77.943016 m
36.684494 74.990448 36.684494 70.203392 33.589394 67.250824 c
30.494308 64.298241 25.476189 64.298241 22.381104 67.250824 c
19.286003 70.203392 19.286003 74.990448 22.381104 77.943016 c
25.476189 80.895599 30.494308 80.895599 33.589394 77.943016 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
872.58942 679.05701 m
875.68451 682.00952 875.68451 686.79663 872.58942 689.74921 c
869.49432 692.70178 864.4762 692.70178 861.3811 689.74921 c
858.28601 686.79663 858.28601 682.00952 861.3811 679.05701 c
864.4762 676.10437 869.49432 676.10437 872.58942 679.05701 c
S
0 i
1 1 1 sc
CM
62.118916 77.943016 m
65.214012 74.990448 65.214012 70.203392 62.118916 67.250824 c
59.02383 64.298241 54.005711 64.298241 50.910625 67.250824 c
47.815525 70.203392 47.815525 74.990448 50.910625 77.943016 c
54.005711 80.895599 59.02383 80.895599 62.118916 77.943016 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
901.1189 679.05701 m
904.21399 682.00952 904.21399 686.79663 901.1189 689.74921 c
898.0238 692.70178 893.00574 692.70178 889.91064 689.74921 c
886.81555 686.79663 886.81555 682.00952 889.91064 679.05701 c
893.00574 676.10437 898.0238 676.10437 901.1189 679.05701 c
S
0 i
1 1 1 sc
CM
89.954697 77.943016 m
93.049797 74.990448 93.049797 70.203392 89.954697 67.250824 c
86.859612 64.298241 81.841492 64.298241 78.746407 67.250824 c
75.651306 70.203392 75.651306 74.990448 78.746407 77.943016 c
81.841492 80.895599 86.859612 80.895599 89.954697 77.943016 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
928.95471 679.05701 m
932.0498 682.00952 932.0498 686.79663 928.95471 689.74921 c
925.85962 692.70178 920.84149 692.70178 917.7464 689.74921 c
914.65131 686.79663 914.65131 682.00952 917.7464 679.05701 c
920.84149 676.10437 925.85962 676.10437 928.95471 679.05701 c
S
0 i
1 1 1 sc
CM
117.79048 77.943016 m
120.88558 74.990448 120.88558 70.203392 117.79048 67.250824 c
114.6954 64.298241 109.67728 64.298241 106.58219 67.250824 c
103.48709 70.203392 103.48709 74.990448 106.58219 77.943016 c
109.67728 80.895599 114.6954 80.895599 117.79048 77.943016 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
956.79047 679.05701 m
959.88556 682.00952 959.88556 686.79663 956.79047 689.74921 c
953.69537 692.70178 948.67731 692.70178 945.58221 689.74921 c
942.48712 686.79663 942.48712 682.00952 945.58221 679.05701 c
948.67731 676.10437 953.69537 676.10437 956.79047 679.05701 c
S
0 i
1 1 1 sc
CM
145.62627 77.943016 m
148.72136 74.990448 148.72136 70.203392 145.62627 67.250824 c
142.53117 64.298241 137.51306 64.298241 134.41797 67.250824 c
131.32288 70.203392 131.32288 74.990448 134.41797 77.943016 c
137.51306 80.895599 142.53117 80.895599 145.62627 77.943016 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
984.62628 679.05701 m
987.72137 682.00952 987.72137 686.79663 984.62628 689.74921 c
981.53119 692.70178 976.51306 692.70178 973.41797 689.74921 c
970.32288 686.79663 970.32288 682.00952 973.41797 679.05701 c
976.51306 676.10437 981.53119 676.10437 984.62628 679.05701 c
S
0 i
1 1 1 sc
CM
46.654591 93.064079 m
49.749691 90.111511 49.749691 85.324455 46.654591 82.371887 c
43.559505 79.419304 38.541386 79.419304 35.446301 82.371887 c
32.3512 85.324455 32.3512 90.111511 35.446301 93.064079 c
38.541386 96.01667 43.559505 96.01667 46.654591 93.064079 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
885.6546 663.93591 m
888.74969 666.88849 888.74969 671.67554 885.6546 674.62811 c
882.55951 677.58069 877.54138 677.58069 874.44629 674.62811 c
871.3512 671.67554 871.3512 666.88849 874.44629 663.93591 c
877.54138 660.98334 882.55951 660.98334 885.6546 663.93591 c
S
0 i
1 1 1 sc
CM
75.184113 93.064079 m
78.279213 90.111511 78.279213 85.324455 75.184113 82.371887 c
72.089027 79.419304 67.070908 79.419304 63.975822 82.371887 c
60.880722 85.324455 60.880722 90.111511 63.975822 93.064079 c
67.070908 96.01667 72.089027 96.01667 75.184113 93.064079 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
914.18408 663.93591 m
917.27924 666.88849 917.27924 671.67554 914.18408 674.62811 c
911.08905 677.58069 906.07092 677.58069 902.97583 674.62811 c
899.88074 671.67554 899.88074 666.88849 902.97583 663.93591 c
906.07092 660.98334 911.08905 660.98334 914.18408 663.93591 c
S
0 i
1 1 1 sc
CM
103.0199 93.064079 m
106.115 90.111511 106.115 85.324455 103.0199 82.371887 c
99.924812 79.419304 94.906693 79.419304 91.811607 82.371887 c
88.716507 85.324455 88.716507 90.111511 91.811607 93.064079 c
94.906693 96.01667 99.924812 96.01667 103.0199 93.064079 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
942.0199 663.93591 m
945.11499 666.88849 945.11499 671.67554 942.0199 674.62811 c
938.9248 677.58069 933.90668 677.58069 930.81158 674.62811 c
927.71649 671.67554 927.71649 666.88849 930.81158 663.93591 c
933.90668 660.98334 938.9248 660.98334 942.0199 663.93591 c
S
0 i
1 1 1 sc
CM
130.85568 93.064079 m
133.95078 90.111511 133.95078 85.324455 130.85568 82.371887 c
127.7606 79.419304 122.74248 79.419304 119.64739 82.371887 c
116.55229 85.324455 116.55229 90.111511 119.64739 93.064079 c
122.74248 96.01667 127.7606 96.01667 130.85568 93.064079 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
969.85565 663.93591 m
972.95081 666.88849 972.95081 671.67554 969.85565 674.62811 c
966.76062 677.58069 961.74249 677.58069 958.6474 674.62811 c
955.55231 671.67554 955.55231 666.88849 958.6474 663.93591 c
961.74249 660.98334 966.76062 660.98334 969.85565 663.93591 c
S
0 i
1 1 1 sc
CM
158.69147 93.064079 m
161.78656 90.111511 161.78656 85.324455 158.69147 82.371887 c
155.59637 79.419304 150.57826 79.419304 147.48317 82.371887 c
144.38808 85.324455 144.38808 90.111511 147.48317 93.064079 c
150.57826 96.01667 155.59637 96.01667 158.69147 93.064079 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
997.69147 663.93591 m
1000.7866 666.88849 1000.7866 671.67554 997.69147 674.62811 c
994.59637 677.58069 989.57825 677.58069 986.48315 674.62811 c
983.38806 671.67554 983.38806 666.88849 986.48315 663.93591 c
989.57825 660.98334 994.59637 660.98334 997.69147 663.93591 c
S
0.5 w
874.91071 684.40308 m
882.38928 684.40308 l
S
0 i
CM
47.389301 72.596916 m
43.389301 74.096916 l
43.389301 71.096916 l
h
47.389301 72.596916 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
886.38928 684.40308 m
882.38928 682.90308 l
882.38928 685.90308 l
h
886.38928 684.40308 m
S
1 J
1 j
0.60000002 i
903.44025 684.40308 m
910.2251 684.40308 l
S
0 i
CM
75.225082 72.596916 m
71.225082 74.096916 l
71.225082 71.096916 l
h
75.225082 72.596916 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
914.2251 684.40308 m
910.2251 682.90308 l
910.2251 685.90308 l
h
914.2251 684.40308 m
S
1 J
1 j
0.60000002 i
931.276 684.40308 m
938.06085 684.40308 l
S
0 i
CM
103.06087 72.596916 m
99.060867 74.096916 l
99.060867 71.096916 l
h
103.06087 72.596916 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
942.06085 684.40308 m
938.06085 682.90308 l
938.06085 685.90308 l
h
942.06085 684.40308 m
S
1 1 1 sc
CM
173.46205 77.943016 m
176.55714 74.990448 176.55714 70.203392 173.46205 67.250824 c
170.36696 64.298241 165.34885 64.298241 162.25375 67.250824 c
159.15866 70.203392 159.15866 74.990448 162.25375 77.943016 c
165.34885 80.895599 170.36696 80.895599 173.46205 77.943016 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
1012.462 679.05701 m
1015.5571 682.00952 1015.5571 686.79663 1012.462 689.74921 c
1009.3669 692.70178 1004.3488 692.70178 1001.2538 689.74921 c
998.15863 686.79663 998.15863 682.00952 1001.2538 679.05701 c
1004.3488 676.10437 1009.3669 676.10437 1012.462 679.05701 c
S
0 i
1 1 1 sc
CM
18.125069 93.064079 m
21.220169 90.111511 21.220169 85.324455 18.125069 82.371887 c
15.029984 79.419304 10.011865 79.419304 6.9167805 82.371887 c
3.8216796 85.324455 3.8216796 90.111511 6.9167805 93.064079 c
10.011865 96.01667 15.029984 96.01667 18.125069 93.064079 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
857.12506 663.93591 m
860.22015 666.88849 860.22015 671.67554 857.12506 674.62811 c
854.02997 677.58069 849.01184 677.58069 845.91681 674.62811 c
842.82166 671.67554 842.82166 666.88849 845.91681 663.93591 c
849.01184 660.98334 854.02997 660.98334 857.12506 663.93591 c
S
0.5 w
959.11182 684.40308 m
965.89667 684.40308 l
S
0 i
CM
130.89665 72.596916 m
126.89665 74.096916 l
126.89665 71.096916 l
h
130.89665 72.596916 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
969.89667 684.40308 m
965.89667 682.90308 l
965.89667 685.90308 l
h
969.89667 684.40308 m
S
1 J
1 j
0.60000002 i
986.94757 684.40308 m
993.73242 684.40308 l
S
0 i
CM
158.73244 72.596916 m
154.73244 74.096916 l
154.73244 71.096916 l
h
158.73244 72.596916 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
997.73242 684.40308 m
993.73242 682.90308 l
993.73242 685.90308 l
h
997.73242 684.40308 m
S
1 J
1 j
0.60000002 i
984.16187 669.28204 m
977.37701 669.28204 l
S
0 i
CM
134.377 87.717987 m
138.377 86.217987 l
138.377 89.217987 l
h
134.377 87.717987 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
973.37701 669.28204 m
977.37701 670.78204 l
977.37701 667.78204 l
h
973.37701 669.28204 m
S
1 J
1 j
0.60000002 i
956.32605 669.28204 m
949.5412 669.28204 l
S
0 i
CM
106.54122 87.717987 m
110.54122 86.217987 l
110.54122 89.217987 l
h
106.54122 87.717987 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
945.5412 669.28204 m
949.5412 670.78204 l
949.5412 667.78204 l
h
945.5412 669.28204 m
S
1 J
1 j
0.60000002 i
928.4903 669.28204 m
921.70544 669.28204 l
S
0 i
CM
78.705437 87.717987 m
82.705437 86.217987 l
82.705437 89.217987 l
h
78.705437 87.717987 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
917.70544 669.28204 m
921.70544 670.78204 l
921.70544 667.78204 l
h
917.70544 669.28204 m
S
1 J
1 j
0.60000002 i
900.65448 669.28204 m
893.1759 669.28204 l
S
0 i
CM
50.175915 87.717987 m
54.175915 86.217987 l
54.175915 89.217987 l
h
50.175915 87.717987 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
889.1759 669.28204 m
893.1759 670.78204 l
893.1759 667.78204 l
h
889.1759 669.28204 m
S
1 J
1 j
0.60000002 i
872.125 669.28204 m
864.64642 669.28204 l
S
0 i
CM
21.646395 87.717987 m
25.646395 86.217987 l
25.646395 89.217987 l
h
21.646395 87.717987 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
860.64642 669.28204 m
864.64642 670.78204 l
864.64642 667.78204 l
h
860.64642 669.28204 m
S
1 1 1 sc
CM
3.2684824 162.72771 m
178.5 162.72771 l
179.60457 162.72771 180.5 161.83228 180.5 160.72771 c
180.5 130.05434 l
180.5 128.94977 179.60457 128.05434 178.5 128.05434 c
3.2684824 128.05434 l
2.163913 128.05434 1.2684824 128.94977 1.2684824 130.05434 c
1.2684824 160.72771 l
1.2684824 161.83228 2.163913 162.72771 3.2684824 162.72771 c
h
3.2684824 162.72771 m
f
1 w
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
842.26849 594.27228 m
1017.5 594.27228 l
1018.6046 594.27228 1019.5 595.16772 1019.5 596.27228 c
1019.5 626.94568 l
1019.5 628.05023 1018.6046 628.94568 1017.5 628.94568 c
842.26849 628.94568 l
841.16394 628.94568 840.26849 628.05023 840.26849 626.94568 c
840.26849 596.27228 l
840.26849 595.16772 841.16394 594.27228 842.26849 594.27228 c
h
842.26849 594.27228 m
S
0 i
1 1 1 sc
CM
33.589394 143.05687 m
36.684494 140.10429 36.684494 135.31725 33.589394 132.36467 c
30.494308 129.41209 25.476189 129.41209 22.381104 132.36467 c
19.286003 135.31725 19.286003 140.10429 22.381104 143.05687 c
25.476189 146.00946 30.494308 146.00946 33.589394 143.05687 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
872.58942 613.94312 m
875.68451 616.89569 875.68451 621.68274 872.58942 624.63531 c
869.49432 627.58789 864.4762 627.58789 861.3811 624.63531 c
858.28601 621.68274 858.28601 616.89569 861.3811 613.94312 c
864.4762 610.99054 869.49432 610.99054 872.58942 613.94312 c
S
0 i
1 1 1 sc
CM
62.118916 143.05687 m
65.214012 140.10429 65.214012 135.31725 62.118916 132.36467 c
59.02383 129.41209 54.005711 129.41209 50.910625 132.36467 c
47.815525 135.31725 47.815525 140.10429 50.910625 143.05687 c
54.005711 146.00946 59.02383 146.00946 62.118916 143.05687 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
901.1189 613.94312 m
904.21399 616.89569 904.21399 621.68274 901.1189 624.63531 c
898.0238 627.58789 893.00574 627.58789 889.91064 624.63531 c
886.81555 621.68274 886.81555 616.89569 889.91064 613.94312 c
893.00574 610.99054 898.0238 610.99054 901.1189 613.94312 c
S
0 i
1 1 1 sc
CM
89.954697 143.05687 m
93.049797 140.10429 93.049797 135.31725 89.954697 132.36467 c
86.859612 129.41209 81.841492 129.41209 78.746407 132.36467 c
75.651306 135.31725 75.651306 140.10429 78.746407 143.05687 c
81.841492 146.00946 86.859612 146.00946 89.954697 143.05687 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
928.95471 613.94312 m
932.0498 616.89569 932.0498 621.68274 928.95471 624.63531 c
925.85962 627.58789 920.84149 627.58789 917.7464 624.63531 c
914.65131 621.68274 914.65131 616.89569 917.7464 613.94312 c
920.84149 610.99054 925.85962 610.99054 928.95471 613.94312 c
S
0 i
1 1 1 sc
CM
117.79048 143.05687 m
120.88558 140.10429 120.88558 135.31725 117.79048 132.36467 c
114.6954 129.41209 109.67728 129.41209 106.58219 132.36467 c
103.48709 135.31725 103.48709 140.10429 106.58219 143.05687 c
109.67728 146.00946 114.6954 146.00946 117.79048 143.05687 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
956.79047 613.94312 m
959.88556 616.89569 959.88556 621.68274 956.79047 624.63531 c
953.69537 627.58789 948.67731 627.58789 945.58221 624.63531 c
942.48712 621.68274 942.48712 616.89569 945.58221 613.94312 c
948.67731 610.99054 953.69537 610.99054 956.79047 613.94312 c
S
0 i
1 1 1 sc
CM
145.62627 143.05687 m
148.72136 140.10429 148.72136 135.31725 145.62627 132.36467 c
142.53117 129.41209 137.51306 129.41209 134.41797 132.36467 c
131.32288 135.31725 131.32288 140.10429 134.41797 143.05687 c
137.51306 146.00946 142.53117 146.00946 145.62627 143.05687 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
984.62628 613.94312 m
987.72137 616.89569 987.72137 621.68274 984.62628 624.63531 c
981.53119 627.58789 976.51306 627.58789 973.41797 624.63531 c
970.32288 621.68274 970.32288 616.89569 973.41797 613.94312 c
976.51306 610.99054 981.53119 610.99054 984.62628 613.94312 c
S
0 i
1 1 1 sc
CM
46.654591 158.17793 m
49.749691 155.22537 49.749691 150.43831 46.654591 147.48573 c
43.559505 144.53316 38.541386 144.53316 35.446301 147.48573 c
32.3512 150.43831 32.3512 155.22537 35.446301 158.17793 c
38.541386 161.13052 43.559505 161.13052 46.654591 158.17793 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
885.6546 598.82208 m
888.74969 601.77466 888.74969 606.56171 885.6546 609.51428 c
882.55951 612.46686 877.54138 612.46686 874.44629 609.51428 c
871.3512 606.56171 871.3512 601.77466 874.44629 598.82208 c
877.54138 595.86951 882.55951 595.86951 885.6546 598.82208 c
S
0 i
1 1 1 sc
CM
75.184113 158.17793 m
78.279213 155.22537 78.279213 150.43831 75.184113 147.48573 c
72.089027 144.53316 67.070908 144.53316 63.975822 147.48573 c
60.880722 150.43831 60.880722 155.22537 63.975822 158.17793 c
67.070908 161.13052 72.089027 161.13052 75.184113 158.17793 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
914.18408 598.82208 m
917.27924 601.77466 917.27924 606.56171 914.18408 609.51428 c
911.08905 612.46686 906.07092 612.46686 902.97583 609.51428 c
899.88074 606.56171 899.88074 601.77466 902.97583 598.82208 c
906.07092 595.86951 911.08905 595.86951 914.18408 598.82208 c
S
0 i
1 1 1 sc
CM
103.0199 158.17793 m
106.115 155.22537 106.115 150.43831 103.0199 147.48573 c
99.924812 144.53316 94.906693 144.53316 91.811607 147.48573 c
88.716507 150.43831 88.716507 155.22537 91.811607 158.17793 c
94.906693 161.13052 99.924812 161.13052 103.0199 158.17793 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
942.0199 598.82208 m
945.11499 601.77466 945.11499 606.56171 942.0199 609.51428 c
938.9248 612.46686 933.90668 612.46686 930.81158 609.51428 c
927.71649 606.56171 927.71649 601.77466 930.81158 598.82208 c
933.90668 595.86951 938.9248 595.86951 942.0199 598.82208 c
S
0 i
1 1 1 sc
CM
130.85568 158.17793 m
133.95078 155.22537 133.95078 150.43831 130.85568 147.48573 c
127.7606 144.53316 122.74248 144.53316 119.64739 147.48573 c
116.55229 150.43831 116.55229 155.22537 119.64739 158.17793 c
122.74248 161.13052 127.7606 161.13052 130.85568 158.17793 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
969.85565 598.82208 m
972.95081 601.77466 972.95081 606.56171 969.85565 609.51428 c
966.76062 612.46686 961.74249 612.46686 958.6474 609.51428 c
955.55231 606.56171 955.55231 601.77466 958.6474 598.82208 c
961.74249 595.86951 966.76062 595.86951 969.85565 598.82208 c
S
0 i
1 1 1 sc
CM
158.69147 158.17793 m
161.78656 155.22537 161.78656 150.43831 158.69147 147.48573 c
155.59637 144.53316 150.57826 144.53316 147.48317 147.48573 c
144.38808 150.43831 144.38808 155.22537 147.48317 158.17793 c
150.57826 161.13052 155.59637 161.13052 158.69147 158.17793 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
997.69147 598.82208 m
1000.7866 601.77466 1000.7866 606.56171 997.69147 609.51428 c
994.59637 612.46686 989.57825 612.46686 986.48315 609.51428 c
983.38806 606.56171 983.38806 601.77466 986.48315 598.82208 c
989.57825 595.86951 994.59637 595.86951 997.69147 598.82208 c
S
0.5 w
874.91071 619.28925 m
882.38928 619.28925 l
S
0 i
CM
47.389301 137.71077 m
43.389301 139.21077 l
43.389301 136.21077 l
h
47.389301 137.71077 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
886.38928 619.28925 m
882.38928 617.78925 l
882.38928 620.78925 l
h
886.38928 619.28925 m
S
1 J
1 j
0.60000002 i
903.44025 619.28925 m
910.2251 619.28925 l
S
0 i
CM
75.225082 137.71077 m
71.225082 139.21077 l
71.225082 136.21077 l
h
75.225082 137.71077 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
914.2251 619.28925 m
910.2251 617.78925 l
910.2251 620.78925 l
h
914.2251 619.28925 m
S
1 J
1 j
0.60000002 i
931.276 619.28925 m
938.06085 619.28925 l
S
0 i
CM
103.06087 137.71077 m
99.060867 139.21077 l
99.060867 136.21077 l
h
103.06087 137.71077 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
942.06085 619.28925 m
938.06085 617.78925 l
938.06085 620.78925 l
h
942.06085 619.28925 m
S
1 1 1 sc
CM
173.46205 143.05687 m
176.55714 140.10429 176.55714 135.31725 173.46205 132.36467 c
170.36696 129.41209 165.34885 129.41209 162.25375 132.36467 c
159.15866 135.31725 159.15866 140.10429 162.25375 143.05687 c
165.34885 146.00946 170.36696 146.00946 173.46205 143.05687 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
1012.462 613.94312 m
1015.5571 616.89569 1015.5571 621.68274 1012.462 624.63531 c
1009.3669 627.58789 1004.3488 627.58789 1001.2538 624.63531 c
998.15863 621.68274 998.15863 616.89569 1001.2538 613.94312 c
1004.3488 610.99054 1009.3669 610.99054 1012.462 613.94312 c
S
0 i
1 1 1 sc
CM
18.125069 158.17793 m
21.220169 155.22537 21.220169 150.43831 18.125069 147.48573 c
15.029984 144.53316 10.011865 144.53316 6.9167805 147.48573 c
3.8216796 150.43831 3.8216796 155.22537 6.9167805 158.17793 c
10.011865 161.13052 15.029984 161.13052 18.125069 158.17793 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -839 757 cm
857.12506 598.82208 m
860.22015 601.77466 860.22015 606.56171 857.12506 609.51428 c
854.02997 612.46686 849.01184 612.46686 845.91681 609.51428 c
842.82166 606.56171 842.82166 601.77466 845.91681 598.82208 c
849.01184 595.86951 854.02997 595.86951 857.12506 598.82208 c
S
0.5 w
959.11182 619.28925 m
965.89667 619.28925 l
S
0 i
CM
130.89665 137.71077 m
126.89665 139.21077 l
126.89665 136.21077 l
h
130.89665 137.71077 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
969.89667 619.28925 m
965.89667 617.78925 l
965.89667 620.78925 l
h
969.89667 619.28925 m
S
1 J
1 j
0.60000002 i
986.94757 619.28925 m
993.73242 619.28925 l
S
0 i
CM
158.73244 137.71077 m
154.73244 139.21077 l
154.73244 136.21077 l
h
158.73244 137.71077 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
997.73242 619.28925 m
993.73242 617.78925 l
993.73242 620.78925 l
h
997.73242 619.28925 m
S
1 J
1 j
0.60000002 i
984.16187 604.16815 m
977.37701 604.16815 l
S
0 i
CM
134.377 152.83183 m
138.377 151.33183 l
138.377 154.33183 l
h
134.377 152.83183 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
973.37701 604.16815 m
977.37701 605.66815 l
977.37701 602.66815 l
h
973.37701 604.16815 m
S
1 J
1 j
0.60000002 i
956.32605 604.16815 m
949.5412 604.16815 l
S
0 i
CM
106.54122 152.83183 m
110.54122 151.33183 l
110.54122 154.33183 l
h
106.54122 152.83183 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
945.5412 604.16815 m
949.5412 605.66815 l
949.5412 602.66815 l
h
945.5412 604.16815 m
S
1 J
1 j
0.60000002 i
928.4903 604.16815 m
921.70544 604.16815 l
S
0 i
CM
78.705437 152.83183 m
82.705437 151.33183 l
82.705437 154.33183 l
h
78.705437 152.83183 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
917.70544 604.16815 m
921.70544 605.66815 l
921.70544 602.66815 l
h
917.70544 604.16815 m
S
1 J
1 j
0.60000002 i
900.65448 604.16815 m
893.1759 604.16815 l
S
0 i
CM
50.175915 152.83183 m
54.175915 151.33183 l
54.175915 154.33183 l
h
50.175915 152.83183 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
889.1759 604.16815 m
893.1759 605.66815 l
893.1759 602.66815 l
h
889.1759 604.16815 m
S
1 J
1 j
0.60000002 i
872.125 604.16815 m
864.64642 604.16815 l
S
0 i
CM
21.646395 152.83183 m
25.646395 151.33183 l
25.646395 154.33183 l
h
21.646395 152.83183 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
860.64642 604.16815 m
864.64642 605.66815 l
864.64642 602.66815 l
h
860.64642 604.16815 m
S
2 w
1 J
1 j
0.60000002 i
929.88422 724.5 m
929.88422 706.95953 l
S
0 i
CM
90.884239 59.640484 m
87.284241 50.040485 l
94.484238 50.040485 l
h
90.884239 59.640484 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
929.88422 697.3595 m
926.28424 706.95953 l
933.48425 706.95953 l
h
929.88422 697.3595 m
S
1 J
1 j
0.60000002 i
929.88422 659.38617 m
929.88422 641.84564 l
S
0 i
CM
90.884239 124.75433 m
87.284241 115.15434 l
94.484238 115.15434 l
h
90.884239 124.75433 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
929.88422 632.24567 m
926.28424 641.84564 l
933.48425 641.84564 l
h
929.88422 632.24567 m
S
/Cs1 SC
0 sc
1031.0439 735.38007 m
(#'\(\)*+,-&.'\)+/0')[ 7.776000 6.444000 10.236000 6.444000 6.672000 3.780000 2.664000 6.444000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 0.000000 ] xS
1048.714 749.71606 m
(&1'2/'*-')[ 3.336000 6.000000 6.444000 7.116000 6.672000 6.444000 6.672000 6.444000 0.000000 ] xS
1051.076 681.05286 m
(!"#$%&)[ 8.220000 6.672000 7.776000 6.888000 10.452000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1.2684824 221.60034 m
180.5 221.60034 l
180.5 193.16818 l
1.2684824 193.16818 l
h
1.2684824 221.60034 m
f
1 w
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
840.26849 535.39966 m
1019.5 535.39966 l
1019.5 563.83179 l
840.26849 563.83179 l
h
840.26849 535.39966 m
S
0 i
1 1 1 sc
CM
11.102789 217.0928 m
24.283285 217.0928 l
25.387854 217.0928 26.283285 216.19739 26.283285 215.0928 c
26.283285 199.67572 l
26.283285 198.57115 25.387854 197.67572 24.283285 197.67572 c
11.102789 197.67572 l
9.9982195 197.67572 9.1027889 198.57115 9.1027889 199.67572 c
9.1027889 215.0928 l
9.1027889 216.19739 9.9982195 217.0928 11.102789 217.0928 c
h
11.102789 217.0928 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
850.10278 539.90717 m
863.28326 539.90717 l
864.38788 539.90717 865.28326 540.80261 865.28326 541.90717 c
865.28326 557.32428 l
865.28326 558.42883 864.38788 559.32428 863.28326 559.32428 c
850.10278 559.32428 l
848.99823 559.32428 848.10278 558.42883 848.10278 557.32428 c
848.10278 541.90717 l
848.10278 540.80261 848.99823 539.90717 850.10278 539.90717 c
h
850.10278 539.90717 m
S
0 i
1 1 1 sc
CM
39.450607 217.0928 m
52.631104 217.0928 l
53.735672 217.0928 54.631104 216.19739 54.631104 215.0928 c
54.631104 199.67572 l
54.631104 198.57115 53.735672 197.67572 52.631104 197.67572 c
39.450607 197.67572 l
38.346039 197.67572 37.450607 198.57115 37.450607 199.67572 c
37.450607 215.0928 l
37.450607 216.19739 38.346039 217.0928 39.450607 217.0928 c
h
39.450607 217.0928 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
878.45062 539.90717 m
891.6311 539.90717 l
892.73566 539.90717 893.6311 540.80261 893.6311 541.90717 c
893.6311 557.32428 l
893.6311 558.42883 892.73566 559.32428 891.6311 559.32428 c
878.45062 559.32428 l
877.34601 559.32428 876.45062 558.42883 876.45062 557.32428 c
876.45062 541.90717 l
876.45062 540.80261 877.34601 539.90717 878.45062 539.90717 c
h
878.45062 539.90717 m
S
0 i
0.40000001 0.40000001 0.40000001 sc
CM
67.798424 217.0928 m
80.97892 217.0928 l
82.083488 217.0928 82.97892 216.19739 82.97892 215.0928 c
82.97892 199.67572 l
82.97892 198.57115 82.083488 197.67572 80.97892 197.67572 c
67.798424 197.67572 l
66.693855 197.67572 65.798424 198.57115 65.798424 199.67572 c
65.798424 215.0928 l
65.798424 216.19739 66.693855 217.0928 67.798424 217.0928 c
h
67.798424 217.0928 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
906.7984 539.90717 m
919.97894 539.90717 l
921.0835 539.90717 921.97894 540.80261 921.97894 541.90717 c
921.97894 557.32428 l
921.97894 558.42883 921.0835 559.32428 919.97894 559.32428 c
906.7984 559.32428 l
905.69385 559.32428 904.7984 558.42883 904.7984 557.32428 c
904.7984 541.90717 l
904.7984 540.80261 905.69385 539.90717 906.7984 539.90717 c
h
906.7984 539.90717 m
S
0 i
1 1 1 sc
CM
96.146248 217.0928 m
109.32674 217.0928 l
110.43131 217.0928 111.32674 216.19739 111.32674 215.0928 c
111.32674 199.67572 l
111.32674 198.57115 110.43131 197.67572 109.32674 197.67572 c
96.146248 197.67572 l
95.041672 197.67572 94.146248 198.57115 94.146248 199.67572 c
94.146248 215.0928 l
94.146248 216.19739 95.041672 217.0928 96.146248 217.0928 c
h
96.146248 217.0928 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
935.14624 539.90717 m
948.32672 539.90717 l
949.43134 539.90717 950.32672 540.80261 950.32672 541.90717 c
950.32672 557.32428 l
950.32672 558.42883 949.43134 559.32428 948.32672 559.32428 c
935.14624 559.32428 l
934.04169 559.32428 933.14624 558.42883 933.14624 557.32428 c
933.14624 541.90717 l
933.14624 540.80261 934.04169 539.90717 935.14624 539.90717 c
h
935.14624 539.90717 m
S
0 i
1 1 1 sc
CM
124.49406 217.0928 m
137.67456 217.0928 l
138.77913 217.0928 139.67456 216.19739 139.67456 215.0928 c
139.67456 199.67572 l
139.67456 198.57115 138.77913 197.67572 137.67456 197.67572 c
124.49406 197.67572 l
123.3895 197.67572 122.49406 198.57115 122.49406 199.67572 c
122.49406 215.0928 l
122.49406 216.19739 123.3895 217.0928 124.49406 217.0928 c
h
124.49406 217.0928 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
963.49408 539.90717 m
976.67456 539.90717 l
977.77911 539.90717 978.67456 540.80261 978.67456 541.90717 c
978.67456 557.32428 l
978.67456 558.42883 977.77911 559.32428 976.67456 559.32428 c
963.49408 559.32428 l
962.38947 559.32428 961.49408 558.42883 961.49408 557.32428 c
961.49408 541.90717 l
961.49408 540.80261 962.38947 539.90717 963.49408 539.90717 c
h
963.49408 539.90717 m
S
0 i
1 1 1 sc
CM
153.12822 217.0928 m
166.30872 217.0928 l
167.41328 217.0928 168.30872 216.19739 168.30872 215.0928 c
168.30872 199.67572 l
168.30872 198.57115 167.41328 197.67572 166.30872 197.67572 c
153.12822 197.67572 l
152.02365 197.67572 151.12822 198.57115 151.12822 199.67572 c
151.12822 215.0928 l
151.12822 216.19739 152.02365 217.0928 153.12822 217.0928 c
h
153.12822 217.0928 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
992.12823 539.90717 m
1005.3087 539.90717 l
1006.4133 539.90717 1007.3087 540.80261 1007.3087 541.90717 c
1007.3087 557.32428 l
1007.3087 558.42883 1006.4133 559.32428 1005.3087 559.32428 c
992.12823 559.32428 l
991.02368 559.32428 990.12823 558.42883 990.12823 557.32428 c
990.12823 541.90717 l
990.12823 540.80261 991.02368 539.90717 992.12823 539.90717 c
h
992.12823 539.90717 m
S
2 w
0 0 0 sc
929.88422 594.27228 m
929.88422 576.73181 l
S
0 i
CM
90.884239 189.86819 m
87.284241 180.26819 l
94.484238 180.26819 l
h
90.884239 189.86819 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
929.88422 567.13184 m
926.28424 576.73181 l
933.48425 576.73181 l
h
929.88422 567.13184 m
S
1 1 1 sc
CM
40.305309 276.04083 m
107.08133 276.04083 l
108.1859 276.04083 109.08133 275.14542 109.08133 274.04083 c
109.08133 254.04083 l
109.08133 252.93626 108.1859 252.04083 107.08133 252.04083 c
40.305309 252.04083 l
39.200737 252.04083 38.305309 252.93626 38.305309 254.04083 c
38.305309 274.04083 l
38.305309 275.14542 39.200737 276.04083 40.305309 276.04083 c
h
40.305309 276.04083 m
f
1 w
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
879.3053 480.95917 m
946.0813 480.95917 l
947.18591 480.95917 948.0813 481.85458 948.0813 482.95917 c
948.0813 502.95917 l
948.0813 504.06372 947.18591 504.95917 946.0813 504.95917 c
879.3053 504.95917 l
878.20074 504.95917 877.3053 504.06372 877.3053 502.95917 c
877.3053 482.95917 l
877.3053 481.85458 878.20074 480.95917 879.3053 480.95917 c
h
879.3053 480.95917 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
890.0213 497.95917 m
(3'*1')[ 11.264000 8.592000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
913.26953 539.90717 m
912.9621 514.8584 l
S
0 i
CM
73.863914 250.14098 m
70.962318 242.10477 l
76.961868 242.17839 l
h
73.863914 250.14098 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
912.86389 506.85901 m
909.96234 514.89526 l
915.96185 514.82159 l
h
912.86389 506.85901 m
S
1 1 1 sc
CM
38.145962 330.93591 m
108.92198 330.93591 l
108.92198 306.48132 l
38.145962 306.48132 l
h
38.145962 330.93591 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -839 757 cm
877.14594 426.06409 m
947.922 426.06409 l
947.922 450.51868 l
877.14594 450.51868 l
h
877.14594 426.06409 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
894.86395 441.79138 m
("\)4'51)[ 6.672000 6.444000 7.116000 6.444000 2.664000 0.000000 ] xS
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
912.65833 480.95917 m
912.59845 460.41864 l
S
0 i
CM
73.57515 304.58133 m
70.59848 296.57263 l
76.598457 296.59012 l
h
73.57515 304.58133 m
f
0 J
0 j
1 0 0 -1 -839 757 cm
912.57513 452.41867 m
909.59851 460.42737 l
915.59845 460.40988 l
h
912.57513 452.41867 m
S
/Cs1 SC
0 sc
1035.37 553.11572 m
(6/+7/+&8.&!"#$%)[ 9.120000 6.672000 3.780000 7.116000 6.672000 3.780000 3.336000 6.888000 3.552000 3.336000 8.220000 6.672000 7.776000 6.888000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
