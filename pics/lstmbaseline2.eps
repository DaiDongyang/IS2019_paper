%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 251.000000 318.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 251 318
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 251 318
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /B put
dup 34 /L put
dup 35 /S put
dup 36 /T put
dup 37 /M put
dup 38 /space put
dup 39 /O put
dup 40 /u put
dup 41 /t put
dup 42 /p put
dup 43 /E put
dup 44 /m put
dup 45 /b put
dup 46 /e put
dup 47 /d put
dup 48 /i put
dup 49 /n put
dup 50 /g put
dup 51 /q put
dup 52 /c put
dup 53 /P put
dup 54 /o put
dup 55 /s put
dup 56 /hyphen put
dup 57 /w put
dup 58 /D put
dup 59 /C put
dup 60 /a put
dup 61 /h put
dup 62 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








01F4001F013B0009022C004002F6001104BE0037000000480048005A011E018C01F402260246029003300398042C0452055C05F406660704076C081E0870089A0934097C0A1C0AB40B4A0B780C1C0C6E0CBE0CF80D2E00000001000000200096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/B 3 def
/C 4 def
/D 5 def
/E 6 def
/L 7 def
/M 8 def
/O 9 def
/P 10 def
/S 11 def
/T 12 def
/a 13 def
/b 14 def
/c 15 def
/d 16 def
/e 17 def
/g 18 def
/h 19 def
/i 20 def
/m 21 def
/n 22 def
/o 23 def
/p 24 def
/q 25 def
/r 26 def
/s 27 def
/t 28 def
/u 29 def
/w 30 def
/uni2B91 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C931313987B77B87D3A530FEA8139219B56B58888BA339BA81F732C1729802DA479E44F824526137EEB725F9A8277E11FB440D7432A2FB2F8DA2BCCD532B90735191BAC4AF35F550E035C4C8C1BAC2797ED4C005EE32CFA64F85F936DA558E85ADDE29C5BBD37B206D48034FEBF864620FF8E3D7F655FB069F33E7028A89A05626F6A75FBCC9846A87342B96437897B2D134DBA556837812FB54B7097B25992F1ABE19A925BA041315BC3C4FB87B6C75D5454F91BFECDC2EE13676B6DEBC9C9DCBBE686E730695EFA5C71FB31FADDE86A3975889A80665E811C481BDB458A3CF3C4C0E307A8695ECFB8FE597A7B6097838968F6B8FA27BE8FAD28B04B5FC43D2CD2C6A2EEC9113E00EA3E40F83FC4F6B94A22625C991D5C4043EE68E81A28D5AFAD6ECEAC591F60C7873E792ECC035E33F51EDE4AB26563AE7B426E251C8DF3E5F4C7E9C7BB61590FD8091543CC71180526B8C90CA869947B3DD632810C59635D958A1D8105C09502EFC4FC282EBBED8B35AE784EE2C1F937C6D84BC559A5A4DDD005E5170659239C620BC035EF690D5B76FCF8CF8246AA283A10506080F6D4A0532F42880D294ED294A9E86CA4ADDA9453D58E5A3C261376B49A4D48E8E02292AAF8E7CB6E7F873B737DC43D911F6309518F79A35BC4B16FF04A9C86C5414519798FFFAA235840C6448463A6D041F570D6F92A02B36CB049E06D19CC146403EC400A970A1D957F53266BB70694353090E99C6100DE103005BC7F9CB8DB712D3838
6C3776C2CCA10E41C37327ED311C964E680F91074C73848A007678BD8D9AA5A6BC4BA6E71DB73F1D051562318CDB07D6DB29396AD04BDF4D6F6898FE9439D88B3D4F3274CA507F79BEA37375E199E0C0F799975BA61368F22CB2130CCE662C997C06B97B97F0BB95B3CE1FFC0E248BFC026DC60AE516DF6B87AC8F26576E3C7DE8459A6A9F1DA60388611EADDB98EB2A4E9C85512D1C26D1AFA71D42E0757109B0A297177B90410DA661D7FE3AC58A4CA1B7D32892F09B31997E56EFCFE18B0AFDAA3AC43CF92671A4151980C41CC0DD3D08ECDAD6911BF82868D1931DA66634C5CE244F0A617E6C477B0BBD8152D3CCD61387332A4B4A4430DE8EBCE9423D2F16E5E06B5C9516FEE1F7FF9754252CC1B1CBA2C07A56597C8241B2818181AB8FCA25C7BA13E0033262414281D48A6E6B4C913EA03A76EF582B0E7136B336116509ACF9F9981FDCD314E940917AA6BF8AD39DE22CFB40C194D90E7E8BDDF4A31DBC070FE0247B406E04CD9A3599256E55B94AA9E9B873B386512F45AA91B4432F7C7DF0D70E1E7C14891E5BC336A6A478D9872121A430A504FB4144C0551D90A53CA7A810F07358011DA7485B210B90A3EE626BFB0AC03FD9F9FBDEC24BE665E351122CBE1E332F249D9D1590C71C861A0B2AD10F6C936D78B0721AAA22A7DE67FF53F8CAA7B95548CD395D743ED196701B8B3E8217B6B404911ECA810218F67F093D5FBB03C5018B940EF083EA8A4CF4028C45A2BBB24C77CFEEE1AF83DC67B65AA93CEFFFAC2921E00DBC5688F5B0680F046C56AD43689CF85EF3C7C4B9231E1F24A3501525D3F000909E66741ECFF15CA605675E884FFEF6B30E4CA19F109873578CDB87BE9456D31081C302CCD4690BCAE0B3E3BA5A0D19ECFAF5D6930C704BC80BBBB83060DE712954D4BB67CCBD4CF7F4B7BE4BEC2B56C8A31379FDC14C90F39495010BC57B72D74DFCEC733AEFEBCA78EF4C643D516EAA9A21289E325DA9E92F31209F0FC68B45631C28B3087EDAD519282E72BF390D893D7878856DCFE726864F272DFA79FE01074556CE7982852AF9977EC64FEC3975B59D2FCA1E7F335525DC6245A71208B5CD8D8E19A3458E0A66BACFB46FE586B7C74797BED0F986D063FE5ABACB00036B18F59FA131A54643112F44E42F6C1053AB2ACF1FF7AAD3FBE1DEBB847884E1FA0FE7628CCA5A621695230B473A6CCC0CCB71D8F228F24CB15795DC13D5C3B73F843BF40002DE174B0A760F426B70D42EBCDEBB8E60A2B7C096941B1490932FCD4522ABD1677F4F780BD5380CD994AE73CEAB46838D32E9B08276330C6B071B9302BE4B48125B3D89A46A56DC655C61B787B94F2AC89AB33F2F21736C0DA01DA2C8A6FE8CC4B21E4645D91B0AD30D1B436101166E83E81BC25CA3AB3973448A58D37DA4324131A05E2F7132E33A412E25099ACE9B2B9B

DF43C51E0805594664027FC61A8A9EB47A7DC47C062644D78068CC63E75C9025ED650812BD354B3C2F172289F1CA8F47A8C034A3D8804DD5AD104929FF802458D04A5F00BD5759B8D84A5DAF010A26AA1FFFEB8A95039DBF348DAE2E342BB229C32C8523F7DF931A8D33E667F71333D0154613146C346FD24C89A9FE84DAEF851659C5F32AA8A0DD3FDC2F8A296F5934507CE8CDE3BD31DD45D7B5E5CE9EE3FF8633D369907AEC41EE03B26A7EC4BB8A88B5CC4979BD877705DF1C511850E4560F0F50514ED297EE9E1FED28039BE77034E967676F249C5D7CC5BA4914AF8EFE342D96E12BAC01205517100B55687ABBD35044EB94BD6DE4449B1748F6A1AD2D4364A474F3817108B035A730CF1166E3755B5C5CC37A1854A84761597A8A589A35302DCFE540F05C9C3BA8EAD9ACB23164D0AB1CE5AEA1FAA7CF17FB6188DDF9D8CEC074E0BBB72808C62542E4C5151E9365B3EBE2224052738AED0877804ACB2E21216F5BBDDD5B4D56E7B1469AB24B580CFB140060A4E896C80A69AB293F55ACE3A6A4DB16CDC07D1D8BAB4DE51583F3E66617FCEEF384D6E43D61B78D26E21422A4D393F48FFCFB940B9F984716806AD366EEAD896956BDA94B7E7D057E13D9893E55AD6DD4AA79271F34A80CA654FE4DBA4683144FDC022ABE0FD1CF59A0F97BAF8B05B0CCCCEAEFDAE9025F7643B20CAA5389857341765F02342D3871CCA482773499B02502A4B40850CA1A70FC58B4ECC2909C2E1A2DA0D6894316996231F13704B80241AE60D4AA1275287611EEA9051B27CF65C0BF08AA2ABB647091F679210999A09D7D35E7018FB503BC40765A929B6A892D804ED2BC88BBA78B745B08EAEA36003FD7B669C8E4268359DB48355CE7B81C1421D850555AC551244556146F5B95D1CF608D8C8A6EEFF173485FA4AD9D5C73F12A4431C5356505EF8379FECD00AB0003C9B7A9A63305385E8266BA2863EEE0A472F31D4CC5731AB5E2CF7A1B3C8EFF2534A062A3738443F9E14A5C0AB196E7B1122DC6546382D1318BB28CC9E3992DC853CEA6FC9AEB70821EE73685A8A3DB9455B1EBDB4748FA4F2033B05AAD653CB893121A605A8261D206411932A097FA40800ED689B8568C6493DAB5C39F101683E414D432EB8A8CF2D0F3F29F1CBBED9FA41E8A8A57F9D964009D363365E94B58F111DC08AC4FEA0ACEFBA93852CA3A58AE277CEEE4CFC088A84A46859DB4841E0203BE1795FE4766844B0C8A5A882C26607DC09CF99A2170B284924EC17D6ADF546D46F702C73E67E5285E6260E4232E3F886E0870FA9EB52B3A9E9AE23A370C05DE4A9D0440A8DEE70EF76D5180C163B0B36FA48F012B52B91032980C48E40D13486F7A511B3DDE586E28ABCCE0BA41145FD0B39C8FA20F475F79042519716DD1FE9CD011BD16A11D9508D203B3D61F21D63A4F1B8BDD84CA

81672F7D5A57BAC9C3566151487DE226EE36B00C2BA7620AF55911B123DBFF55A5797BCB691602E6FB2117F78D53C66C34EB7DA08A28404BC903B3CE1CE797C84FBF4746415921CA39BE299D6E0F6ABA53577C9B46C88E33957A84C9FADEFBE6AB0F60D83868E440FACC28246DB6F243B9BB87BBCC3265EA3CC9A9CF281477A83596F19EB4014F4F2001A1F7E1F230608B407C16F37EC550C8DBF60F2BE6C6A95AAF6065FD3229E25D2C02C7130E2B2BA9CFED28B72D078E3ECAC48285A4100E35237B29F8F32EB7965E4E6CE23710C18E1F8207A7B13F9484DF98580A2E572B4432902D9333EEE16F19F7B17A825F9FA2F76BE9C131EBF09FECFEF30541CAC0F7BBDC12C05FEDA4C3F93BDFABC1991AB0A239587E35FD29DC4E147768D52961FC8872ACFFAE699C0DA3313F68E46601CDA5883A61040C7942966462DEEEBA15BE482D0D28E534B1756207102BD38E2456AB389E1FD2D54A983BCEC56EFC26D16B25AD2AADF420C248FA42BB4B64FD543A1F9AF6430395EE09255A8F0A51B341C5F51F7570155CC0B48DB559A6E58F5190AA79D57092CCA3DC73DAB227F710B691C4945827E0A9D78CF8DED9D6C55988D2B0D8E524A4D1EF6D47099936AA3D2925834AD2CB5D649C6294B1478C01121F18DF10445455D56FCCF0AF589BEECDF1C3D013E53B5E7F152FD543716D8C4C85F10FFA813F33AAC81EBEF62273569210EBE41DD7A9467F91D4C4030FE6B25CB0D944D58FB6637A75276CA7F43B712580F5D4905E30E9B117FB97F29C621B319AFE21849398A938D1496308A7E3715CA0E445ED00695C07F673A9601F8E6B233F1039EFB7CEE1FECB8805ACBD4E89B33EF7B331D318D4DA3B01D503E6E75432C426AE318067B76837EFBE2F81C9669FC795E0B09FA2CE0D0DFA5F68F574EB7B54C733DF360F448AB675507B8D0BB4E939CA063FBB2DBEC1E99B72A9FBBB22E9E38FC3B835B1AE5E5BA54990CAA673C5AAFC73DF34A4C8541E99BB15485336F4D3A77B849BCF4333C5838C44FC8A5B54C719675AF40B2519DE37FF548004FA3143A4499283DD7583FE23D0EC569442A6CA4C2E43D52879D90771F952B90242C938036E5C8F0C1C31974CE51E0B1BAE2723C373683353494CE3FE5F34A456510A785513D0D4636AA0F8B414FBF3026032F955CCD68DFAF82F0C64A8FD9C36E631C0DEF5DC5D625B75B17F64211036E9D626D6675D3054B1DAE6EF4E9658DBA554EC975E24406AB47FFFB9583C223429F81369AB3D2942AB7F15017B6A5B9E21539BE31AB12DC2BEDAA999C18190C301DA4C5EC71B56AB6D10E6FF7D006443A00C056E780ED8D53778F289627C974C598A7E05B8C4D86D0185316FE6C27AD5DC1EFB2836A40D581A3D26ACA94376C9867E22BD197245DE6FC38BFB463C75263442580B632A76A18B599C1A05619498FBAC69
C1321BCABA068813442FDD59E244
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 251 318 rc
0 318 m
251 318 l
251 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-645.27478 875.25189 m
1275.3359 875.25189 l
1275.3359 -759.09924 l
-645.27478 -759.09924 l
h
-645.27478 875.25189 m
f
35 270.20605 m
179.5 270.20605 l
180.05229 270.20605 180.5 269.75833 180.5 269.20605 c
180.5 246.75145 l
180.5 246.19917 180.05229 245.75145 179.5 245.75145 c
35 245.75145 l
34.447716 245.75145 34 246.19917 34 246.75145 c
34 269.20605 l
34 269.75833 34.447716 270.20605 35 270.20605 c
h
35 270.20605 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
242 361.79395 m
386.5 361.79395 l
387.05228 361.79395 387.5 362.24167 387.5 362.79395 c
387.5 385.24854 l
387.5 385.80084 387.05228 386.24854 386.5 386.24854 c
242 386.24854 l
241.44771 386.24854 241 385.80084 241 385.24854 c
241 362.79395 l
241 362.24167 241.44771 361.79395 242 361.79395 c
h
242 361.79395 m
S
0 i
1 1 1 sc
CM
63.921478 249.9984 m
63.921478 265.02902 l
65.69677 266.6991 l
81.674385 266.6991 l
81.674385 251.66847 l
79.899094 249.9984 l
h
63.921478 249.9984 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
270.92148 382.00159 m
270.92148 366.97098 l
272.69678 365.3009 l
288.67438 365.3009 l
288.67438 380.33151 l
286.89911 382.00159 l
270.92148 382.00159 l
270.92148 366.97098 m
286.89911 366.97098 l
288.67438 365.3009 l
286.89911 366.97098 m
286.89911 382.00159 l
S
0 i
0 0 0 sc
CM
86.289566 249.9984 m
86.289566 265.02902 l
88.064857 266.6991 l
104.04247 266.6991 l
104.04247 251.66847 l
102.26718 249.9984 l
h
86.289566 249.9984 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
293.28958 382.00159 m
293.28958 366.97098 l
295.06485 365.3009 l
311.04248 365.3009 l
311.04248 380.33151 l
309.26718 382.00159 l
293.28958 382.00159 l
293.28958 366.97098 m
309.26718 366.97098 l
311.04248 365.3009 l
309.26718 366.97098 m
309.26718 382.00159 l
S
0 i
1 1 1 sc
CM
108.65765 249.9984 m
108.65765 265.02902 l
110.43295 266.6991 l
126.41056 266.6991 l
126.41056 251.66847 l
124.63527 249.9984 l
h
108.65765 249.9984 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
315.65765 382.00159 m
315.65765 366.97098 l
317.43295 365.3009 l
333.41055 365.3009 l
333.41055 380.33151 l
331.63528 382.00159 l
315.65765 382.00159 l
315.65765 366.97098 m
331.63528 366.97098 l
333.41055 365.3009 l
331.63528 366.97098 m
331.63528 382.00159 l
S
0 i
1 1 1 sc
CM
131.02574 249.9984 m
131.02574 265.02902 l
132.80104 266.6991 l
148.77866 266.6991 l
148.77866 251.66847 l
147.00336 249.9984 l
h
131.02574 249.9984 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
338.02576 382.00159 m
338.02576 366.97098 l
339.80103 365.3009 l
355.77866 365.3009 l
355.77866 380.33151 l
354.00336 382.00159 l
338.02576 382.00159 l
338.02576 366.97098 m
354.00336 366.97098 l
355.77866 365.3009 l
354.00336 366.97098 m
354.00336 382.00159 l
S
0 i
1 1 1 sc
CM
41.553391 249.9984 m
41.553391 265.02902 l
43.328682 266.6991 l
59.306297 266.6991 l
59.306297 251.66847 l
57.531006 249.9984 l
h
41.553391 249.9984 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
248.55339 382.00159 m
248.55339 366.97098 l
250.32867 365.3009 l
266.3063 365.3009 l
266.3063 380.33151 l
264.53101 382.00159 l
248.55339 382.00159 l
248.55339 366.97098 m
264.53101 366.97098 l
266.3063 365.3009 l
264.53101 366.97098 m
264.53101 382.00159 l
S
0 i
1 1 1 sc
CM
153.39383 249.9984 m
153.39383 265.02902 l
155.16913 266.6991 l
171.14674 266.6991 l
171.14674 251.66847 l
169.37144 249.9984 l
h
153.39383 249.9984 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
360.39383 382.00159 m
360.39383 366.97098 l
362.16913 365.3009 l
378.14673 365.3009 l
378.14673 380.33151 l
376.37146 382.00159 l
360.39383 382.00159 l
360.39383 366.97098 m
376.37146 366.97098 l
378.14673 365.3009 l
376.37146 366.97098 m
376.37146 382.00159 l
S
0 i
1 1 1 sc
CM
35 130.40833 m
179.5 130.40833 l
180.05229 130.40833 180.5 129.9606 180.5 129.40833 c
180.5 106.95373 l
180.5 106.40144 180.05229 105.95373 179.5 105.95373 c
35 105.95373 l
34.447716 105.95373 34 106.40144 34 106.95373 c
34 129.40833 l
34 129.9606 34.447716 130.40833 35 130.40833 c
h
35 130.40833 m
f
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
242 501.59167 m
386.5 501.59167 l
387.05228 501.59167 387.5 502.0394 387.5 502.59167 c
387.5 525.04626 l
387.5 525.59857 387.05228 526.04626 386.5 526.04626 c
242 526.04626 l
241.44771 526.04626 241 525.59857 241 525.04626 c
241 502.59167 l
241 502.0394 241.44771 501.59167 242 501.59167 c
h
242 501.59167 m
S
0 i
1 1 1 sc
CM
63.921478 110.20068 m
63.921478 125.2313 l
65.69677 126.90137 l
81.674385 126.90137 l
81.674385 111.87074 l
79.899094 110.20068 l
h
63.921478 110.20068 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
270.92148 521.79932 m
270.92148 506.76871 l
272.69678 505.09863 l
288.67438 505.09863 l
288.67438 520.12927 l
286.89911 521.79932 l
270.92148 521.79932 l
270.92148 506.76871 m
286.89911 506.76871 l
288.67438 505.09863 l
286.89911 506.76871 m
286.89911 521.79932 l
S
0 i
0 0 0 sc
CM
86.289566 110.20068 m
86.289566 125.2313 l
88.064857 126.90137 l
104.04247 126.90137 l
104.04247 111.87074 l
102.26718 110.20068 l
h
86.289566 110.20068 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
293.28958 521.79932 m
293.28958 506.76871 l
295.06485 505.09863 l
311.04248 505.09863 l
311.04248 520.12927 l
309.26718 521.79932 l
293.28958 521.79932 l
293.28958 506.76871 m
309.26718 506.76871 l
311.04248 505.09863 l
309.26718 506.76871 m
309.26718 521.79932 l
S
0 i
1 1 1 sc
CM
108.65765 110.20068 m
108.65765 125.2313 l
110.43295 126.90137 l
126.41056 126.90137 l
126.41056 111.87074 l
124.63527 110.20068 l
h
108.65765 110.20068 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
315.65765 521.79932 m
315.65765 506.76871 l
317.43295 505.09863 l
333.41055 505.09863 l
333.41055 520.12927 l
331.63528 521.79932 l
315.65765 521.79932 l
315.65765 506.76871 m
331.63528 506.76871 l
333.41055 505.09863 l
331.63528 506.76871 m
331.63528 521.79932 l
S
0 i
1 1 1 sc
CM
131.02574 110.20068 m
131.02574 125.2313 l
132.80104 126.90137 l
148.77866 126.90137 l
148.77866 111.87074 l
147.00336 110.20068 l
h
131.02574 110.20068 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
338.02576 521.79932 m
338.02576 506.76871 l
339.80103 505.09863 l
355.77866 505.09863 l
355.77866 520.12927 l
354.00336 521.79932 l
338.02576 521.79932 l
338.02576 506.76871 m
354.00336 506.76871 l
355.77866 505.09863 l
354.00336 506.76871 m
354.00336 521.79932 l
S
0 i
1 1 1 sc
CM
41.553391 110.20068 m
41.553391 125.2313 l
43.328682 126.90137 l
59.306297 126.90137 l
59.306297 111.87074 l
57.531006 110.20068 l
h
41.553391 110.20068 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
248.55339 521.79932 m
248.55339 506.76871 l
250.32867 505.09863 l
266.3063 505.09863 l
266.3063 520.12927 l
264.53101 521.79932 l
248.55339 521.79932 l
248.55339 506.76871 m
264.53101 506.76871 l
266.3063 505.09863 l
264.53101 506.76871 m
264.53101 521.79932 l
S
0 i
1 1 1 sc
CM
153.39383 110.20068 m
153.39383 125.2313 l
155.16913 126.90137 l
171.14674 126.90137 l
171.14674 111.87074 l
169.37144 110.20068 l
h
153.39383 110.20068 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
360.39383 521.79932 m
360.39383 506.76871 l
362.16913 505.09863 l
378.14673 505.09863 l
378.14673 520.12927 l
376.37146 521.79932 l
360.39383 521.79932 l
360.39383 506.76871 m
376.37146 506.76871 l
378.14673 505.09863 l
376.37146 506.76871 m
376.37146 521.79932 l
S
0 i
1 1 1 sc
CM
108.12264 133.32303 m
104.27281 133.32303 l
104.27281 137.63132 l
102.3479 137.63132 l
106.19773 148.63132 l
110.04755 137.63132 l
108.12264 137.63132 l
h
108.12264 133.32303 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
315.12265 498.67697 m
311.27283 498.67697 l
311.27283 494.36868 l
309.3479 494.36868 l
313.19772 483.36868 l
317.04755 494.36868 l
315.12265 494.36868 l
h
315.12265 498.67697 m
S
0 i
1 1 1 sc
CM
36 177.00757 m
178.5 177.00757 l
179.60457 177.00757 180.5 176.11214 180.5 175.00757 c
180.5 154.55296 l
180.5 153.44839 179.60457 152.55296 178.5 152.55296 c
36 152.55296 l
34.895432 152.55296 34 153.44839 34 154.55296 c
34 175.00757 l
34 176.11214 34.895432 177.00757 36 177.00757 c
h
36 177.00757 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
243 454.99243 m
385.5 454.99243 l
386.60458 454.99243 387.5 455.88788 387.5 456.99243 c
387.5 477.44702 l
387.5 478.55161 386.60458 479.44702 385.5 479.44702 c
243 479.44702 l
241.89543 479.44702 241 478.55161 241 477.44702 c
241 456.99243 l
241 455.88788 241.89543 454.99243 243 454.99243 c
h
243 454.99243 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
294.246 470.71973 m
(!"#$%)[ 8.220000 6.672000 7.776000 6.888000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
36 223.60681 m
178.5 223.60681 l
179.60457 223.60681 180.5 222.71138 180.5 221.60681 c
180.5 201.15221 l
180.5 200.04764 179.60457 199.15221 178.5 199.15221 c
36 199.15221 l
34.895432 199.15221 34 200.04764 34 201.15221 c
34 221.60681 l
34 222.71138 34.895432 223.60681 36 223.60681 c
h
36 223.60681 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
243 408.39319 m
385.5 408.39319 l
386.60458 408.39319 387.5 409.28864 387.5 410.39319 c
387.5 430.84778 l
387.5 431.95236 386.60458 432.84778 385.5 432.84778 c
243 432.84778 l
241.89543 432.84778 241 431.95236 241 430.84778 c
241 410.39319 l
241 409.28864 241.89543 408.39319 243 408.39319 c
h
243 408.39319 m
S
/Cs1 SC
0 sc
0 i
294.246 424.12048 m
(!"#$%)[ 8.220000 6.672000 7.776000 6.888000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
108.12264 180.42575 m
104.27281 180.42575 l
104.27281 184.73402 l
102.3479 184.73402 l
106.19773 195.73402 l
110.04755 184.73402 l
108.12264 184.73402 l
h
108.12264 180.42575 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
315.12265 451.57425 m
311.27283 451.57425 l
311.27283 447.26596 l
309.3479 447.26596 l
313.19772 436.26596 l
317.04755 447.26596 l
315.12265 447.26596 l
h
315.12265 451.57425 m
S
0 i
1 1 1 sc
CM
108.12264 227.02499 m
104.27281 227.02499 l
104.27281 231.33327 l
102.3479 231.33327 l
106.19773 242.33327 l
110.04755 231.33327 l
108.12264 231.33327 l
h
108.12264 227.02499 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
315.12265 404.97501 m
311.27283 404.97501 l
311.27283 400.66672 l
309.3479 400.66672 l
313.19772 389.66672 l
317.04755 400.66672 l
315.12265 400.66672 l
h
315.12265 404.97501 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 9 0 0 -9 0 0]sf
397.95517 375.79395 m
("#$%&'\(\)*\(\))[ 5.004000 5.832000 5.166000 7.839000 2.502000 6.840000 5.004000 2.835000 5.337000 5.004000 0.000000 ] xS
399.49319 511.19699 m
(+,-.//012)[ 5.499000 7.677000 5.337000 4.833000 5.337000 5.337000 1.998000 5.004000 0.000000 ] xS
402.3327 522.44897 m
(#.3\(.14.)[ 5.832000 4.833000 5.337000 5.004000 4.833000 5.004000 4.833000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
36 316.8053 m
178.5 316.8053 l
179.60457 316.8053 180.5 315.90985 180.5 314.8053 c
180.5 294.35071 l
180.5 293.24612 179.60457 292.35071 178.5 292.35071 c
36 292.35071 l
34.895432 292.35071 34 293.24612 34 294.35071 c
34 314.8053 l
34 315.90985 34.895432 316.8053 36 316.8053 c
h
36 316.8053 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
243 315.1947 m
385.5 315.1947 l
386.60458 315.1947 387.5 316.09015 387.5 317.1947 c
387.5 337.64929 l
387.5 338.75388 386.60458 339.64929 385.5 339.64929 c
243 339.64929 l
241.89543 339.64929 241 338.75388 241 337.64929 c
241 317.1947 l
241 316.09015 241.89543 315.1947 243 315.1947 c
h
243 315.1947 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
259.47601 330.922 m
(5670\)0618907.&:.17.)[ 7.776000 6.888000 6.000000 2.664000 3.780000 2.664000 6.888000 6.672000 4.668000 9.096000 2.664000 6.000000 6.444000 3.336000 8.448000 6.444000 6.672000 6.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
108.12264 273.62424 m
104.27281 273.62424 l
104.27281 277.93253 l
102.3479 277.93253 l
106.19773 288.93253 l
110.04755 277.93253 l
108.12264 277.93253 l
h
108.12264 273.62424 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
315.12265 358.37576 m
311.27283 358.37576 l
311.27283 354.06747 l
309.3479 354.06747 l
313.19772 343.06747 l
317.04755 354.06747 l
315.12265 354.06747 l
h
315.12265 358.37576 m
S
0 i
1 1 1 sc
CM
34.947727 79.562126 m
177.44772 79.562126 l
178.55229 79.562126 179.44772 78.666702 179.44772 77.562126 c
179.44772 57.107533 l
179.44772 56.002964 178.55229 55.107533 177.44772 55.107533 c
34.947727 55.107533 l
33.843159 55.107533 32.947727 56.002964 32.947727 57.107533 c
32.947727 77.562126 l
32.947727 78.666702 33.843159 79.562126 34.947727 79.562126 c
h
34.947727 79.562126 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
241.94772 552.43787 m
384.44772 552.43787 l
385.55231 552.43787 386.44772 553.33331 386.44772 554.43787 c
386.44772 574.89246 l
386.44772 575.99701 385.55231 576.89246 384.44772 576.89246 c
241.94772 576.89246 l
240.84315 576.89246 239.94772 575.99701 239.94772 574.89246 c
239.94772 554.43787 l
239.94772 553.33331 240.84315 552.43787 241.94772 552.43787 c
h
241.94772 552.43787 m
S
/Cs1 SC
0 sc
0 i
278.85974 568.16516 m
(;614<\).1<\).)[ 8.664000 6.888000 6.672000 6.444000 6.444000 3.780000 6.444000 6.672000 6.444000 3.780000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
108.12264 85.103783 m
104.27281 85.103783 l
104.27281 89.412071 l
102.3479 89.412071 l
106.19773 100.41207 l
110.04755 89.412071 l
108.12264 89.412071 l
h
108.12264 85.103783 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
315.12265 546.89624 m
311.27283 546.89624 l
311.27283 542.58795 l
309.3479 542.58795 l
313.19772 531.58795 l
317.04755 542.58795 l
315.12265 542.58795 l
h
315.12265 546.89624 m
S
0 i
1 1 1 sc
CM
123.5 29.484896 m
208 29.484896 l
209.10457 29.484896 210 28.589466 210 27.484896 c
210 3.0527356 l
210 1.9481661 209.10457 1.0527357 208 1.0527357 c
123.5 1.0527357 l
122.39543 1.0527357 121.5 1.9481661 121.5 3.0527356 c
121.5 27.484896 l
121.5 28.589466 122.39543 29.484896 123.5 29.484896 c
h
123.5 29.484896 m
f
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
330.5 602.51508 m
415 602.51508 l
416.10458 602.51508 417 603.41052 417 604.51508 c
417 628.94727 l
417 630.05182 416.10458 630.94727 415 630.94727 c
330.5 630.94727 l
329.39542 630.94727 328.5 630.05182 328.5 628.94727 c
328.5 604.51508 l
328.5 603.41052 329.39542 602.51508 330.5 602.51508 c
h
330.5 602.51508 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
335.42001 614.45117 m
(5'#&+,-.//012&)[ 6.480000 7.600000 6.480000 2.780000 6.110000 8.530000 5.930000 5.370000 5.930000 5.930000 2.220000 5.560000 5.740000 0.000000 ] xS
350.98499 626.7312 m
(7.3\(.14.)[ 5.000000 5.370000 5.930000 5.560000 5.370000 5.560000 5.370000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
2.6198275 29.484896 m
107.38599 29.484896 l
108.49055 29.484896 109.38599 28.589466 109.38599 27.484896 c
109.38599 3.0527356 l
109.38599 1.9481661 108.49055 1.0527357 107.38599 1.0527357 c
2.6198275 1.0527357 l
1.5152581 1.0527357 0.61982763 1.9481661 0.61982763 3.0527356 c
0.61982763 27.484896 l
0.61982763 28.589466 1.5152581 29.484896 2.6198275 29.484896 c
h
2.6198275 29.484896 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
209.61983 602.51508 m
314.38599 602.51508 l
315.49054 602.51508 316.38599 603.41052 316.38599 604.51508 c
316.38599 628.94727 l
316.38599 630.05182 315.49054 630.94727 314.38599 630.94727 c
209.61983 630.94727 l
208.51526 630.94727 207.61983 630.05182 207.61983 628.94727 c
207.61983 604.51508 l
207.61983 603.41052 208.51526 602.51508 209.61983 602.51508 c
h
209.61983 602.51508 m
S
/Cs1 SC
0 sc
0 i
212.91791 614.45117 m
(;=<><4\).>&+,-.//012&)[ 7.220000 5.560000 5.370000 3.330000 5.370000 5.370000 3.150000 5.370000 3.330000 2.780000 6.110000 8.530000 5.930000 5.370000 5.930000 5.930000 2.220000 5.560000 5.740000 0.000000 ] xS
240.2379 626.7312 m
(7.3\(.14.)[ 5.000000 5.370000 5.930000 5.560000 5.370000 5.560000 5.370000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
56.93491 34.257595 m
53.085083 34.257595 l
53.085083 38.565876 l
51.160172 38.565876 l
55.009995 49.565876 l
58.859821 38.565876 l
56.93491 38.565876 l
h
56.93491 34.257595 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
263.93491 597.74243 m
260.08508 597.74243 l
260.08508 593.43414 l
258.16016 593.43414 l
262.01001 582.43414 l
265.85983 593.43414 l
263.93491 593.43414 l
h
263.93491 597.74243 m
S
0 i
1 1 1 sc
CM
165.27544 35.020954 m
161.42561 35.020954 l
161.42561 39.329235 l
159.5007 39.329235 l
163.35052 50.329235 l
167.20035 39.329235 l
165.27544 39.329235 l
h
165.27544 35.020954 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 632 cm
372.27545 596.97906 m
368.42563 596.97906 l
368.42563 592.67078 l
366.5007 592.67078 l
370.35052 581.67078 l
374.20035 592.67078 l
372.27545 592.67078 l
h
372.27545 596.97906 m
S
ep
end
%%Trailer
%%EOF
