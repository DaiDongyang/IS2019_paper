%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 324.000000 350.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 324 350
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 324 350
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /B put
dup 34 /L put
dup 35 /S put
dup 36 /T put
dup 37 /M put
dup 38 /space put
dup 39 /O put
dup 40 /u put
dup 41 /t put
dup 42 /p put
dup 43 /o put
dup 44 /f put
dup 45 /W put
dup 46 /r put
dup 47 /d put
dup 48 /E put
dup 49 /m put
dup 50 /b put
dup 51 /e put
dup 52 /i put
dup 53 /n put
dup 54 /g put
dup 55 /s put
dup 56 /q put
dup 57 /c put
dup 58 /P put
dup 59 /C put
dup 60 /a put
dup 61 /l put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/C 3 def
/E 4 def
/L 5 def
/M 6 def
/O 7 def
/P 8 def
/S 9 def
/T 10 def
/W 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/f 17 def
/g 18 def
/i 19 def
/l 20 def
/m 21 def
/n 22 def
/o 23 def
/p 24 def
/q 25 def
/r 26 def
/s 27 def
/t 28 def
/u 29 def
/uni2B91 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9310E889D4B294081CFBE92AFCC7FE3BB36C58496644FE561335DE1474FE8AD03205701574C44B4D576342C56A9D706E281EA108DEB8D3620968689F108F42E3465F4907B536F4FE9D04E7B81671C8015D28B6AEAA2F95E411CFBE9B6F24E72233C8DF2ECB36E76424D0B3BFB2C8FDB9C0F23F87BDB76948479D11CB9FEF9CB1EF517A3263962962008D031A5D23B7035A41C1D2273B76601B24EB8663AB9D5ACDE009CC7CDD9386F0BA734670B0F97E2B6AE8FA10A98A515EF31C6276992F56700EA2E3699BA4CC6E290C30A545D9F1093A2451306EBEFE8648B33A42631DCD02DABA83EF56F0879E6750AE49EF8D4B728EBA69F48CFE84F69461A47702933F00E980B706A1BA565E07E40DC4B5FCD04CCC16AB86BA3455205E211C464B76335FC256BE4F56C793CA6786E70A6CD331D807520BC681A318E4D33BE5548CBEA162787B8BE3DAE5C8000D04805A5A6293E4FCDFBF495EA71733FB56CCDFCB0BEE9BB535B3D3023BCF449A6BA62A83B19348E9F42A03E8E03D2B63DE005718EFE31AB1289BC71905F7396AC3C92E4544E16B865FE719712427A1A4569E86CCAA020B59B0FDEC2561342C06F2755A0640D617B9E75FAED04D40A383CF1F68E64DB0F2BC4063D9841919A1FAF557AABC39B1E9D2F783C7FB23C0811F94C9B434CED91B1F72DECF0E8D2705260A166BC2578D334D6544CEE1DC795A918826FE4C70A3D7A67256D08DBCB6536EF9510BAECB556C9294585B6C106FBBA69D0E63A395AE45
7771F1FECABA6ED61BEF9E33B22D3E1C347EC923F4012F3DA5B7EFD65133EFD68CCD277A7ACB3C1E338E485ECE72CD63F6DBD1C033A8EACD773A2328AEBA1C2C02200B5F721C237DDFEACB800C594F50713C31F2CEC541F5E9BBABDCFDE7375AA517322A2C3E1DEA2A0B30394127469EB58A2FFBBE24D6DD54B3881746FBC140BC3B3372B03CD31AB275013674B4883C0479E7F05070D13DE877F2023327AB19E389C2EBF5471EF271275D153D076E28EE538FC1E0737E0A7FB4B875BA0CECBFE376D621E765F48FAC8AFF398D73A6EFBB971E595E3567712569C79BE21D5F7D76D2B7095E325ADCFF2FEDD6334714859EC2372948A53D2EF7570EDAD03E5C870B120EA60D0925623AA9E13C50F8DADDA799B117F32B68ACA8741CBF656B23AA1BEAC0FEB4475B7BCFE41CAA9D0C9C3156256C7FB3193AF6E06ED26BFB4D6FAC2955D8438574A09891BE2DAA032026A90F3CA2B1B226E32A9A676359F81741D75669E044809C160FEECA2F3EA0AF918FDE0B562F9EBA84773208DD14ABA90A13EC5E656575D7A02A9BDC4BD37438EBB5BF8FECAF0C3BEF81E8E0AA3C340F246E5E4DB740152265AE77F4CBA5191DCF79EAD1C73FE7FAD9A7CD73BE4D08018CDFD7DBEACA004BF56F343C05210EB6CB8054EAD1B0C641A34CF0F247B4F489ABC9C91F33423477010A60621A1FA53902675A16D3BF89C392251440FD7A001E84E5FF2C7EA16B6771E93230774ECDF8985F4ECACD806B48F85CE7D57FF39AD71E42434EF702DDA309B29AB60E7A09202B755681AB188E5B623DC11707C796306E17DF456D97B4C578AB2219B105F4FF3310B1199E07BD6C98CF221D355C0A1D33D5A842CD9C2AA68D3FFA95B7D4BF8039F864FFAD829AC348EBC04B427F955647613394201E89046718DBD719ECEA33496A382000402F16448A8C46F098B841A37FAAEC907D65A7900656FDBCF1D90DDD49AAEF92E840ECB30CB958ADE716A33B22BC3AF002D411CF082984E59A8E50993AF5C62A8043FF8CF6A70E8797AEF380D136B463D58E3A1A75C18E1DFBEA454F2BD4A997B4077EF3BB97D220ED74A478057356BCE029FDAA3B1DCB516B1FA58845E447788BE52CE450CEB432DEE9ED2F30BFE63DBD7AA9E97AE055FA7F2CB8EAB99D31AC19CEE0E30B23F1D1F16FBB236667A58CC716F10CBA75201236BFF121174DE806E69F58511A9104FC9C3026B89F90A83CA74739CC020A4EE0852CA976BC441492A6642D053F1A69AF678FFAAD33893F92F86040E545612DC08F9BAC90515270271B59A2EFC317EFA69546CB8E864914D7B08C2395C7F644F6DBB17E77848D27098252E5628AF2D551542335B5020F0F7C6395F6B18803DA504EC8F70BBF516D7C1FB76D65720D0E613F9D0805E1B313EBF1174D4BAEBD9DD519CD0CA54ADB25C4B78C6B2F023BC021ABF458FF1D

6059E821E75B17C02CDBA0DFD0BB38422301E138E6D2CD85CF6392A3ED624DD0D5EAF85E27385D3E9B647DFA99C3074E01A6524A66012B68499A4FCDB9FBB55D48158B6BAC9234EBBDF95787CBA54FF75FD9AFB280CC73DEFB1B014BC707085255AF120524EBDAF451B8BBADFE16F4387BD30CB6270BBA7CBF71B5ED1CDE9E0A0B9B7F6BD51D85799ACAEDFC741C52E384944D4E76064A844ED68D29F98C9091A65E5B29EB751B952EB52895C47010F794388DF34D3FCC868A44D59BC0798D3273627EAFA378DE9C78C4351AB1D263EE48F43D0C1E7C5F8D33D6A135615F3F7D775331E98BE44E8F43835101D7C77D60E9314C34F10B267FF7A66C4BA4806AB13B41710CC922FD022F7CFAFD16C83925EAE4BCE5A1B188881B8A88C3072E540479994F703280CB35EA970ECFB62D685962E87B81D23CDE3F29BE14D8740B00CF0C719B3F14566A0F044EAAAC468237CFBAC0656522A08FBFF66B89E821004342D0D8C030F2D59FB171EFEECC15D8DBD99B6B9E09A692E1A23417372E1E743A02160A1B1615D4AA2C41C2233502A4C78F3744F1C0FD54C55ECF548006974B3AB754358842D77A1D842B7117E5DFBEB14947EC51624B3F020F40198ED34C55128D5C796C99372F6F002F638A9A32F84EDC92E008CC721B0F4716CC752C4998F4F9100B4828C2D869C087C114A87B89A603779F069830111A43751A2C2F800F6497C527359E28DF020A7989C98B981B4C3CC44A98A3830F04F70794DFBE953C955E4D074E3BA1BB62E0FC0AD2D4A0FE17A741071699494782D05F417D7B0B0EE7214C4EA4C55D8370508BB63D06F15F2D57D28352ABC839ADF06246131C1723B9175D0487A6C0E62B261EC4AB7B87E0FB5068677C6981C59D401A14E2082E7C84E1EF3B2203D16908F592F8E941A3D81A4F3D419796ACCB82FA8BD43587F781D58E53C551DE3BFAC154A1E96FFC1B5913F6B2F8FCC7F1590B818CC2E22F4BBE55D9A573A074DD85B712976CB815CBD3D987DCCB80567E6AC36CF4F0772BE944AB982BBB3544FAEC7C2CCA68B7CB274B55F8728406498E18F2FDEF144A9BB7C3382CD172F3B7498E49C0B3CE9DF819D6C10B5AE8EC54A6CF6DA7EC424BACA01764CF5E7B915C54E62D2842DCA00362CF965C19BC4E0E2109275E96748BDD83B39AB2A3E2A086334AF2AA685949790A16F669EE9E18D3D3663A2348A211237737BE12629009F722532B0A5E37654E2A91CBFAA9A6FDAE5FAFDC3862704CBB6AD92C2B4D3C20C30D47AED966F6DF3739C40D41AF114CAE3F00EC5115B5AE49BE7988D1D18EF3596B3F0BFA569B3D547C12EE22D0C7CF89CC9FB2C157334181FD11C4BFA7FD0554E4859E5A570B7B80D365AF97896BA6C5DFEA288AD4E046C796DE853740CB1953DF941CA8EB9A95831BBA71E2E66A9380C506DC06E715D77630C7EAC9

8B3BB7624F0D8332E26457FE4F983388CC5C87B7E1E16E4982581C4D10360675561DD892B92F7F83EA394331F6C9F54945C94D1A3BBDE8214FB11F490CC8617766117C1BE02377F3DACF5B70FFC344C301D70763086B7CC4EA89E5F07119938CC141A693A6ACFFB0D4AB261A211DC7DC0FD005DC6334632B61F04441149CC8AB0E747BAA10DD9358AD15D7A82FD9B4C00A419463B26DB0818287AF31D87B1E2E0C8E6B26B8E30765752D888F70F57D9B30F9BFFA09C510A563554A71862E561331BB1B6958DC6AA051582D36CE9B0BF325E06D6F4F99A8DEF8B79774389031E7CAFBC2136F88CE5507038478E3AF8CB34655802CE33E8B3A4B5E0630A9D97347206449C1ED1E529B6115E7EE47E07D5C49F93934EA437721C15FD9C3E0DFBCCDD3546304303A02612420DB28CAF6053404D29AF8875F0DF264B12414EBBA7F6C35096CD1F01CB3F55AB7662A50611BAFBF31ABE39D2E8D997CA500E63580B0DC7183A19F342F4DFA76E3962AB11EB16007B7453D351A170256EE6C7BC3B4A69D535497941AEC4E1F06EADA5CF17323D202583902D5C5641187EBC86D178774D85AE670D00D13C0D6D2A547006708934816E0AFD43974FBA9F0C9B12A6C43FC2A259D154D0AEF487C4780315067854CFCA83966666D41C85CA732CACB4BA010C980B243405BD292BC4769739F6AC433D8B5504A133C2DD1A542D25DB32CBFA137F4E229DD716141A16B7CEEE73A9F845C089E6F7B466FBE247A29A60909A47C6B8607D51D5E134C6806152FBEBA9CDC27C01A518040D704DCF0256668E01AEE63E64E1527D099690B643E3ED258832AE7E1B1FF24B91E57C1B8F513E133AB334C1C0C07243ACBF0CCAB8EAB9FA19205BC8B9C9813C21F53AE8576C2855B9329DF3D28808BAA7DB1118FAFB51A2C3087ECD034B43E6CC9F22ED37FEFE9673656E3954C8BA1EEC9D1F8177EFE579A76ACEAF0FB99436BA8249AB683CCA80D3ACAE9B238372A29ECCE6BE7AE524AD764035796EA2E86B13709BE8C4A186A7B283B2C2AB27DFCC57B099EB86208A8401CE778CE77FC8C3D8350DDAC77D9D3BD8953A0BCB7510532DDA7C3DA80D1B1C5A3A9CED5D3458486341C2898D3331BFEBFC51E38D32C4A8206F98CD75AEADBF726FEC5481162234F51F046F5002F08CEBA8C43DAA4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 324 350 rc
0 350 m
324 350 l
324 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-894 1158 m
1772 1158 l
1772 -1217 l
-894 -1217 l
h
-894 1158 m
f
/Cs1 SC
0 sc
1 0 0 -1 -526 746 cm
/F1.1[ 12 0 0 -12 0 0]sf
767.3075 541.54492 m
(!"#$%&)[ 8.220000 6.672000 7.776000 6.888000 10.452000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
32.5 160.17793 m
207.73152 160.17793 l
208.83609 160.17793 209.73152 159.2825 209.73152 158.17793 c
209.73152 127.50457 l
209.73152 126.4 208.83609 125.50457 207.73152 125.50457 c
32.5 125.50457 l
31.39543 125.50457 30.5 126.4 30.5 127.50457 c
30.5 158.17793 l
30.5 159.2825 31.39543 160.17793 32.5 160.17793 c
h
32.5 160.17793 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
558.5 585.82208 m
733.73151 585.82208 l
734.83606 585.82208 735.73151 586.71747 735.73151 587.82208 c
735.73151 618.49542 l
735.73151 619.59998 734.83606 620.49542 733.73151 620.49542 c
558.5 620.49542 l
557.39545 620.49542 556.5 619.59998 556.5 618.49542 c
556.5 587.82208 l
556.5 586.71747 557.39545 585.82208 558.5 585.82208 c
h
558.5 585.82208 m
S
0 i
1 1 1 sc
CM
62.820911 140.50711 m
65.916008 137.55453 65.916008 132.76747 62.820911 129.81491 c
59.725826 126.86232 54.707706 126.86232 51.612621 129.81491 c
48.517521 132.76747 48.517521 137.55453 51.612621 140.50711 c
54.707706 143.45969 59.725826 143.45969 62.820911 140.50711 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
588.82092 605.49292 m
591.91602 608.4455 591.91602 613.23254 588.82092 616.18512 c
585.72583 619.1377 580.7077 619.1377 577.61261 616.18512 c
574.51752 613.23254 574.51752 608.4455 577.61261 605.49292 c
580.7077 602.54028 585.72583 602.54028 588.82092 605.49292 c
S
0 i
1 1 1 sc
CM
91.350433 140.50711 m
94.445534 137.55453 94.445534 132.76747 91.350433 129.81491 c
88.255348 126.86232 83.237228 126.86232 80.142143 129.81491 c
77.047043 132.76747 77.047043 137.55453 80.142143 140.50711 c
83.237228 143.45969 88.255348 143.45969 91.350433 140.50711 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
617.3504 605.49292 m
620.44556 608.4455 620.44556 613.23254 617.3504 616.18512 c
614.25537 619.1377 609.23724 619.1377 606.14215 616.18512 c
603.04706 613.23254 603.04706 608.4455 606.14215 605.49292 c
609.23724 602.54028 614.25537 602.54028 617.3504 605.49292 c
S
0 i
1 1 1 sc
CM
119.18622 140.50711 m
122.28132 137.55453 122.28132 132.76747 119.18622 129.81491 c
116.09113 126.86232 111.07301 126.86232 107.97793 129.81491 c
104.88283 132.76747 104.88283 137.55453 107.97793 140.50711 c
111.07301 143.45969 116.09113 143.45969 119.18622 140.50711 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
645.18622 605.49292 m
648.28131 608.4455 648.28131 613.23254 645.18622 616.18512 c
642.09113 619.1377 637.073 619.1377 633.97791 616.18512 c
630.88281 613.23254 630.88281 608.4455 633.97791 605.49292 c
637.073 602.54028 642.09113 602.54028 645.18622 605.49292 c
S
0 i
1 1 1 sc
CM
147.022 140.50711 m
150.1171 137.55453 150.1171 132.76747 147.022 129.81491 c
143.92691 126.86232 138.9088 126.86232 135.81371 129.81491 c
132.71861 132.76747 132.71861 137.55453 135.81371 140.50711 c
138.9088 143.45969 143.92691 143.45969 147.022 140.50711 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
673.02197 605.49292 m
676.11713 608.4455 676.11713 613.23254 673.02197 616.18512 c
669.92694 619.1377 664.90881 619.1377 661.81372 616.18512 c
658.71863 613.23254 658.71863 608.4455 661.81372 605.49292 c
664.90881 602.54028 669.92694 602.54028 673.02197 605.49292 c
S
0 i
1 1 1 sc
CM
174.85779 140.50711 m
177.95288 137.55453 177.95288 132.76747 174.85779 129.81491 c
171.7627 126.86232 166.74458 126.86232 163.64949 129.81491 c
160.5544 132.76747 160.5544 137.55453 163.64949 140.50711 c
166.74458 143.45969 171.7627 143.45969 174.85779 140.50711 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
700.85779 605.49292 m
703.95288 608.4455 703.95288 613.23254 700.85779 616.18512 c
697.7627 619.1377 692.74457 619.1377 689.64948 616.18512 c
686.55438 613.23254 686.55438 608.4455 689.64948 605.49292 c
692.74457 602.54028 697.7627 602.54028 700.85779 605.49292 c
S
0 i
1 1 1 sc
CM
75.886108 155.62817 m
78.981209 152.6756 78.981209 147.88853 75.886108 144.93597 c
72.791023 141.98338 67.772903 141.98338 64.677818 144.93597 c
61.582718 147.88853 61.582718 152.6756 64.677818 155.62817 c
67.772903 158.58075 72.791023 158.58075 75.886108 155.62817 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
601.88611 590.37183 m
604.9812 593.3244 604.9812 598.11145 601.88611 601.06403 c
598.79102 604.0166 593.77289 604.0166 590.6778 601.06403 c
587.5827 598.11145 587.5827 593.3244 590.6778 590.37183 c
593.77289 587.41925 598.79102 587.41925 601.88611 590.37183 c
S
0 i
1 1 1 sc
CM
104.41563 155.62817 m
107.51073 152.6756 107.51073 147.88853 104.41563 144.93597 c
101.32055 141.98338 96.302429 141.98338 93.207344 144.93597 c
90.112244 147.88853 90.112244 152.6756 93.207344 155.62817 c
96.302429 158.58075 101.32055 158.58075 104.41563 155.62817 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
630.41565 590.37183 m
633.51074 593.3244 633.51074 598.11145 630.41565 601.06403 c
627.32056 604.0166 622.30243 604.0166 619.20734 601.06403 c
616.11224 598.11145 616.11224 593.3244 619.20734 590.37183 c
622.30243 587.41925 627.32056 587.41925 630.41565 590.37183 c
S
0 i
1 1 1 sc
CM
132.25142 155.62817 m
135.34651 152.6756 135.34651 147.88853 132.25142 144.93597 c
129.15633 141.98338 124.13821 141.98338 121.04312 144.93597 c
117.94802 147.88853 117.94802 152.6756 121.04312 155.62817 c
124.13821 158.58075 129.15633 158.58075 132.25142 155.62817 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
658.2514 590.37183 m
661.3465 593.3244 661.3465 598.11145 658.2514 601.06403 c
655.15631 604.0166 650.13818 604.0166 647.04315 601.06403 c
643.948 598.11145 643.948 593.3244 647.04315 590.37183 c
650.13818 587.41925 655.15631 587.41925 658.2514 590.37183 c
S
0 i
1 1 1 sc
CM
160.0872 155.62817 m
163.1823 152.6756 163.1823 147.88853 160.0872 144.93597 c
156.99211 141.98338 151.974 141.98338 148.87891 144.93597 c
145.78381 147.88853 145.78381 152.6756 148.87891 155.62817 c
151.974 158.58075 156.99211 158.58075 160.0872 155.62817 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
686.08722 590.37183 m
689.18231 593.3244 689.18231 598.11145 686.08722 601.06403 c
682.99213 604.0166 677.974 604.0166 674.87891 601.06403 c
671.78381 598.11145 671.78381 593.3244 674.87891 590.37183 c
677.974 587.41925 682.99213 587.41925 686.08722 590.37183 c
S
0 i
1 1 1 sc
CM
187.92297 155.62817 m
191.01808 152.6756 191.01808 147.88853 187.92297 144.93597 c
184.8279 141.98338 179.80977 141.98338 176.71469 144.93597 c
173.61958 147.88853 173.61958 152.6756 176.71469 155.62817 c
179.80977 158.58075 184.8279 158.58075 187.92297 155.62817 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
713.92297 590.37183 m
717.01807 593.3244 717.01807 598.11145 713.92297 601.06403 c
710.82788 604.0166 705.80975 604.0166 702.71466 601.06403 c
699.61957 598.11145 699.61957 593.3244 702.71466 590.37183 c
705.80975 587.41925 710.82788 587.41925 713.92297 590.37183 c
S
0.5 w
591.14221 610.83899 m
598.62079 610.83899 l
S
0 i
CM
76.620819 135.16101 m
72.620819 136.66101 l
72.620819 133.66101 l
h
76.620819 135.16101 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
602.62079 610.83899 m
598.62079 609.33899 l
598.62079 612.33899 l
h
602.62079 610.83899 m
S
1 J
1 j
0.60000002 i
619.67175 610.83899 m
626.4566 610.83899 l
S
0 i
CM
104.4566 135.16101 m
100.4566 136.66101 l
100.4566 133.66101 l
h
104.4566 135.16101 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
630.4566 610.83899 m
626.4566 609.33899 l
626.4566 612.33899 l
h
630.4566 610.83899 m
S
1 J
1 j
0.60000002 i
647.50757 610.83899 m
654.29236 610.83899 l
S
0 i
CM
132.29239 135.16101 m
128.29239 136.66101 l
128.29239 133.66101 l
h
132.29239 135.16101 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
658.29236 610.83899 m
654.29236 609.33899 l
654.29236 612.33899 l
h
658.29236 610.83899 m
S
1 1 1 sc
CM
202.69356 140.50711 m
205.78867 137.55453 205.78867 132.76747 202.69356 129.81491 c
199.59848 126.86232 194.58037 126.86232 191.48528 129.81491 c
188.39018 132.76747 188.39018 137.55453 191.48528 140.50711 c
194.58037 143.45969 199.59848 143.45969 202.69356 140.50711 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
728.69354 605.49292 m
731.78864 608.4455 731.78864 613.23254 728.69354 616.18512 c
725.59851 619.1377 720.58038 619.1377 717.48529 616.18512 c
714.3902 613.23254 714.3902 608.4455 717.48529 605.49292 c
720.58038 602.54028 725.59851 602.54028 728.69354 605.49292 c
S
0 i
1 1 1 sc
CM
47.356586 155.62817 m
50.451687 152.6756 50.451687 147.88853 47.356586 144.93597 c
44.261501 141.98338 39.243382 141.98338 36.148296 144.93597 c
33.053196 147.88853 33.053196 152.6756 36.148296 155.62817 c
39.243382 158.58075 44.261501 158.58075 47.356586 155.62817 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
573.35657 590.37183 m
576.45166 593.3244 576.45166 598.11145 573.35657 601.06403 c
570.26147 604.0166 565.24341 604.0166 562.14832 601.06403 c
559.05322 598.11145 559.05322 593.3244 562.14832 590.37183 c
565.24341 587.41925 570.26147 587.41925 573.35657 590.37183 c
S
0.5 w
675.34332 610.83899 m
682.12817 610.83899 l
S
0 i
CM
160.12817 135.16101 m
156.12817 136.66101 l
156.12817 133.66101 l
h
160.12817 135.16101 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
686.12817 610.83899 m
682.12817 609.33899 l
682.12817 612.33899 l
h
686.12817 610.83899 m
S
1 J
1 j
0.60000002 i
703.17908 610.83899 m
709.96393 610.83899 l
S
0 i
CM
187.96394 135.16101 m
183.96394 136.66101 l
183.96394 133.66101 l
h
187.96394 135.16101 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
713.96393 610.83899 m
709.96393 609.33899 l
709.96393 612.33899 l
h
713.96393 610.83899 m
S
1 J
1 j
0.60000002 i
700.39337 595.71796 m
693.60852 595.71796 l
S
0 i
CM
163.60852 150.28207 m
167.60852 148.78207 l
167.60852 151.78207 l
h
163.60852 150.28207 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
689.60852 595.71796 m
693.60852 597.21796 l
693.60852 594.21796 l
h
689.60852 595.71796 m
S
1 J
1 j
0.60000002 i
672.55756 595.71796 m
665.77277 595.71796 l
S
0 i
CM
135.77274 150.28207 m
139.77274 148.78207 l
139.77274 151.78207 l
h
135.77274 150.28207 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
661.77277 595.71796 m
665.77277 597.21796 l
665.77277 594.21796 l
h
661.77277 595.71796 m
S
1 J
1 j
0.60000002 i
644.7218 595.71796 m
637.93695 595.71796 l
S
0 i
CM
107.93696 150.28207 m
111.93696 148.78207 l
111.93696 151.78207 l
h
107.93696 150.28207 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
633.93695 595.71796 m
637.93695 597.21796 l
637.93695 594.21796 l
h
633.93695 595.71796 m
S
1 J
1 j
0.60000002 i
616.88599 595.71796 m
609.40741 595.71796 l
S
0 i
CM
79.407433 150.28207 m
83.407433 148.78207 l
83.407433 151.78207 l
h
79.407433 150.28207 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
605.40741 595.71796 m
609.40741 597.21796 l
609.40741 594.21796 l
h
605.40741 595.71796 m
S
1 J
1 j
0.60000002 i
588.35651 595.71796 m
580.87793 595.71796 l
S
0 i
CM
50.877911 150.28207 m
54.877911 148.78207 l
54.877911 151.78207 l
h
50.877911 150.28207 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
576.87793 595.71796 m
580.87793 597.21796 l
580.87793 594.21796 l
h
576.87793 595.71796 m
S
1 1 1 sc
CM
32.5 225.29179 m
207.73152 225.29179 l
208.83609 225.29179 209.73152 224.39636 209.73152 223.29179 c
209.73152 192.61842 l
209.73152 191.51385 208.83609 190.61842 207.73152 190.61842 c
32.5 190.61842 l
31.39543 190.61842 30.5 191.51385 30.5 192.61842 c
30.5 223.29179 l
30.5 224.39636 31.39543 225.29179 32.5 225.29179 c
h
32.5 225.29179 m
f
1 w
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
558.5 520.70819 m
733.73151 520.70819 l
734.83606 520.70819 735.73151 521.60364 735.73151 522.70819 c
735.73151 553.38159 l
735.73151 554.48615 734.83606 555.38159 733.73151 555.38159 c
558.5 555.38159 l
557.39545 555.38159 556.5 554.48615 556.5 553.38159 c
556.5 522.70819 l
556.5 521.60364 557.39545 520.70819 558.5 520.70819 c
h
558.5 520.70819 m
S
0 i
1 1 1 sc
CM
62.820911 205.62096 m
65.916008 202.66838 65.916008 197.88133 62.820911 194.92876 c
59.725826 191.97618 54.707706 191.97618 51.612621 194.92876 c
48.517521 197.88133 48.517521 202.66838 51.612621 205.62096 c
54.707706 208.57353 59.725826 208.57353 62.820911 205.62096 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
588.82092 540.37903 m
591.91602 543.3316 591.91602 548.11865 588.82092 551.07123 c
585.72583 554.0238 580.7077 554.0238 577.61261 551.07123 c
574.51752 548.11865 574.51752 543.3316 577.61261 540.37903 c
580.7077 537.42645 585.72583 537.42645 588.82092 540.37903 c
S
0 i
1 1 1 sc
CM
91.350433 205.62096 m
94.445534 202.66838 94.445534 197.88133 91.350433 194.92876 c
88.255348 191.97618 83.237228 191.97618 80.142143 194.92876 c
77.047043 197.88133 77.047043 202.66838 80.142143 205.62096 c
83.237228 208.57353 88.255348 208.57353 91.350433 205.62096 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
617.3504 540.37903 m
620.44556 543.3316 620.44556 548.11865 617.3504 551.07123 c
614.25537 554.0238 609.23724 554.0238 606.14215 551.07123 c
603.04706 548.11865 603.04706 543.3316 606.14215 540.37903 c
609.23724 537.42645 614.25537 537.42645 617.3504 540.37903 c
S
0 i
1 1 1 sc
CM
119.18622 205.62096 m
122.28132 202.66838 122.28132 197.88133 119.18622 194.92876 c
116.09113 191.97618 111.07301 191.97618 107.97793 194.92876 c
104.88283 197.88133 104.88283 202.66838 107.97793 205.62096 c
111.07301 208.57353 116.09113 208.57353 119.18622 205.62096 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
645.18622 540.37903 m
648.28131 543.3316 648.28131 548.11865 645.18622 551.07123 c
642.09113 554.0238 637.073 554.0238 633.97791 551.07123 c
630.88281 548.11865 630.88281 543.3316 633.97791 540.37903 c
637.073 537.42645 642.09113 537.42645 645.18622 540.37903 c
S
0 i
1 1 1 sc
CM
147.022 205.62096 m
150.1171 202.66838 150.1171 197.88133 147.022 194.92876 c
143.92691 191.97618 138.9088 191.97618 135.81371 194.92876 c
132.71861 197.88133 132.71861 202.66838 135.81371 205.62096 c
138.9088 208.57353 143.92691 208.57353 147.022 205.62096 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
673.02197 540.37903 m
676.11713 543.3316 676.11713 548.11865 673.02197 551.07123 c
669.92694 554.0238 664.90881 554.0238 661.81372 551.07123 c
658.71863 548.11865 658.71863 543.3316 661.81372 540.37903 c
664.90881 537.42645 669.92694 537.42645 673.02197 540.37903 c
S
0 i
1 1 1 sc
CM
174.85779 205.62096 m
177.95288 202.66838 177.95288 197.88133 174.85779 194.92876 c
171.7627 191.97618 166.74458 191.97618 163.64949 194.92876 c
160.5544 197.88133 160.5544 202.66838 163.64949 205.62096 c
166.74458 208.57353 171.7627 208.57353 174.85779 205.62096 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
700.85779 540.37903 m
703.95288 543.3316 703.95288 548.11865 700.85779 551.07123 c
697.7627 554.0238 692.74457 554.0238 689.64948 551.07123 c
686.55438 548.11865 686.55438 543.3316 689.64948 540.37903 c
692.74457 537.42645 697.7627 537.42645 700.85779 540.37903 c
S
0 i
1 1 1 sc
CM
75.886108 220.74202 m
78.981209 217.78944 78.981209 213.0024 75.886108 210.04982 c
72.791023 207.09724 67.772903 207.09724 64.677818 210.04982 c
61.582718 213.0024 61.582718 217.78944 64.677818 220.74202 c
67.772903 223.69461 72.791023 223.69461 75.886108 220.74202 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
601.88611 525.258 m
604.9812 528.21057 604.9812 532.99762 601.88611 535.9502 c
598.79102 538.90277 593.77289 538.90277 590.6778 535.9502 c
587.5827 532.99762 587.5827 528.21057 590.6778 525.258 c
593.77289 522.30542 598.79102 522.30542 601.88611 525.258 c
S
0 i
1 1 1 sc
CM
104.41563 220.74202 m
107.51073 217.78944 107.51073 213.0024 104.41563 210.04982 c
101.32055 207.09724 96.302429 207.09724 93.207344 210.04982 c
90.112244 213.0024 90.112244 217.78944 93.207344 220.74202 c
96.302429 223.69461 101.32055 223.69461 104.41563 220.74202 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
630.41565 525.258 m
633.51074 528.21057 633.51074 532.99762 630.41565 535.9502 c
627.32056 538.90277 622.30243 538.90277 619.20734 535.9502 c
616.11224 532.99762 616.11224 528.21057 619.20734 525.258 c
622.30243 522.30542 627.32056 522.30542 630.41565 525.258 c
S
0 i
1 1 1 sc
CM
132.25142 220.74202 m
135.34651 217.78944 135.34651 213.0024 132.25142 210.04982 c
129.15633 207.09724 124.13821 207.09724 121.04312 210.04982 c
117.94802 213.0024 117.94802 217.78944 121.04312 220.74202 c
124.13821 223.69461 129.15633 223.69461 132.25142 220.74202 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
658.2514 525.258 m
661.3465 528.21057 661.3465 532.99762 658.2514 535.9502 c
655.15631 538.90277 650.13818 538.90277 647.04315 535.9502 c
643.948 532.99762 643.948 528.21057 647.04315 525.258 c
650.13818 522.30542 655.15631 522.30542 658.2514 525.258 c
S
0 i
1 1 1 sc
CM
160.0872 220.74202 m
163.1823 217.78944 163.1823 213.0024 160.0872 210.04982 c
156.99211 207.09724 151.974 207.09724 148.87891 210.04982 c
145.78381 213.0024 145.78381 217.78944 148.87891 220.74202 c
151.974 223.69461 156.99211 223.69461 160.0872 220.74202 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
686.08722 525.258 m
689.18231 528.21057 689.18231 532.99762 686.08722 535.9502 c
682.99213 538.90277 677.974 538.90277 674.87891 535.9502 c
671.78381 532.99762 671.78381 528.21057 674.87891 525.258 c
677.974 522.30542 682.99213 522.30542 686.08722 525.258 c
S
0 i
1 1 1 sc
CM
187.92297 220.74202 m
191.01808 217.78944 191.01808 213.0024 187.92297 210.04982 c
184.8279 207.09724 179.80977 207.09724 176.71469 210.04982 c
173.61958 213.0024 173.61958 217.78944 176.71469 220.74202 c
179.80977 223.69461 184.8279 223.69461 187.92297 220.74202 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
713.92297 525.258 m
717.01807 528.21057 717.01807 532.99762 713.92297 535.9502 c
710.82788 538.90277 705.80975 538.90277 702.71466 535.9502 c
699.61957 532.99762 699.61957 528.21057 702.71466 525.258 c
705.80975 522.30542 710.82788 522.30542 713.92297 525.258 c
S
0.5 w
591.14221 545.72516 m
598.62079 545.72516 l
S
0 i
CM
76.620819 200.27486 m
72.620819 201.77486 l
72.620819 198.77486 l
h
76.620819 200.27486 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
602.62079 545.72516 m
598.62079 544.22516 l
598.62079 547.22516 l
h
602.62079 545.72516 m
S
1 J
1 j
0.60000002 i
619.67175 545.72516 m
626.4566 545.72516 l
S
0 i
CM
104.4566 200.27486 m
100.4566 201.77486 l
100.4566 198.77486 l
h
104.4566 200.27486 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
630.4566 545.72516 m
626.4566 544.22516 l
626.4566 547.22516 l
h
630.4566 545.72516 m
S
1 J
1 j
0.60000002 i
647.50757 545.72516 m
654.29236 545.72516 l
S
0 i
CM
132.29239 200.27486 m
128.29239 201.77486 l
128.29239 198.77486 l
h
132.29239 200.27486 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
658.29236 545.72516 m
654.29236 544.22516 l
654.29236 547.22516 l
h
658.29236 545.72516 m
S
1 1 1 sc
CM
202.69356 205.62096 m
205.78867 202.66838 205.78867 197.88133 202.69356 194.92876 c
199.59848 191.97618 194.58037 191.97618 191.48528 194.92876 c
188.39018 197.88133 188.39018 202.66838 191.48528 205.62096 c
194.58037 208.57353 199.59848 208.57353 202.69356 205.62096 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
728.69354 540.37903 m
731.78864 543.3316 731.78864 548.11865 728.69354 551.07123 c
725.59851 554.0238 720.58038 554.0238 717.48529 551.07123 c
714.3902 548.11865 714.3902 543.3316 717.48529 540.37903 c
720.58038 537.42645 725.59851 537.42645 728.69354 540.37903 c
S
0 i
1 1 1 sc
CM
47.356586 220.74202 m
50.451687 217.78944 50.451687 213.0024 47.356586 210.04982 c
44.261501 207.09724 39.243382 207.09724 36.148296 210.04982 c
33.053196 213.0024 33.053196 217.78944 36.148296 220.74202 c
39.243382 223.69461 44.261501 223.69461 47.356586 220.74202 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -526 746 cm
573.35657 525.258 m
576.45166 528.21057 576.45166 532.99762 573.35657 535.9502 c
570.26147 538.90277 565.24341 538.90277 562.14832 535.9502 c
559.05322 532.99762 559.05322 528.21057 562.14832 525.258 c
565.24341 522.30542 570.26147 522.30542 573.35657 525.258 c
S
0.5 w
675.34332 545.72516 m
682.12817 545.72516 l
S
0 i
CM
160.12817 200.27486 m
156.12817 201.77486 l
156.12817 198.77486 l
h
160.12817 200.27486 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
686.12817 545.72516 m
682.12817 544.22516 l
682.12817 547.22516 l
h
686.12817 545.72516 m
S
1 J
1 j
0.60000002 i
703.17908 545.72516 m
709.96393 545.72516 l
S
0 i
CM
187.96394 200.27486 m
183.96394 201.77486 l
183.96394 198.77486 l
h
187.96394 200.27486 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
713.96393 545.72516 m
709.96393 544.22516 l
709.96393 547.22516 l
h
713.96393 545.72516 m
S
1 J
1 j
0.60000002 i
700.39337 530.60406 m
693.60852 530.60406 l
S
0 i
CM
163.60852 215.39592 m
167.60852 213.89592 l
167.60852 216.89592 l
h
163.60852 215.39592 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
689.60852 530.60406 m
693.60852 532.10406 l
693.60852 529.10406 l
h
689.60852 530.60406 m
S
1 J
1 j
0.60000002 i
672.55756 530.60406 m
665.77277 530.60406 l
S
0 i
CM
135.77274 215.39592 m
139.77274 213.89592 l
139.77274 216.89592 l
h
135.77274 215.39592 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
661.77277 530.60406 m
665.77277 532.10406 l
665.77277 529.10406 l
h
661.77277 530.60406 m
S
1 J
1 j
0.60000002 i
644.7218 530.60406 m
637.93695 530.60406 l
S
0 i
CM
107.93696 215.39592 m
111.93696 213.89592 l
111.93696 216.89592 l
h
107.93696 215.39592 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
633.93695 530.60406 m
637.93695 532.10406 l
637.93695 529.10406 l
h
633.93695 530.60406 m
S
1 J
1 j
0.60000002 i
616.88599 530.60406 m
609.40741 530.60406 l
S
0 i
CM
79.407433 215.39592 m
83.407433 213.89592 l
83.407433 216.89592 l
h
79.407433 215.39592 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
605.40741 530.60406 m
609.40741 532.10406 l
609.40741 529.10406 l
h
605.40741 530.60406 m
S
1 J
1 j
0.60000002 i
588.35651 530.60406 m
580.87793 530.60406 l
S
0 i
CM
50.877911 215.39592 m
54.877911 213.89592 l
54.877911 216.89592 l
h
50.877911 215.39592 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
576.87793 530.60406 m
580.87793 532.10406 l
580.87793 529.10406 l
h
576.87793 530.60406 m
S
2 w
1 J
1 j
0.60000002 i
646.11578 585.82208 m
646.11578 568.28156 l
S
0 i
CM
120.11576 187.31842 m
116.51576 177.71843 l
123.71576 177.71843 l
h
120.11576 187.31842 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
646.11578 558.68158 m
642.51575 568.28156 l
649.71576 568.28156 l
h
646.11578 558.68158 m
S
/Cs1 SC
0 sc
767.3075 607.48877 m
(!"#$%&)[ 8.220000 6.672000 7.776000 6.888000 10.452000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
30.5 284.16443 m
209.73152 284.16443 l
209.73152 255.73227 l
30.5 255.73227 l
h
30.5 284.16443 m
f
1 w
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
556.5 461.83557 m
735.73151 461.83557 l
735.73151 490.26773 l
556.5 490.26773 l
h
556.5 461.83557 m
S
0 i
1 1 1 sc
CM
40.334305 279.65689 m
53.514801 279.65689 l
54.619373 279.65689 55.514801 278.76147 55.514801 277.65689 c
55.514801 262.23981 l
55.514801 261.13525 54.619373 260.23981 53.514801 260.23981 c
40.334305 260.23981 l
39.229736 260.23981 38.334305 261.13525 38.334305 262.23981 c
38.334305 277.65689 l
38.334305 278.76147 39.229736 279.65689 40.334305 279.65689 c
h
40.334305 279.65689 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
566.33429 466.34311 m
579.51483 466.34311 l
580.61938 466.34311 581.51483 467.23853 581.51483 468.34311 c
581.51483 483.76019 l
581.51483 484.86475 580.61938 485.76019 579.51483 485.76019 c
566.33429 485.76019 l
565.22974 485.76019 564.33429 484.86475 564.33429 483.76019 c
564.33429 468.34311 l
564.33429 467.23853 565.22974 466.34311 566.33429 466.34311 c
h
566.33429 466.34311 m
S
0 i
1 1 1 sc
CM
68.682121 279.65689 m
81.862617 279.65689 l
82.967194 279.65689 83.862617 278.76147 83.862617 277.65689 c
83.862617 262.23981 l
83.862617 261.13525 82.967194 260.23981 81.862617 260.23981 c
68.682121 260.23981 l
67.577553 260.23981 66.682121 261.13525 66.682121 262.23981 c
66.682121 277.65689 l
66.682121 278.76147 67.577553 279.65689 68.682121 279.65689 c
h
68.682121 279.65689 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
594.68213 466.34311 m
607.86261 466.34311 l
608.96716 466.34311 609.86261 467.23853 609.86261 468.34311 c
609.86261 483.76019 l
609.86261 484.86475 608.96716 485.76019 607.86261 485.76019 c
594.68213 485.76019 l
593.57758 485.76019 592.68213 484.86475 592.68213 483.76019 c
592.68213 468.34311 l
592.68213 467.23853 593.57758 466.34311 594.68213 466.34311 c
h
594.68213 466.34311 m
S
0 i
0.40000001 0.40000001 0.40000001 sc
CM
97.029945 279.65689 m
110.21044 279.65689 l
111.31501 279.65689 112.21044 278.76147 112.21044 277.65689 c
112.21044 262.23981 l
112.21044 261.13525 111.31501 260.23981 110.21044 260.23981 c
97.029945 260.23981 l
95.925377 260.23981 95.029945 261.13525 95.029945 262.23981 c
95.029945 277.65689 l
95.029945 278.76147 95.925377 279.65689 97.029945 279.65689 c
h
97.029945 279.65689 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
623.02997 466.34311 m
636.21045 466.34311 l
637.315 466.34311 638.21045 467.23853 638.21045 468.34311 c
638.21045 483.76019 l
638.21045 484.86475 637.315 485.76019 636.21045 485.76019 c
623.02997 485.76019 l
621.92535 485.76019 621.02997 484.86475 621.02997 483.76019 c
621.02997 468.34311 l
621.02997 467.23853 621.92535 466.34311 623.02997 466.34311 c
h
623.02997 466.34311 m
S
0 i
1 1 1 sc
CM
125.37776 279.65689 m
138.55826 279.65689 l
139.66283 279.65689 140.55826 278.76147 140.55826 277.65689 c
140.55826 262.23981 l
140.55826 261.13525 139.66283 260.23981 138.55826 260.23981 c
125.37776 260.23981 l
124.27319 260.23981 123.37776 261.13525 123.37776 262.23981 c
123.37776 277.65689 l
123.37776 278.76147 124.27319 279.65689 125.37776 279.65689 c
h
125.37776 279.65689 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
651.37775 466.34311 m
664.55829 466.34311 l
665.66284 466.34311 666.55829 467.23853 666.55829 468.34311 c
666.55829 483.76019 l
666.55829 484.86475 665.66284 485.76019 664.55829 485.76019 c
651.37775 485.76019 l
650.27319 485.76019 649.37775 484.86475 649.37775 483.76019 c
649.37775 468.34311 l
649.37775 467.23853 650.27319 466.34311 651.37775 466.34311 c
h
651.37775 466.34311 m
S
0 i
1 1 1 sc
CM
153.72559 279.65689 m
166.90608 279.65689 l
168.01065 279.65689 168.90608 278.76147 168.90608 277.65689 c
168.90608 262.23981 l
168.90608 261.13525 168.01065 260.23981 166.90608 260.23981 c
153.72559 260.23981 l
152.62102 260.23981 151.72559 261.13525 151.72559 262.23981 c
151.72559 277.65689 l
151.72559 278.76147 152.62102 279.65689 153.72559 279.65689 c
h
153.72559 279.65689 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
679.72559 466.34311 m
692.90607 466.34311 l
694.01062 466.34311 694.90607 467.23853 694.90607 468.34311 c
694.90607 483.76019 l
694.90607 484.86475 694.01062 485.76019 692.90607 485.76019 c
679.72559 485.76019 l
678.62103 485.76019 677.72559 484.86475 677.72559 483.76019 c
677.72559 468.34311 l
677.72559 467.23853 678.62103 466.34311 679.72559 466.34311 c
h
679.72559 466.34311 m
S
0 i
1 1 1 sc
CM
182.35974 279.65689 m
195.54024 279.65689 l
196.64481 279.65689 197.54024 278.76147 197.54024 277.65689 c
197.54024 262.23981 l
197.54024 261.13525 196.64481 260.23981 195.54024 260.23981 c
182.35974 260.23981 l
181.25517 260.23981 180.35974 261.13525 180.35974 262.23981 c
180.35974 277.65689 l
180.35974 278.76147 181.25517 279.65689 182.35974 279.65689 c
h
182.35974 279.65689 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
708.35974 466.34311 m
721.54022 466.34311 l
722.64484 466.34311 723.54022 467.23853 723.54022 468.34311 c
723.54022 483.76019 l
723.54022 484.86475 722.64484 485.76019 721.54022 485.76019 c
708.35974 485.76019 l
707.25519 485.76019 706.35974 484.86475 706.35974 483.76019 c
706.35974 468.34311 l
706.35974 467.23853 707.25519 466.34311 708.35974 466.34311 c
h
708.35974 466.34311 m
S
2 w
0 0 0 sc
646.11578 520.70819 m
646.11578 503.16772 l
S
0 i
CM
120.11576 252.43228 m
116.51576 242.83228 l
123.71576 242.83228 l
h
120.11576 252.43228 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
646.11578 493.56772 m
642.51575 503.16772 l
649.71576 503.16772 l
h
646.11578 493.56772 m
S
/Cs1 SC
0 sc
751.6015 479.55164 m
('\(\)*\(\)&+,&!"#$%)[ 9.120000 6.672000 3.780000 7.116000 6.672000 3.780000 3.336000 6.888000 3.552000 3.336000 8.220000 6.672000 7.776000 6.888000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
0.53253132 35.5 m
112.21044 35.5 l
112.21044 0.82663316 l
0.53253132 0.82663316 l
h
0.53253132 35.5 m
f
1 w
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
526.53253 710.5 m
638.21045 710.5 l
638.21045 745.17334 l
526.53253 745.17334 l
h
526.53253 710.5 m
S
/Cs3 SC
0 sc
0 i
535.80548 724.50067 m
(-+./&0123//456&)[ 10.428000 6.888000 3.780000 7.116000 3.336000 7.332000 10.236000 7.116000 6.444000 7.116000 7.116000 2.664000 6.672000 6.888000 0.000000 ] xS
556.25348 738.83667 m
(738\(3593)[ 6.000000 6.444000 7.116000 6.672000 6.444000 6.672000 6.444000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
143.72559 35.5 m
245.00607 35.5 l
245.00607 0.82663316 l
143.72559 0.82663316 l
h
143.72559 35.5 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
669.72559 710.5 m
771.0061 710.5 l
771.0061 745.17334 l
669.72559 745.17334 l
h
669.72559 710.5 m
S
/Cs1 SC
0 sc
0 i
675.56982 724.50067 m
(:'#&0123//456&)[ 7.776000 9.120000 7.776000 3.336000 7.332000 10.236000 7.116000 6.444000 7.116000 7.116000 2.664000 6.672000 6.888000 0.000000 ] xS
694.2478 738.83667 m
(738\(3593)[ 6.000000 6.444000 7.116000 6.672000 6.444000 6.672000 6.444000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
80.988937 99.3843 m
159.24258 99.3843 l
160.34715 99.3843 161.24258 98.488869 161.24258 97.3843 c
161.24258 72.952141 l
161.24258 71.847565 160.34715 70.952141 159.24258 70.952141 c
80.988937 70.952141 l
79.884369 70.952141 78.988937 71.847565 78.988937 72.952141 c
78.988937 97.3843 l
78.988937 98.488869 79.884369 99.3843 80.988937 99.3843 c
h
80.988937 99.3843 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
606.98895 646.61572 m
685.24255 646.61572 l
686.34717 646.61572 687.24255 647.51111 687.24255 648.61572 c
687.24255 673.04785 l
687.24255 674.1524 686.34717 675.04785 685.24255 675.04785 c
606.98895 675.04785 l
605.8844 675.04785 604.98895 674.1524 604.98895 673.04785 c
604.98895 648.61572 l
604.98895 647.51111 605.8844 646.61572 606.98895 646.61572 c
h
606.98895 646.61572 m
S
/Cs3 SC
0 sc
0 i
611.77777 664.33179 m
(;+59<\)35<\)3)[ 8.664000 6.888000 6.672000 6.444000 6.444000 3.780000 6.444000 6.672000 6.444000 3.780000 0.000000 ] xS
2 w
0.60000002 i
/Cs2 SC
0 0 0 sc
582.37146 710.5 m
582.37146 660.80078 l
587.40234 660.80078 l
587.40234 660.83179 l
592.08893 660.83179 l
S
0 i
CM
75.688942 85.168221 m
66.088943 88.768219 l
66.088943 81.568222 l
h
75.688942 85.168221 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
601.68896 660.83179 m
592.08893 657.23181 l
592.08893 664.43176 l
h
601.68896 660.83179 m
S
1 J
1 j
0.60000002 i
720.36584 710.5 m
720.36584 660.76562 l
719.69141 660.76562 l
706.14258 660.83179 l
700.14258 660.83179 l
S
0 i
CM
164.54257 85.168221 m
174.14258 81.568222 l
174.14258 88.768219 l
h
164.54257 85.168221 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
690.5426 660.83179 m
700.14258 664.43176 l
700.14258 657.23181 l
h
690.5426 660.83179 m
S
1 J
1 j
0.60000002 i
646.11578 646.61572 m
646.11578 633.39545 l
S
0 i
CM
120.11576 122.20457 m
116.51576 112.60457 l
123.71576 112.60457 l
h
120.11576 122.20457 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
646.11578 623.79541 m
642.51575 633.39545 l
649.71576 633.39545 l
h
646.11578 623.79541 m
S
1 1 1 sc
CM
69.47551 349.27829 m
170.75601 349.27829 l
170.75601 314.60492 l
69.47551 314.60492 l
h
69.47551 349.27829 m
f
1 w
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -526 746 cm
595.47552 396.72171 m
696.75598 396.72171 l
696.75598 431.39508 l
595.47552 431.39508 l
h
595.47552 396.72171 m
S
/Cs1 SC
0 sc
0 i
603.65973 417.55841 m
("<23=&738\(3593)[ 6.672000 6.444000 7.116000 6.444000 2.664000 3.336000 6.000000 6.444000 7.116000 6.672000 6.444000 6.672000 6.444000 0.000000 ] xS
2 w
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
646.11578 461.83557 m
646.11578 444.29507 l
S
0 i
CM
120.11576 311.30493 m
116.51576 301.70493 l
123.71576 301.70493 l
h
120.11576 311.30493 m
f
0 J
0 j
1 0 0 -1 -526 746 cm
646.11578 434.69507 m
642.51575 444.29507 l
649.71576 444.29507 l
h
646.11578 434.69507 m
S
ep
end
%%Trailer
%%EOF
