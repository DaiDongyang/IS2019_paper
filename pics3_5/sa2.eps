%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 254.000000 308.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 254 308
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 254 308
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /ellipsis put
dup 34 /P put
dup 35 /r put
dup 36 /o put
dup 37 /n put
dup 38 /u put
dup 39 /c put
dup 40 /i put
dup 41 /a put
dup 42 /t put
dup 43 /s put
dup 44 /T put
dup 45 /f put
dup 46 /m put
dup 47 /e put
dup 48 /space put
dup 49 /B put
dup 50 /l put
dup 51 /k put
dup 52 /E put
dup 53 /R put
dup 54 /O put
dup 55 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/E 3 def
/O 4 def
/P 5 def
/R 6 def
/T 7 def
/a 8 def
/c 9 def
/e 10 def
/f 11 def
/i 12 def
/k 13 def
/l 14 def
/m 15 def
/n 16 def
/o 17 def
/p 18 def
/r 19 def
/s 20 def
/t 21 def
/u 22 def
/ellipsis 23 def
/uni2B91 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926774C520A180165F2668824383C2FD0BBD585551A6494A5974E80882DD1B37F900E01291F8967167EE9EF4AECD6AB20E5EFFE36D633B63B0C3FD71D6C0843FCE6DAA0C53D6751983E5852F2951ED2757B4892D7117736D476AB64DE012B55642046119D7C1BDD6C770C4F5A855FFCBC8BC8C8B4E8E8569D3F39AE2937C9FD27BC0315633D8D7A07298C53AEA6FE678DAB96183F2AB5FD74D6E5569F116C8B0DA2AE91696ED819E475083BAB0CB543074DF8A186DE7AF91DA8E49B601C849A18B859FE7EE3A9FED3D8F0E738D7CE76B3B023635ED9C5131C3923E5FB9E0862847077001C5CDAF992A00A5C77F33A2363126F6B8D00354C116363C41C35D18BAD63C544E0BC648499CAA667A3A2CEB20BEE3E873CD732AE837EDD7687AD5272BEC573C506E957E4F9AF70A3D3097F6F3880FA332D89B4FB4C79380590C8BD65C1084FC53B423EDFC792E5B79C01662EBAD2E9EBD5825E3AF790D16888950221D19D368AFF81B1608DE9428127375FA29BB6B8909658DB4B669EFA09599F085483274FBF168B1CEE05FF57D498FCBCEEA53C04DD43862E1224D26AE457F5670531C7C9E66F3F7EDC71EDDF2FF9AE7C57D09B5507ED1BF8B82A63DAA719511279E17BC2C4BEB2C4BDDADED5C926DF3EEBE4D1CE4D63187672CBBE67C2FD670AC6E91E9D9D32F6787F2F7BC9A9A60868C2A8A6F3B05F9119C26240B022D510C4A251644F611AD6401FD0936F1CF1463482A2DB6EA2189D7025309092FCE2E77A34FF4
02162CFDCC05D1F53142383706DBC7749A578426EDFF7739895D3CDB39186B93B0F1909ECAB35350A7D6E67FE44F5E19625527FE44B4407047AF7EEEC661F64BB5526A640BF74572219F7AFF16C1E9BEC544CCC7930C7FBF26BE2C3E0ADD55F1B36E2C50447D2DBEC1F11BCA12A038B96C060D9537770741CC209787862E4F068B86A13C0A160F9BFF2723C7B66B78CE0A45A6F8C92474C12131F306A1D0ABD42A8E7A4434EF8FE0F7CBE9E54D965E77A095E55A701B95084484027A24C30E318D06B130215450BB3A4788D8C71E767E062D7D9C26ED103668B4F7509DF3022715CAD2EE7F12FF8972E6AFE816364011D434B7A11EACB96B67E6A8367CC9B32306F6555C143B0144E1FE8951E68A114E823D1E8B1FBE55708D9B6316FC7EFD8B6BAF33CDB5032ED5917C06ABB9796E488BFBA599D3C089C75879332DAA742BFD7D1DFCDC59BCD5CD0D4E634768FFF76B256916A39B54285843A5CF796CC96B3242FD0D406DBC5B8F825473F3452ACC1D54432E9CDCA63DF0F51F7015BEFC5685749D99DE3872CC85213D6B5B4AF02BA444C0A1090D2EEB4C0317BA0C7B2DD205F624B71A1DC36D9A2A44DED54B6C0C1493B6B30E6E3277AA7B780647D26B3CCAE9BE7449099553965E30356811B2BB1E771FD3F363461ED70CFA250F78FA691957A21AD71BFA9D3447BB5110140E504DBFDD2F7829E6079422270A283BA5275345BCA20B93FDE2264310256293DF0B3547E5726080132C190CD1F6768A0C7A5B37231D18E19796D24DA683FBFCF716F8E866506524A919118DE7F74700E3743DBC4B8DB56C9806384F9684EB126DABA2A5A0BB97DBF3820B61482ECCB549C86ADFF116F02626CD88AEE0896FED30F9EF799F9059A43C21D05EAD73780D8083984B18198C3C7A1C5459250C01DF7B871B56B44B671E0F787A790FEAF3C63A2D2AD5D77D71905AF934D3175C5D6EAFFECC3519A8BD77BA0DF7BE46423B4761DB1F1D9E2734405B5FC5391D01AF8F0636257EFFB2483BF6055C100873F75723EB79499A6E17115526BE0DC8EC679589283C8317384D973AAD93D91D62189441CAA4E4FC9139E7BD369A0F03715791677C64429B095DAF95C22E46DEBDCF0E7623D4392EDB2CCA1B2600A8A32F42B724B70848C28FEF9F1113AFD5BA724E3A0C87D3B082E0C36DD590FD49735AD391676ED87553A0674F07BD670AAEFFA94B2F7224DF52DD91910E08EA554B4C707DB5176627F2C83EABA2128E4CC60734039BCEDA449002887F06B28BAEC44CA159498842D0133F74F202C499BB7B6102A7FD198E0A2E29986D6B4A369990DFFA0DDB85406607FA58FF80433368BB659DEC56B65CDC4A800702C1B592F8EE4579E6277DF0427BF482ECD9AB96A2313B5C281754E1B2E66F33279833D6BAC6DB1B0080A27E2F43A1592C1788B6A0C39FEFD47FFAFC
8551C5ADCD614309638B80B5E006EFDC200D53EEE0E97C48D83B73556E3800ABA05D093F080AF8E69B91CD3247FFACE8821B6F00A9811DB41AF4D66C299E886F693E9E8297CD87DBD0CA8C718340599869CFAE21655F9F72CDE5B3F59E30B46291AEA7563684B03EE22C4D034A784381C64AE0A775DC75080D27879ED9BC1DBF67FE7BDBBCE3C95125F42BADE94F8966E4C2AC54707AABCB7B3ED7FEAC5F991AB74C759D76C63F877E8A7D707B42A049722D8AB4EE870EF18ECB9A9FE0F1DAEA1FFBA116D1387063403DC3DA28F8570F3736F816DB40DEB429547AF8991298F2DA63BF328504D1F6F4CF53E1F6EF5C3FA91FC5A89B64C4581AC3B9FF8F32A8ADFFEC32F496666EF90E38F2826853B84B77B76FED8018BC9E279B3DDB9C77D1F03685E0D168B27FB08DA5A1AC5AB258F42A5DFB46059E4DEFC4095CFF61C21FA58180ECCF95E3DA5E9B0C34FB46A82FFEAD5B188719E54812E320685ACA5C52CC3139B25DE1411F04436E41538FFC53EF61BE1DA8EE49C6E32245D0CD685AF9D6F5A08B295C0993A66ADEBDDD45D623CD0A131A608CC5DA9664B0468C905DAD96E011244B80F90B0DED99ECCDF6503E95C11DD3ACD646CB7A5DC4F64ADC38A63A2C962F7536391DFB8F28F85B83DB43F30231DC765EB81169FFE7E8EE466AFDDF848804B430D1B97FCA7D36604CCB12CF965A8DD0A988AB4BFC00CE1D12EAEAA5C148FE29DBE43E307F0362ACDC5D72D0061C15D64EF509E564DAC055BA90D725CA096ADED61E32586A5F91E65589C29AFE71B72FA9664E800137E8006A8B7268EF8DB5FA07624C34BFB7BB139AAA9493486CA5800B39C740474FF2E43B77500D594C6DB1FD6C702CE19101DD9A953D9243150A168E122F0E0F4880D4A6D888F33852C50C773823EFC18B37E3CD6DB4F3170BA5B9B386C0CA104AF42E3CC06298797F4264DF74F678382DA91B572BA2ED66D2C61475AF23B9B4A13EF607A45AE9646245E8AAF0908D97DF1FF5F1C4B8D7CD112456AC729018E0D406B0F14414DAD74D4EA04BAF9A019F0674BE4D63EE37FDED8D7F36CCAFB97BC8CC83E913AF3F3F8FE395ADFDCC047E9367AC50DF7BD6A6924075380037E745D319106F8C966E184C68494C339A5569B16395047620C9E6FB45C659DBDDD772C670B3D84B3296288D547A66B371EE4139D4825992654218D845B6AF5899BFD72FDDB8CA4832559BD9C948C0A44E5A1A8288D30D05814F8D2E16C1FDCC7F0D31D6BD33361C6572925490A2B3FB698BB6709953E55D1F774D0A5AB0B2C50DF5928906D74B34BFAB2E067035C33FC0F635C5DC777C8FB8A33B55C411EF083D764C1ACD8D101786CB6252086F91D65219A0B369B4B8DF74A4E97DEBD50257F13363C3D757F1C258D32AF853100D1E24783A9D545410780DE38A623B793CED2A360EEA4C9A39B2BA16
967AC81BEC8B112839A134106B4FD40FBAA8E3577B621EB10A976327A88E41F31F11F7A1661E8420F66C26042B2EC018E3EDA83CBEF645663211D59A4AF11EA7756B3843184157143F35D2D3A9A76F9FB9772C1CE56A215E8171EB12B100BFAEE50CEC3A37AE118363A59FE26444AEF04DE22549C2297282EA8D0CAEFAE2360FD8FE391BCD972E5861DD6E828A3083597895DAFA06318AC684CFBB4EDA1D16EF48CEF578F9451AE1647174742884378637C6C87964A100504B03E91A87C2A811B7F81F05659929E7261D646C7C96E5668A2A53FB1A8EA025AEFC264667C28DE3F68DB7ED3C0859602C5E9A066EE0D160584698562D8655AA6146E228C802DF1BBE02AC037D75C672580CBFFC63AB5559FDF94BBEDD14DE0C9F2A9DE42B51E73C85FD1E9A0580C20A2C692E925958F95176C48CDA2CECDE94D16362F52EEEA5E0496738BD29A899B496532F8A07B0BCB5A859F145AAF9978CC1519C8A71BFA773F59C5AF90CF5B68EDFEDC22121C59E59C3D9D84A93FF2EB80E0FBB5ACA053B1DCB6527328A43D3BFD894FF2F1050B828A1FE329D0B04C32515A73A6A6802F50C186BD5330A3CD9B34E05AA3630EB9A7FE560D07DD3861A0087113FF751BD80EF1798EA094965E945899030CC74D0731E8D2516A1A3FAC180FE82004C81E35AAD06612F128FC35FE16B8348D398380C243A8070DAACD0C12A3F52042D3BF37D88AF5011840C3E6209EE8E859BBF5EA116CC77BCDCDFDC57F8F112109BF7755F39EC45D4A3CA87DF8CEBF063177137E861408F90F398364AF54E45FA130C64E86475827AD58620291D9B51A075459F715C350E2DEFAF7407DB9D863DE1905455545CCBBCE313BD62A5E3F3BEBDB3D6438377EC2B92BB09061D38FA8541BA3B26E4A821471C7BC3B9932BAB707996F0081B96A3A29369943E3A7F6A41EF4265B8601B997117A43F3642904A8918257A8956E2B5723918F3327758A84B7178A1D098FA92EC42CB60C40988E8E3AAA4F7E1C0DB83E99F147B3EF3DD3F30E336EDB555ADA33F5C270458AC5DD3DB1FB7725D677D0282B58D2441979DFBBB6CFF51210DFC39A0ED71B8CC0108B5BB2B1ED351D0216928F49DBF851B7B0086AAC96FDF9D5D8B234FE8F19753676EFA12C9AC2A5AD6EF0FE873CE7D42AD3D98A037F78C4F9B2713E627DA26F14B23DB3C3DFB5DA7CDB9F886CB6EA0C27696432C136219F244669F8F877FD6448C3CE42A29888958E6CDCE31CE92C1BD6081218ADF197BC32F4D11EADF5B593AD010546A73480C701AA5D9A489636CD6C0E239902085A72ED959797D3B19AABD5D3623D8D2F61914F9F7CDA009485EA2431AEC8D124D0EDA1A1AC4E09EA909C44E4379497DD07A6E97373A955FB6AE3F07C5DDE3A339412079B8C2C33E97C034DA5C89100F9818B73D8B243FE71F732D3E2BDFEF515D2E99
C0604F3B433646242117E62FA5ACB1D46FFF8F9834FA1293ADCC016FA2349E778E7AA683CDEBA19C99123E8236C4F1A977F53546D4513DA164E4E4217451AF4F43B76A4B1CFFAFDB603BCA0C01F75F4A8845CF0E199A0030FC6A24386C259DFDEE91A8E28FA0F462A76CE54896852FC9CDD3B32CB2C322B732132CF808B379AFC717E29B10C6265D0B80EA90F0D593244AFEB12D4C50B64D454C1D63660E4F3524807705488448CB81E81AC6CC62F19C497306543F9D708D8BB8DCA20E8AB87CFD6D6873AB7A2336E6C2F488B64D779B8B5C13DAE675F6627528D0D4AB8E91665D31CB4743935A1D1E38D124CBF59FD2083CDF8B9D3C8DCE14AF8224A1C8D4A5975F9E23F14358616024054F3DE5C0362AAAFD993D411313032BAA14FDC26DD67E06CFCD8B9BADF793468589AABAA8267B6A54D1736ABB7F98FFF09FAE42C62F374A7FD99DA5BC9A0AAF19A948EDCB95FB62511DEF67CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 254 308 rc
0 308 m
254 308 l
254 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-870.10309 1060.5773 m
1722.6804 1060.5773 l
1722.6804 -1146.6392 l
-870.10309 -1146.6392 l
h
-870.10309 1060.5773 m
f
20.990841 212.06715 m
165.49084 212.06715 l
166.04312 212.06715 166.49084 211.61943 166.49084 211.06715 c
166.49084 188.61255 l
166.49084 188.06027 166.04312 187.61255 165.49084 187.61255 c
20.990841 187.61255 l
20.438555 187.61255 19.990841 188.06027 19.990841 188.61255 c
19.990841 211.06715 l
19.990841 211.61943 20.438555 212.06715 20.990841 212.06715 c
h
20.990841 212.06715 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1593.9908 1047.9329 m
1738.4908 1047.9329 l
1739.0431 1047.9329 1739.4908 1048.3806 1739.4908 1048.9329 c
1739.4908 1071.3875 l
1739.4908 1071.9397 1739.0431 1072.3875 1738.4908 1072.3875 c
1593.9908 1072.3875 l
1593.4386 1072.3875 1592.9908 1071.9397 1592.9908 1071.3875 c
1592.9908 1048.9329 l
1592.9908 1048.3806 1593.4386 1047.9329 1593.9908 1047.9329 c
h
1593.9908 1047.9329 m
S
0 i
0.75 1 0.75 sc
CM
3 262.87158 m
70.467178 262.87158 l
71.571747 262.87158 72.467178 261.97614 72.467178 260.87158 c
72.467178 240.41698 l
72.467178 239.31241 71.571747 238.41698 70.467178 238.41698 c
3 238.41698 l
1.8954304 238.41698 1 239.31241 1 240.41698 c
1 260.87158 l
1 261.97614 1.8954304 262.87158 3 262.87158 c
h
3 262.87158 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1576 997.12842 m
1643.4672 997.12842 l
1644.5718 997.12842 1645.4672 998.02386 1645.4672 999.12842 c
1645.4672 1019.583 l
1645.4672 1020.6876 1644.5718 1021.583 1643.4672 1021.583 c
1576 1021.583 l
1574.8954 1021.583 1574 1020.6876 1574 1019.583 c
1574 999.12842 l
1574 998.02386 1574.8954 997.12842 1576 997.12842 c
h
1576 997.12842 m
S
0 i
1 1 0.75 sc
CM
21.797699 257.00824 m
25.312431 253.49352 25.312431 247.79504 21.797699 244.28032 c
18.282982 240.76559 12.584506 240.76559 9.0697899 244.28032 c
5.5550561 247.79504 5.5550561 253.49352 9.0697899 257.00824 c
12.584506 260.52295 18.282982 260.52295 21.797699 257.00824 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1594.7977 1002.9918 m
1598.3124 1006.5065 1598.3124 1012.205 1594.7977 1015.7197 c
1591.283 1019.2344 1585.5845 1019.2344 1582.0698 1015.7197 c
1578.5551 1012.205 1578.5551 1006.5065 1582.0698 1002.9918 c
1585.5845 999.47705 1591.283 999.47705 1594.7977 1002.9918 c
S
0 i
1 1 0.75 sc
CM
65.342079 257.00824 m
68.856819 253.49352 68.856819 247.79504 65.342079 244.28032 c
61.827366 240.76559 56.128891 240.76559 52.614174 244.28032 c
49.099442 247.79504 49.099442 253.49352 52.614174 257.00824 c
56.128891 260.52295 61.827366 260.52295 65.342079 257.00824 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1638.342 1002.9918 m
1641.8568 1006.5065 1641.8568 1012.205 1638.342 1015.7197 c
1634.8274 1019.2344 1629.1289 1019.2344 1625.6141 1015.7197 c
1622.0995 1012.205 1622.0995 1006.5065 1625.6141 1002.9918 c
1629.1289 999.47705 1634.8274 999.47705 1638.342 1002.9918 c
S
/Cs1 SC
0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
1603.2059 1013.8557 m
(!)s
/Cs2 SC
0.75 1 0.75 sc
CM
119.32949 263.86319 m
186.79666 263.86319 l
187.90123 263.86319 188.79666 262.96774 188.79666 261.86319 c
188.79666 241.40858 l
188.79666 240.30402 187.90123 239.40858 186.79666 239.40858 c
119.32949 239.40858 l
118.22492 239.40858 117.32949 240.30402 117.32949 241.40858 c
117.32949 261.86319 l
117.32949 262.96774 118.22492 263.86319 119.32949 263.86319 c
h
119.32949 263.86319 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1692.3295 996.13684 m
1759.7966 996.13684 l
1760.9012 996.13684 1761.7966 997.03223 1761.7966 998.13684 c
1761.7966 1018.5914 l
1761.7966 1019.696 1760.9012 1020.5914 1759.7966 1020.5914 c
1692.3295 1020.5914 l
1691.225 1020.5914 1690.3295 1019.696 1690.3295 1018.5914 c
1690.3295 998.13684 l
1690.3295 997.03223 1691.225 996.13684 1692.3295 996.13684 c
h
1692.3295 996.13684 m
S
0 i
1 1 0.75 sc
CM
138.12718 257.99985 m
141.64192 254.48512 141.64192 248.78665 138.12718 245.27193 c
134.61247 241.7572 128.914 241.7572 125.39928 245.27193 c
121.88454 248.78665 121.88454 254.48512 125.39928 257.99985 c
128.914 261.51459 134.61247 261.51459 138.12718 257.99985 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1711.1272 1002.0002 m
1714.642 1005.5149 1714.642 1011.2134 1711.1272 1014.7281 c
1707.6124 1018.2428 1701.9139 1018.2428 1698.3993 1014.7281 c
1694.8845 1011.2134 1694.8845 1005.5149 1698.3993 1002.0002 c
1701.9139 998.48541 1707.6124 998.48541 1711.1272 1002.0002 c
S
0 i
1 1 0.75 sc
CM
181.67157 257.99985 m
185.18631 254.48512 185.18631 248.78665 181.67157 245.27193 c
178.15686 241.7572 172.45837 241.7572 168.94366 245.27193 c
165.42892 248.78665 165.42892 254.48512 168.94366 257.99985 c
172.45837 261.51459 178.15686 261.51459 181.67157 257.99985 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1754.6716 1002.0002 m
1758.1863 1005.5149 1758.1863 1011.2134 1754.6716 1014.7281 c
1751.1569 1018.2428 1745.4584 1018.2428 1741.9436 1014.7281 c
1738.429 1011.2134 1738.429 1005.5149 1741.9436 1002.0002 c
1745.4584 998.48541 1751.1569 998.48541 1754.6716 1002.0002 c
S
/Cs1 SC
0 sc
0 i
1719.5354 1012.8641 m
(!)s
0.60000002 i
/Cs2 SC
0 0 0 sc
1607.4032 1060.225 m
1591.5791 1017.7905 l
S
1632.7659 1051.7793 m
1591.7308 1018.1974 l
S
1695.5396 1050.9369 m
1592.3608 1018.8274 l
S
1723.2769 1050.3875 m
1592.9908 1018.7275 l
S
/Cs1 SC
0 sc
0 i
1658.4397 1012.583 m
(!)s
0.60000002 i
/Cs2 SC
0 0 0 sc
1632.7659 1051.7793 m
1632.1453 1018.3542 l
S
1604.0271 1051.1718 m
1632.1514 1018.6884 l
S
1695.5396 1050.9369 m
1632.1589 1019.0916 l
S
1723.2769 1050.3875 m
1632.1514 1018.6884 l
S
1604.0221 1051.1581 m
1705.1627 1016.998 l
1705.1627 1018.4778 l
1705.1627 1017.132 l
S
1603.8773 1050.7699 m
1748.5563 1017.7108 l
S
1634.2257 1051.225 m
1748.5563 1017.7108 l
S
1696.4785 1060.5911 m
1705.1627 1017.132 l
S
1698.5447 1050.2509 m
1748.5563 1017.7108 l
S
1723.2769 1050.1611 m
1705.1627 1016.998 l
S
1723.2769 1050.1611 m
1749.6805 1018.2254 l
S
0 i
1 1 1 sc
CM
37.475109 264.86407 m
33.625282 264.86407 l
33.625282 269.17233 l
31.700371 269.17233 l
35.550198 280.17233 l
39.400021 269.17233 l
37.475109 269.17233 l
h
37.475109 264.86407 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1610.4751 995.13593 m
1606.6252 995.13593 l
1606.6252 990.82764 l
1604.7003 990.82764 l
1608.5502 979.82764 l
1612.4 990.82764 l
1610.4751 990.82764 l
h
1610.4751 995.13593 m
S
0 i
1 1 1 sc
CM
154.98799 265.71152 m
151.13817 265.71152 l
151.13817 270.01981 l
149.21326 270.01981 l
153.06308 281.01981 l
156.9129 270.01981 l
154.98799 270.01981 l
h
154.98799 265.71152 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1727.988 994.28845 m
1724.1382 994.28845 l
1724.1382 989.98022 l
1722.2133 989.98022 l
1726.0631 978.98022 l
1729.9128 989.98022 l
1727.988 989.98022 l
h
1727.988 994.28845 m
S
0 i
1 1 1 sc
CM
2 307 m
71.467178 307 l
72.019463 307 72.467178 306.55228 72.467178 306 c
72.467178 283.54541 l
72.467178 282.99313 72.019463 282.54541 71.467178 282.54541 c
2 282.54541 l
1.4477153 282.54541 1 282.99313 1 283.54541 c
1 306 l
1 306.55228 1.4477153 307 2 307 c
h
2 307 m
f
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1575 953 m
1644.4672 953 l
1645.0194 953 1645.4672 953.44769 1645.4672 954 c
1645.4672 976.45459 l
1645.4672 977.0069 1645.0194 977.45459 1644.4672 977.45459 c
1575 977.45459 l
1574.4478 977.45459 1574 977.0069 1574 976.45459 c
1574 954 l
1574 953.44769 1574.4478 953 1575 953 c
h
1575 953 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 9 0 0 -9 0 0]sf
1579.7275 968.60132 m
("#$%&%'\(\)*\($%+)[ 5.832000 2.835000 5.166000 5.004000 5.004000 5.004000 4.833000 1.998000 4.833000 2.835000 1.998000 5.166000 5.004000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
118.32949 307 m
187.79666 307 l
188.34895 307 188.79666 306.55228 188.79666 306 c
188.79666 283.54541 l
188.79666 282.99313 188.34895 282.54541 187.79666 282.54541 c
118.32949 282.54541 l
117.77721 282.54541 117.32949 282.99313 117.32949 283.54541 c
117.32949 306 l
117.32949 306.55228 117.77721 307 118.32949 307 c
h
118.32949 307 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1691.3295 953 m
1760.7966 953 l
1761.349 953 1761.7966 953.44769 1761.7966 954 c
1761.7966 976.45459 l
1761.7966 977.0069 1761.349 977.45459 1760.7966 977.45459 c
1691.3295 977.45459 l
1690.7772 977.45459 1690.3295 977.0069 1690.3295 976.45459 c
1690.3295 954 l
1690.3295 953.44769 1690.7772 953 1691.3295 953 c
h
1691.3295 953 m
S
/Cs1 SC
0 sc
0 i
1696.0571 968.60132 m
("#$%&%'\(\)*\($%+)[ 5.832000 2.835000 5.166000 5.004000 5.004000 5.004000 4.833000 1.998000 4.833000 2.835000 1.998000 5.166000 5.004000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
20.990841 165.46791 m
165.49084 165.46791 l
166.04312 165.46791 166.49084 165.02019 166.49084 164.46791 c
166.49084 142.01331 l
166.49084 141.46103 166.04312 141.01331 165.49084 141.01331 c
20.990841 141.01331 l
20.438555 141.01331 19.990841 141.46103 19.990841 142.01331 c
19.990841 164.46791 l
19.990841 165.02019 20.438555 165.46791 20.990841 165.46791 c
h
20.990841 165.46791 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1593.9908 1094.5321 m
1738.4908 1094.5321 l
1739.0431 1094.5321 1739.4908 1094.9799 1739.4908 1095.5321 c
1739.4908 1117.9867 l
1739.4908 1118.5389 1739.0431 1118.9867 1738.4908 1118.9867 c
1593.9908 1118.9867 l
1593.4386 1118.9867 1592.9908 1118.5389 1592.9908 1117.9867 c
1592.9908 1095.5321 l
1592.9908 1094.9799 1593.4386 1094.5321 1593.9908 1094.5321 c
h
1593.9908 1094.5321 m
S
0 i
1 0.75 0.75 sc
CM
49.912319 145.26025 m
49.912319 160.29089 l
51.687611 161.96095 l
67.665222 161.96095 l
67.665222 146.93033 l
65.889931 145.26025 l
h
49.912319 145.26025 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1622.9124 1114.7397 m
1622.9124 1099.7091 l
1624.6876 1098.0391 l
1640.6653 1098.0391 l
1640.6653 1113.0697 l
1638.8899 1114.7397 l
1622.9124 1114.7397 l
1622.9124 1099.7091 m
1638.8899 1099.7091 l
1640.6653 1098.0391 l
1638.8899 1099.7091 m
1638.8899 1114.7397 l
S
0 i
1 0.5 0.5 sc
CM
72.280411 145.26025 m
72.280411 160.29089 l
74.055702 161.96095 l
90.03331 161.96095 l
90.03331 146.93033 l
88.258026 145.26025 l
h
72.280411 145.26025 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1645.2804 1114.7397 m
1645.2804 1099.7091 l
1647.0557 1098.0391 l
1663.0333 1098.0391 l
1663.0333 1113.0697 l
1661.2581 1114.7397 l
1645.2804 1114.7397 l
1645.2804 1099.7091 m
1661.2581 1099.7091 l
1663.0333 1098.0391 l
1661.2581 1099.7091 m
1661.2581 1114.7397 l
S
0 i
1 0.75 0.75 sc
CM
94.648499 145.26025 m
94.648499 160.29089 l
96.42379 161.96095 l
112.40141 161.96095 l
112.40141 146.93033 l
110.62611 145.26025 l
h
94.648499 145.26025 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1667.6484 1114.7397 m
1667.6484 1099.7091 l
1669.4238 1098.0391 l
1685.4014 1098.0391 l
1685.4014 1113.0697 l
1683.6261 1114.7397 l
1667.6484 1114.7397 l
1667.6484 1099.7091 m
1683.6261 1099.7091 l
1685.4014 1098.0391 l
1683.6261 1099.7091 m
1683.6261 1114.7397 l
S
0 i
1 0.75 0.75 sc
CM
117.01659 145.26025 m
117.01659 160.29089 l
118.79188 161.96095 l
134.76949 161.96095 l
134.76949 146.93033 l
132.9942 145.26025 l
h
117.01659 145.26025 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1690.0166 1114.7397 m
1690.0166 1099.7091 l
1691.7919 1098.0391 l
1707.7695 1098.0391 l
1707.7695 1113.0697 l
1705.9941 1114.7397 l
1690.0166 1114.7397 l
1690.0166 1099.7091 m
1705.9941 1099.7091 l
1707.7695 1098.0391 l
1705.9941 1099.7091 m
1705.9941 1114.7397 l
S
0 i
1 0.75 0.75 sc
CM
27.544231 145.26025 m
27.544231 160.29089 l
29.319521 161.96095 l
45.297134 161.96095 l
45.297134 146.93033 l
43.521847 145.26025 l
h
27.544231 145.26025 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1600.5442 1114.7397 m
1600.5442 1099.7091 l
1602.3196 1098.0391 l
1618.2971 1098.0391 l
1618.2971 1113.0697 l
1616.5219 1114.7397 l
1600.5442 1114.7397 l
1600.5442 1099.7091 m
1616.5219 1099.7091 l
1618.2971 1098.0391 l
1616.5219 1099.7091 m
1616.5219 1114.7397 l
S
0 i
1 0.75 0.75 sc
CM
139.38467 145.26025 m
139.38467 160.29089 l
141.15996 161.96095 l
157.13757 161.96095 l
157.13757 146.93033 l
155.36229 145.26025 l
h
139.38467 145.26025 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1712.3846 1114.7397 m
1712.3846 1099.7091 l
1714.1599 1098.0391 l
1730.1376 1098.0391 l
1730.1376 1113.0697 l
1728.3623 1114.7397 l
1712.3846 1114.7397 l
1712.3846 1099.7091 m
1728.3623 1099.7091 l
1730.1376 1098.0391 l
1728.3623 1099.7091 m
1728.3623 1114.7397 l
S
0 i
1 0.5 0.5 sc
CM
25.213791 208.2079 m
42.966698 208.2079 l
42.966698 191.5072 l
25.213791 191.5072 l
h
25.213791 208.2079 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1598.2137 1051.7921 m
1615.9667 1051.7921 l
1615.9667 1068.4928 l
1598.2137 1068.4928 l
h
1598.2137 1051.7921 m
S
0 i
1 0.5 0.5 sc
CM
52.33511 208.2079 m
70.088013 208.2079 l
70.088013 191.5072 l
52.33511 191.5072 l
h
52.33511 208.2079 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1625.3351 1051.7921 m
1643.088 1051.7921 l
1643.088 1068.4928 l
1625.3351 1068.4928 l
h
1625.3351 1051.7921 m
S
0 i
1 0.5 0.5 sc
CM
114.28912 208.2079 m
132.04202 208.2079 l
132.04202 191.5072 l
114.28912 191.5072 l
h
114.28912 208.2079 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1687.2891 1051.7921 m
1705.042 1051.7921 l
1705.042 1068.4928 l
1687.2891 1068.4928 l
h
1687.2891 1051.7921 m
S
0 i
1 0.5 0.5 sc
CM
141.2869 208.16632 m
159.03979 208.16632 l
159.03979 191.46562 l
141.2869 191.46562 l
h
141.2869 208.16632 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1714.2869 1051.8337 m
1732.0398 1051.8337 l
1732.0398 1068.5344 l
1714.2869 1068.5344 l
h
1714.2869 1051.8337 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 14 0 0 -14 0 0]sf
1658.1886 1063.3875 m
(!)s
2 w
0.60000002 i
/Cs2 SC
0 0 0 sc
1654.1289 1098.0391 m
1654.0873 1085.6381 l
S
0 i
CM
81.055122 183.96188 m
77.48732 174.34987 l
84.687279 174.37399 l
h
81.055122 183.96188 m
f
0 J
0 j
1 0 0 -1 -1573 1260 cm
1654.0552 1076.0381 m
1650.4873 1085.6501 l
1657.6873 1085.626 l
h
1654.0552 1076.0381 m
S
1 1 1 sc
CM
20.990841 25.670177 m
165.49084 25.670177 l
166.04312 25.670177 166.49084 25.222464 166.49084 24.670177 c
166.49084 2.2155826 l
166.49084 1.6632979 166.04312 1.2155827 165.49084 1.2155827 c
20.990841 1.2155827 l
20.438555 1.2155827 19.990841 1.6632979 19.990841 2.2155826 c
19.990841 24.670177 l
19.990841 25.222464 20.438555 25.670177 20.990841 25.670177 c
h
20.990841 25.670177 m
f
1 w
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1593.9908 1234.3298 m
1738.4908 1234.3298 l
1739.0431 1234.3298 1739.4908 1234.7776 1739.4908 1235.3298 c
1739.4908 1257.7844 l
1739.4908 1258.3367 1739.0431 1258.7844 1738.4908 1258.7844 c
1593.9908 1258.7844 l
1593.4386 1258.7844 1592.9908 1258.3367 1592.9908 1257.7844 c
1592.9908 1235.3298 l
1592.9908 1234.7776 1593.4386 1234.3298 1593.9908 1234.3298 c
h
1593.9908 1234.3298 m
S
0 i
1 0.75 0.75 sc
CM
49.912319 5.4625306 m
49.912319 20.49316 l
51.687611 22.163231 l
67.665222 22.163231 l
67.665222 7.1326008 l
65.889931 5.4625306 l
h
49.912319 5.4625306 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1622.9124 1254.5375 m
1622.9124 1239.5068 l
1624.6876 1237.8368 l
1640.6653 1237.8368 l
1640.6653 1252.8674 l
1638.8899 1254.5375 l
1622.9124 1254.5375 l
1622.9124 1239.5068 m
1638.8899 1239.5068 l
1640.6653 1237.8368 l
1638.8899 1239.5068 m
1638.8899 1254.5375 l
S
0 i
1 0.5 0.5 sc
CM
72.280411 5.4625306 m
72.280411 20.49316 l
74.055702 22.163231 l
90.03331 22.163231 l
90.03331 7.1326008 l
88.258026 5.4625306 l
h
72.280411 5.4625306 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1645.2804 1254.5375 m
1645.2804 1239.5068 l
1647.0557 1237.8368 l
1663.0333 1237.8368 l
1663.0333 1252.8674 l
1661.2581 1254.5375 l
1645.2804 1254.5375 l
1645.2804 1239.5068 m
1661.2581 1239.5068 l
1663.0333 1237.8368 l
1661.2581 1239.5068 m
1661.2581 1254.5375 l
S
0 i
1 0.75 0.75 sc
CM
94.648499 5.4625306 m
94.648499 20.49316 l
96.42379 22.163231 l
112.40141 22.163231 l
112.40141 7.1326008 l
110.62611 5.4625306 l
h
94.648499 5.4625306 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1667.6484 1254.5375 m
1667.6484 1239.5068 l
1669.4238 1237.8368 l
1685.4014 1237.8368 l
1685.4014 1252.8674 l
1683.6261 1254.5375 l
1667.6484 1254.5375 l
1667.6484 1239.5068 m
1683.6261 1239.5068 l
1685.4014 1237.8368 l
1683.6261 1239.5068 m
1683.6261 1254.5375 l
S
0 i
1 0.75 0.75 sc
CM
117.01659 5.4625306 m
117.01659 20.49316 l
118.79188 22.163231 l
134.76949 22.163231 l
134.76949 7.1326008 l
132.9942 5.4625306 l
h
117.01659 5.4625306 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1690.0166 1254.5375 m
1690.0166 1239.5068 l
1691.7919 1237.8368 l
1707.7695 1237.8368 l
1707.7695 1252.8674 l
1705.9941 1254.5375 l
1690.0166 1254.5375 l
1690.0166 1239.5068 m
1705.9941 1239.5068 l
1707.7695 1237.8368 l
1705.9941 1239.5068 m
1705.9941 1254.5375 l
S
0 i
1 0.75 0.75 sc
CM
27.544231 5.4625306 m
27.544231 20.49316 l
29.319521 22.163231 l
45.297134 22.163231 l
45.297134 7.1326008 l
43.521847 5.4625306 l
h
27.544231 5.4625306 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1600.5442 1254.5375 m
1600.5442 1239.5068 l
1602.3196 1237.8368 l
1618.2971 1237.8368 l
1618.2971 1252.8674 l
1616.5219 1254.5375 l
1600.5442 1254.5375 l
1600.5442 1239.5068 m
1616.5219 1239.5068 l
1618.2971 1237.8368 l
1616.5219 1239.5068 m
1616.5219 1254.5375 l
S
0 i
1 0.75 0.75 sc
CM
139.38467 5.4625306 m
139.38467 20.49316 l
141.15996 22.163231 l
157.13757 22.163231 l
157.13757 7.1326008 l
155.36229 5.4625306 l
h
139.38467 5.4625306 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1712.3846 1254.5375 m
1712.3846 1239.5068 l
1714.1599 1237.8368 l
1730.1376 1237.8368 l
1730.1376 1252.8674 l
1728.3623 1254.5375 l
1712.3846 1254.5375 l
1712.3846 1239.5068 m
1728.3623 1239.5068 l
1730.1376 1237.8368 l
1728.3623 1239.5068 m
1728.3623 1254.5375 l
S
0 i
1 1 1 sc
CM
94.11348 28.584887 m
90.263657 28.584887 l
90.263657 32.893169 l
88.338745 32.893169 l
92.188568 43.893169 l
96.038391 32.893169 l
94.11348 32.893169 l
h
94.11348 28.584887 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1667.1135 1231.4152 m
1663.2637 1231.4152 l
1663.2637 1227.1068 l
1661.3387 1227.1068 l
1665.1886 1216.1068 l
1669.0385 1227.1068 l
1667.1135 1227.1068 l
h
1667.1135 1231.4152 m
S
0 i
0.75 1 0.75 sc
CM
21.990841 72.269424 m
164.49084 72.269424 l
165.59541 72.269424 166.49084 71.373993 166.49084 70.269424 c
166.49084 49.814827 l
166.49084 48.710255 165.59541 47.814827 164.49084 47.814827 c
21.990841 47.814827 l
20.886271 47.814827 19.990841 48.710255 19.990841 49.814827 c
19.990841 70.269424 l
19.990841 71.373993 20.886271 72.269424 21.990841 72.269424 c
h
21.990841 72.269424 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1594.9908 1187.7306 m
1737.4908 1187.7306 l
1738.5955 1187.7306 1739.4908 1188.626 1739.4908 1189.7306 c
1739.4908 1210.1852 l
1739.4908 1211.2898 1738.5955 1212.1852 1737.4908 1212.1852 c
1594.9908 1212.1852 l
1593.8862 1212.1852 1592.9908 1211.2898 1592.9908 1210.1852 c
1592.9908 1189.7306 l
1592.9908 1188.626 1593.8862 1187.7306 1594.9908 1187.7306 c
h
1594.9908 1187.7306 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
1617.3468 1203.4579 m
(,#\)%+-$#./#012$'3)[ 5.784000 3.996000 6.444000 6.672000 6.000000 3.552000 6.888000 3.996000 10.236000 6.444000 3.996000 3.336000 8.220000 2.664000 6.888000 6.444000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
21.990841 118.86867 m
164.49084 118.86867 l
165.59541 118.86867 166.49084 117.97324 166.49084 116.86867 c
166.49084 96.41407 l
166.49084 95.309502 165.59541 94.41407 164.49084 94.41407 c
21.990841 94.41407 l
20.886271 94.41407 19.990841 95.309502 19.990841 96.41407 c
19.990841 116.86867 l
19.990841 117.97324 20.886271 118.86867 21.990841 118.86867 c
h
21.990841 118.86867 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -1573 1260 cm
1594.9908 1141.1313 m
1737.4908 1141.1313 l
1738.5955 1141.1313 1739.4908 1142.0267 1739.4908 1143.1313 c
1739.4908 1163.5859 l
1739.4908 1164.6906 1738.5955 1165.5859 1737.4908 1165.5859 c
1594.9908 1165.5859 l
1593.8862 1165.5859 1592.9908 1164.6906 1592.9908 1163.5859 c
1592.9908 1143.1313 l
1592.9908 1142.0267 1593.8862 1141.1313 1594.9908 1141.1313 c
h
1594.9908 1141.1313 m
S
/Cs1 SC
0 sc
0 i
1617.3468 1156.8586 m
(,#\)%+-$#./#012$'3)[ 5.784000 3.996000 6.444000 6.672000 6.000000 3.552000 6.888000 3.996000 10.236000 6.444000 3.996000 3.336000 8.220000 2.664000 6.888000 6.444000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
94.11348 75.687607 m
90.263657 75.687607 l
90.263657 79.995888 l
88.338745 79.995888 l
92.188568 90.995888 l
96.038391 79.995888 l
94.11348 79.995888 l
h
94.11348 75.687607 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1667.1135 1184.3124 m
1663.2637 1184.3124 l
1663.2637 1180.0042 l
1661.3387 1180.0042 l
1665.1886 1169.0042 l
1669.0385 1180.0042 l
1667.1135 1180.0042 l
h
1667.1135 1184.3124 m
S
0 i
1 1 1 sc
CM
94.11348 122.28685 m
90.263657 122.28685 l
90.263657 126.59513 l
88.338745 126.59513 l
92.188568 137.59512 l
96.038391 126.59513 l
94.11348 126.59513 l
h
94.11348 122.28685 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1573 1260 cm
1667.1135 1137.7131 m
1663.2637 1137.7131 l
1663.2637 1133.4049 l
1661.3387 1133.4049 l
1665.1886 1122.4049 l
1669.0385 1133.4049 l
1667.1135 1133.4049 l
h
1667.1135 1137.7131 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 9 0 0 -9 0 0]sf
1758 1249.5612 m
(145,06&*7&*)[ 6.165000 5.499000 6.003000 5.166000 2.502000 6.840000 5.004000 2.835000 5.337000 5.004000 0.000000 ] xS
1747.9246 1102.9061 m
(,#\)%+-$#./#012$'3)[ 4.338000 2.997000 4.833000 5.004000 4.500000 2.664000 5.166000 2.997000 7.677000 4.833000 2.997000 2.502000 6.165000 1.998000 5.166000 4.833000 0.000000 ] xS
1769.4165 1114.1581 m
(06&*7&*)[ 2.502000 6.840000 5.004000 2.835000 5.337000 5.004000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
