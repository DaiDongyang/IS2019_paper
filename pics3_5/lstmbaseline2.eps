%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 251.000000 328.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 251 328
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 251 328
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /B put
dup 34 /L put
dup 35 /S put
dup 36 /T put
dup 37 /M put
dup 38 /space put
dup 39 /O put
dup 40 /u put
dup 41 /t put
dup 42 /p put
dup 43 /E put
dup 44 /m put
dup 45 /b put
dup 46 /e put
dup 47 /d put
dup 48 /i put
dup 49 /n put
dup 50 /g put
dup 51 /q put
dup 52 /c put
dup 53 /P put
dup 54 /o put
dup 55 /s put
dup 56 /hyphen put
dup 57 /w put
dup 58 /D put
dup 59 /C put
dup 60 /a put
dup 61 /h put
dup 62 /r put
dup 63 /l put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






542A45321C5E520000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020043FF3B022D02110018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA001900025D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800012FBA0013002800032BB8001310BA001E000900032BB8001E10303113113311331E0333323E0235342E0223220607233505140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D27130205FD36010A171F12082A49623737624B2C272B46FE26483822213647262446372220364500000000020024FF3B020E02110013002C00A9B8002D2FBA0015000A00032BB8001510B8002D10B80022D0B800222FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8000A10B80017D0B800172FB8000A10B8002AD0B8002A2FB8000A10B8002CD0B8002C2F00B800142FBA001D000500032BB8001D10BA000F002700032BB8000F10303137343E0233321E0215140E0223222E0201112315232E0323220E0215141E023332363733117E10243C2B2C3E271211263C2B293D2713019055020E292E2E143B593B1D1E3B593C365A1502FE264838222136472624463722203645FE6102CA45171F13082B49623737624A2C262BFEF50000000001003D0000014D0213000E0027BA0003000100032BB8000310B8000DD0B8000D2F00B800012FBA0009000800032BB8000910303113113335343E02333526060723353D55142C4833455A1F020205FDFBE6324D361C5A023C3F6D00


00>] def
/CharStrings 33 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/B 3 def
/C 4 def
/D 5 def
/E 6 def
/L 7 def
/M 8 def
/O 9 def
/P 10 def
/S 11 def
/T 12 def
/a 13 def
/b 14 def
/c 15 def
/d 16 def
/e 17 def
/g 18 def
/h 19 def
/i 20 def
/l 21 def
/m 22 def
/n 23 def
/o 24 def
/p 25 def
/q 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/w 31 def
/uni2B91 32 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec

C9BDCA0CDB53C9CE1910D40D37D0FC2AA9F389601499AE2E7A48CF31A999A821637C67757D5B2D28A78A84BABA98946389CD916D8D3B00621C1D236142374A41DECBE28E766A1EAB1C1D86ACC7FF8B9D8EE175722852D6D102558AF8BC5BF8E419DAE8A07DC6A6C9608F8148698EC0547DB865580A71ACBAF05D5CD886AE16BA892F088B6425A2C3654739B50F63ECDF8E03E1436D6867CA5691070536D6C8F54E9A05C9FE5CD2129B7B1613B59DBD5D7B3998ACE5ACAC8A52096970903743FEE1C40E38E5F2D63C16A5BFA263D64DB3252EB746F296971E13B17D9E89142FC2ED12562231C5E368038D186A1DAFDBFC034420ADE368E73F9CA18E1183C9F8A0607E22E7E478B314A5A8C6AE7933D12B68AC4CCB8AE6691AC0E472399072A1FF3358D41DE822E0967E90D35478DCB93AC1C4A0553E43FCA91E1778EDA223CF514737F03B0349EBB199D3759A9E5C65D51AE520FEF720D2BF1C853C16DB14D91BABDE83C837C0A1559A7CCA418E1DD89D0AF71B39CC7A231824BCEABA7109742F02B878A7A9FC6426A9E5AFBC035ABD7EFB403B39BD17A194609ECDBB51928A193AAA31B372ACE6C1710FB0144220BF396AD8848D50CC2DD7590789742A46272E036C461B998BB6079506CCBEA1B3E4FD6E9C6ADDAD2A39FD7128E5218B9FC0FDC1CA669076661B0108992AF54879191D01BC24FE79B45E0B91485598F5D6C5FF4088C0E2AB0F10C0ADE74B50EDD652BE0B2E5234DA0E52FEBC927C68F32838AF15DD611D19131FDE00F0F9BCB4F7186BF5FCDA746F96D0488C09C1474BC32289416003809A38BB330AC04459D682DD46C158A98F3F437F874B0503B59ED128C916CDFF4915C6C3C8F29CBFDF614B6FE2C07FBE7A27A35C6414B055CFAE8D126ED5E84630B98A71BE2CBA79B2AF18BB11DFD03F7CD8B14A0443DF45A3519F197D703305B0160234DC24F15707403F738C32FAB8C69CBC2E21FA849FB28AD3FF88E6254F38F44494F4A50D12E77A7CF03BDD4DC5D47DE089E1B3E6AE008A85C31FABCBF7F50B03FC8043FA2172A69DEF44DB7C5A6A610A77CB99AED8AD549F6325F4734711298F98A93DBFD4C81121F819D2731B4CA6754C8055639E266EF17E4104FC4F07F95FB22ECEF4902E032C93A67A7FEF8D91B75EAEE7319C127950478C10EE8BD45D31F39AA6629C98CDB93E8090ECED21E8FD47DE18FBD8D508E4473E0BAA2A73EB5A0774775238403F58392D9C0C4430CFF1CD27E533A2099CD565FE406B8A941E63057D36D0BD4BDE8CA2DACC33634A52ECA9448AED9C66F4A7DE0269688EC3B0F559B4758240AD0917445F43211AD34B6F95F5EB7BF858B01A927BE78BB0C04FFCB9AE3E8727FCF8DF774891A55C12D5D48969D557DB797E6650D49132E2D6FDC1FDD6F044ABCC5F76DA94DF714F126C1372E36F7A7941FCC1D632


ADE9B8D9F4D69F086B3A722231D0EE4985B11AC1E85E06D76D928861A17A8BFA0EBD1850C365F0FA199A7AA55F2144B349CF74C9A3C4439F834ADD7577D588FD8085BD980A56BDC8037F442C74531DD3F07DF032697FEC3DF2B4DF4D8CB3CB5C594948D5C41D6D09322B9914C62FF03CD604AE5659232950562048F4283CA443A51690930A89F765AEDD5D92584C160E1F1753025EDB9170B69DE50A47F66808CE87BCDFB41A20B56CB2C78F381A65A93C320B00588CC1415F9EB69717D8C030695093B20725D472724C6C84846771F0694FC8BCDE2205B0F647E4CD26F629578DC50F0CC44960A5AC697C952B128E08A1C568B75ABF4AC2137EF7740C3DD616258BF09FF9F6E7C03BA9122325E3850B7C612428416E575ECEA48E7D8343F29B38E47536651407100C84C9540625E014E6E339899B96649A2446C4F1E9CBF86C3BDCFD3BE6BFBDA10EC186629F7F05D0CB4187960767ED38466D60A65EA42760B57796BAF8F6A87068931A0C249F3DC0E027DD3C2363EA1E781B9543455A8C44851F0813989B9406921910172BD140B587374E04D0A24B67244272E83DAC9CC8858CB0155CFD367A677949CDA33E5FDD2997C29AF4D4BB0D5D16ADF67C69DC17014802BDE58A5D661D61FB9E5534B113DE19C36F98CF3AC44BFD988D0AF73C674B15BA43168CF1E2BF4EAA23655FC86AF38F17B0B5AEF41C049DACA9F84DF67F9FBF8FD23FE8D6DE51BD4EDB88B13EED67361F498F9B023DA493135FB0A78C9952D8A47CA83899059DD8F1E425001C7EB7681852CB68334298CA2969574153D65BB78E3D0EF468FD15E633B3291D4546C25D3994AE59EB20DD0890AE24449219A6A217DCF0FDF36CA56528C274D42C0BC8CA35657BEE24A3D5A6BD36902AF8CB0001C54C773728E1EEC8D1509095876C281C61E2A738F0EA2BDCD4B9D70397DDA621A23D30D75C6FC92EB4ECCEC49C41B3AF30851E8C0114279A1864EFD3CF982AE510661E6E055E410F4F53E6308AC2AEBA2556A8E1C8CFB2B2C9E5CE428B0CE6BECADA3B6660056CEF67F5672A1B35A6612ECE65DA58FF30F5FE8363C9D1A7816F46C1C84E368A3417A9EBBBD22A65CF944D4FB9F18E5B91F50DD1725CBDC5DB03593280335EAECB5EB57B38B8C471287C7F807636D894648FE4F6984AB20C334003D1F5A1D40820E9681F1F61234010F95713491C0E5C63B2A47FAA65D843E8810FD0392D3C23C2B0BA6F7C663B5979BF8C26C9F54A017FD01659F737D444EF29A9AEA5548B44EB310A3DA02E4AAA0F90820882FB7848E020C1B7CD2F5E35B2D11E0688A8078658BD28546B4D4BE870448A1FA4FA7EB3D700F170E371338994069F84E9E97C12A3089D8A7E3D233B4DB2B81F921B244D0EE952B936E0C0055E19AE637E2AF184DEC8AF0BA6BD9A2C57B0D31487C230426C7C46AD4699778A

956F9AE46199C471861B1B06846A5430151830545049822B73C8C84E09F1329CB0BBD8CB72377ED5E1280EAAD5A459790BEB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 251 328 rc
0 328 m
251 328 l
251 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-767.27271 991.63635 m
1519.0909 991.63635 l
1519.0909 -954.72729 l
-767.27271 -954.72729 l
h
-767.27271 991.63635 m
f
35 247.62424 m
179.5 247.62424 l
180.05229 247.62424 180.5 247.17651 180.5 246.62424 c
180.5 224.16963 l
180.5 223.61736 180.05229 223.16963 179.5 223.16963 c
35 223.16963 l
34.447716 223.16963 34 223.61736 34 224.16963 c
34 246.62424 l
34 247.17651 34.447716 247.62424 35 247.62424 c
h
35 247.62424 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
242 358.37576 m
386.5 358.37576 l
387.05228 358.37576 387.5 358.82349 387.5 359.37576 c
387.5 381.83035 l
387.5 382.38266 387.05228 382.83035 386.5 382.83035 c
242 382.83035 l
241.44771 382.83035 241 382.38266 241 381.83035 c
241 359.37576 l
241 358.82349 241.44771 358.37576 242 358.37576 c
h
242 358.37576 m
S
0 i
1 0.75 0.75 sc
CM
63.921478 227.41658 m
63.921478 242.44722 l
65.69677 244.11728 l
81.674385 244.11728 l
81.674385 229.08665 l
79.899094 227.41658 l
h
63.921478 227.41658 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
270.92148 378.5834 m
270.92148 363.5528 l
272.69678 361.88272 l
288.67438 361.88272 l
288.67438 376.91333 l
286.89911 378.5834 l
270.92148 378.5834 l
270.92148 363.5528 m
286.89911 363.5528 l
288.67438 361.88272 l
286.89911 363.5528 m
286.89911 378.5834 l
S
0 i
1 0.5 0.5 sc
CM
86.289566 227.41658 m
86.289566 242.44722 l
88.064857 244.11728 l
104.04247 244.11728 l
104.04247 229.08665 l
102.26718 227.41658 l
h
86.289566 227.41658 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
293.28958 378.5834 m
293.28958 363.5528 l
295.06485 361.88272 l
311.04248 361.88272 l
311.04248 376.91333 l
309.26718 378.5834 l
293.28958 378.5834 l
293.28958 363.5528 m
309.26718 363.5528 l
311.04248 361.88272 l
309.26718 363.5528 m
309.26718 378.5834 l
S
0 i
1 0.75 0.75 sc
CM
108.65765 227.41658 m
108.65765 242.44722 l
110.43295 244.11728 l
126.41056 244.11728 l
126.41056 229.08665 l
124.63527 227.41658 l
h
108.65765 227.41658 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
315.65765 378.5834 m
315.65765 363.5528 l
317.43295 361.88272 l
333.41055 361.88272 l
333.41055 376.91333 l
331.63528 378.5834 l
315.65765 378.5834 l
315.65765 363.5528 m
331.63528 363.5528 l
333.41055 361.88272 l
331.63528 363.5528 m
331.63528 378.5834 l
S
0 i
1 0.75 0.75 sc
CM
131.02574 227.41658 m
131.02574 242.44722 l
132.80104 244.11728 l
148.77866 244.11728 l
148.77866 229.08665 l
147.00336 227.41658 l
h
131.02574 227.41658 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
338.02576 378.5834 m
338.02576 363.5528 l
339.80103 361.88272 l
355.77866 361.88272 l
355.77866 376.91333 l
354.00336 378.5834 l
338.02576 378.5834 l
338.02576 363.5528 m
354.00336 363.5528 l
355.77866 361.88272 l
354.00336 363.5528 m
354.00336 378.5834 l
S
0 i
1 0.75 0.75 sc
CM
41.553391 227.41658 m
41.553391 242.44722 l
43.328682 244.11728 l
59.306297 244.11728 l
59.306297 229.08665 l
57.531006 227.41658 l
h
41.553391 227.41658 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
248.55339 378.5834 m
248.55339 363.5528 l
250.32867 361.88272 l
266.3063 361.88272 l
266.3063 376.91333 l
264.53101 378.5834 l
248.55339 378.5834 l
248.55339 363.5528 m
264.53101 363.5528 l
266.3063 361.88272 l
264.53101 363.5528 m
264.53101 378.5834 l
S
0 i
1 0.75 0.75 sc
CM
153.39383 227.41658 m
153.39383 242.44722 l
155.16913 244.11728 l
171.14674 244.11728 l
171.14674 229.08665 l
169.37144 227.41658 l
h
153.39383 227.41658 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
360.39383 378.5834 m
360.39383 363.5528 l
362.16913 361.88272 l
378.14673 361.88272 l
378.14673 376.91333 l
376.37146 378.5834 l
360.39383 378.5834 l
360.39383 363.5528 m
376.37146 363.5528 l
378.14673 361.88272 l
376.37146 363.5528 m
376.37146 378.5834 l
S
0 i
1 1 1 sc
CM
33.947727 117.96948 m
178.44772 117.96948 l
179.00002 117.96948 179.44772 117.52177 179.44772 116.96948 c
179.44772 94.514885 l
179.44772 93.962601 179.00002 93.514885 178.44772 93.514885 c
33.947727 93.514885 l
33.395443 93.514885 32.947727 93.962601 32.947727 94.514885 c
32.947727 116.96948 l
32.947727 117.52177 33.395443 117.96948 33.947727 117.96948 c
h
33.947727 117.96948 m
f
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
240.94772 488.03052 m
385.44772 488.03052 l
386 488.03052 386.44772 488.47824 386.44772 489.03052 c
386.44772 511.48511 l
386.44772 512.03741 386 512.48511 385.44772 512.48511 c
240.94772 512.48511 l
240.39545 512.48511 239.94772 512.03741 239.94772 511.48511 c
239.94772 489.03052 l
239.94772 488.47824 240.39545 488.03052 240.94772 488.03052 c
h
240.94772 488.03052 m
S
0 i
1 0.75 0.75 sc
CM
62.869205 97.761833 m
62.869205 112.79247 l
64.644501 114.46253 l
80.622108 114.46253 l
80.622108 99.431908 l
78.846825 97.761833 l
h
62.869205 97.761833 m
f
[] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
269.8692 508.23816 m
269.8692 493.20755 l
271.6445 491.53748 l
287.6221 491.53748 l
287.6221 506.56808 l
285.84683 508.23816 l
269.8692 508.23816 l
269.8692 493.20755 m
285.84683 493.20755 l
287.6221 491.53748 l
285.84683 493.20755 m
285.84683 508.23816 l
S
0 i
1 0.5 0.5 sc
CM
85.237297 97.761833 m
85.237297 112.79247 l
87.012589 114.46253 l
102.9902 114.46253 l
102.9902 99.431908 l
101.21491 97.761833 l
h
85.237297 97.761833 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
292.2373 508.23816 m
292.2373 493.20755 l
294.01257 491.53748 l
309.9902 491.53748 l
309.9902 506.56808 l
308.2149 508.23816 l
292.2373 508.23816 l
292.2373 493.20755 m
308.2149 493.20755 l
309.9902 491.53748 l
308.2149 493.20755 m
308.2149 508.23816 l
S
0 i
1 0.75 0.75 sc
CM
107.60538 97.761833 m
107.60538 112.79247 l
109.38068 114.46253 l
125.35829 114.46253 l
125.35829 99.431908 l
123.583 97.761833 l
h
107.60538 97.761833 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
314.60538 508.23816 m
314.60538 493.20755 l
316.38068 491.53748 l
332.35828 491.53748 l
332.35828 506.56808 l
330.58301 508.23816 l
314.60538 508.23816 l
314.60538 493.20755 m
330.58301 493.20755 l
332.35828 491.53748 l
330.58301 493.20755 m
330.58301 508.23816 l
S
0 i
1 0.75 0.75 sc
CM
129.97348 97.761833 m
129.97348 112.79247 l
131.74876 114.46253 l
147.72638 114.46253 l
147.72638 99.431908 l
145.95108 97.761833 l
h
129.97348 97.761833 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
336.97348 508.23816 m
336.97348 493.20755 l
338.74875 491.53748 l
354.72638 491.53748 l
354.72638 506.56808 l
352.95108 508.23816 l
336.97348 508.23816 l
336.97348 493.20755 m
352.95108 493.20755 l
354.72638 491.53748 l
352.95108 493.20755 m
352.95108 508.23816 l
S
0 i
1 0.75 0.75 sc
CM
40.501118 97.761833 m
40.501118 112.79247 l
42.276409 114.46253 l
58.254025 114.46253 l
58.254025 99.431908 l
56.478733 97.761833 l
h
40.501118 97.761833 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
247.50111 508.23816 m
247.50111 493.20755 l
249.27641 491.53748 l
265.25403 491.53748 l
265.25403 506.56808 l
263.47873 508.23816 l
247.50111 508.23816 l
247.50111 493.20755 m
263.47873 493.20755 l
265.25403 491.53748 l
263.47873 493.20755 m
263.47873 508.23816 l
S
0 i
1 0.75 0.75 sc
CM
152.34157 97.761833 m
152.34157 112.79247 l
154.11685 114.46253 l
170.09447 114.46253 l
170.09447 99.431908 l
168.31918 97.761833 l
h
152.34157 97.761833 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
359.34155 508.23816 m
359.34155 493.20755 l
361.11685 491.53748 l
377.09445 491.53748 l
377.09445 506.56808 l
375.31918 508.23816 l
359.34155 508.23816 l
359.34155 493.20755 m
375.31918 493.20755 l
377.09445 491.53748 l
375.31918 493.20755 m
375.31918 508.23816 l
S
0 i
1 1 1 sc
CM
108.12264 120.87133 m
104.27281 120.87133 l
104.27281 125.17961 l
102.3479 125.17961 l
106.19773 136.17961 l
110.04755 125.17961 l
108.12264 125.17961 l
h
108.12264 120.87133 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -207 606 cm
315.12265 485.12866 m
311.27283 485.12866 l
311.27283 480.82037 l
309.3479 480.82037 l
313.19772 469.82037 l
317.04755 480.82037 l
315.12265 480.82037 l
h
315.12265 485.12866 m
S
0 i
0.75 1 0.75 sc
CM
36 162.12706 m
178.5 162.12706 l
179.60457 162.12706 180.5 161.23163 180.5 160.12706 c
180.5 139.67247 l
180.5 138.5679 179.60457 137.67247 178.5 137.67247 c
36 137.67247 l
34.895432 137.67247 34 138.5679 34 139.67247 c
34 160.12706 l
34 161.23163 34.895432 162.12706 36 162.12706 c
h
36 162.12706 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
243 443.87292 m
385.5 443.87292 l
386.60458 443.87292 387.5 444.76837 387.5 445.87292 c
387.5 466.32755 l
387.5 467.4321 386.60458 468.32755 385.5 468.32755 c
243 468.32755 l
241.89543 468.32755 241 467.4321 241 466.32755 c
241 445.87292 l
241 444.76837 241.89543 443.87292 243 443.87292 c
h
243 443.87292 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
294.246 459.60025 m
(!"#$%)[ 8.220000 6.672000 7.776000 6.888000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
36 204.87564 m
178.5 204.87564 l
179.60457 204.87564 180.5 203.98021 180.5 202.87564 c
180.5 182.42105 l
180.5 181.31648 179.60457 180.42105 178.5 180.42105 c
36 180.42105 l
34.895432 180.42105 34 181.31648 34 182.42105 c
34 202.87564 l
34 203.98021 34.895432 204.87564 36 204.87564 c
h
36 204.87564 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
243 401.12436 m
385.5 401.12436 l
386.60458 401.12436 387.5 402.01978 387.5 403.12436 c
387.5 423.57895 l
387.5 424.68353 386.60458 425.57895 385.5 425.57895 c
243 425.57895 l
241.89543 425.57895 241 424.68353 241 423.57895 c
241 403.12436 l
241 402.01978 241.89543 401.12436 243 401.12436 c
h
243 401.12436 m
S
/Cs1 SC
0 sc
0 i
294.246 416.85165 m
(!"#$%)[ 8.220000 6.672000 7.776000 6.888000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
108.31799 163.61992 m
104.46817 163.61992 l
104.46817 167.92819 l
102.54325 167.92819 l
106.39308 178.92819 l
110.2429 167.92819 l
108.31799 167.92819 l
h
108.31799 163.61992 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -207 606 cm
315.31799 442.3801 m
311.46817 442.3801 l
311.46817 438.07181 l
309.54324 438.07181 l
313.39307 427.07181 l
317.24292 438.07181 l
315.31799 438.07181 l
h
315.31799 442.3801 m
S
0 i
1 1 1 sc
CM
108.12264 206.3685 m
104.27281 206.3685 l
104.27281 210.67679 l
102.3479 210.67679 l
106.19773 221.67679 l
110.04755 210.67679 l
108.12264 210.67679 l
h
108.12264 206.3685 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -207 606 cm
315.12265 399.6315 m
311.27283 399.6315 l
311.27283 395.32321 l
309.3479 395.32321 l
313.19772 384.32321 l
317.04755 395.32321 l
315.12265 395.32321 l
h
315.12265 399.6315 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 9 0 0 -9 0 0]sf
397.95517 372.37576 m
("#$%&'\(\)*\(\))[ 5.004000 5.832000 5.166000 7.839000 2.502000 6.840000 5.004000 2.835000 5.337000 5.004000 0.000000 ] xS
398.44092 497.6358 m
(+,-.//012)[ 5.499000 7.677000 5.337000 4.833000 5.337000 5.337000 1.998000 5.004000 0.000000 ] xS
401.28043 508.88782 m
(#.3\(.14.)[ 5.832000 4.833000 5.337000 5.004000 4.833000 5.004000 4.833000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
36 288.48303 m
178.5 288.48303 l
179.60457 288.48303 180.5 287.58762 180.5 286.48303 c
180.5 266.02844 l
180.5 264.92386 179.60457 264.02844 178.5 264.02844 c
36 264.02844 l
34.895432 264.02844 34 264.92386 34 266.02844 c
34 286.48303 l
34 287.58762 34.895432 288.48303 36 288.48303 c
h
36 288.48303 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
243 317.51697 m
385.5 317.51697 l
386.60458 317.51697 387.5 318.41238 387.5 319.51697 c
387.5 339.97156 l
387.5 341.07614 386.60458 341.97156 385.5 341.97156 c
243 341.97156 l
241.89543 341.97156 241 341.07614 241 339.97156 c
241 319.51697 l
241 318.41238 241.89543 317.51697 243 317.51697 c
h
243 317.51697 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
259.47601 333.24426 m
(5670\)0618907.&:.17.)[ 7.776000 6.888000 6.000000 2.664000 3.780000 2.664000 6.888000 6.672000 4.668000 9.096000 2.664000 6.000000 6.444000 3.336000 8.448000 6.444000 6.672000 6.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
108.12264 248.72015 m
104.27281 248.72015 l
104.27281 253.02844 l
102.3479 253.02844 l
106.19773 264.02844 l
110.04755 253.02844 l
108.12264 253.02844 l
h
108.12264 248.72015 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -207 606 cm
315.12265 357.27985 m
311.27283 357.27985 l
311.27283 352.97156 l
309.3479 352.97156 l
313.19772 341.97156 l
317.04755 352.97156 l
315.12265 352.97156 l
h
315.12265 357.27985 m
S
0 i
0.75 1 0.75 sc
CM
34.28616 78.038887 m
176.78616 78.038887 l
177.89073 78.038887 178.78616 77.143456 178.78616 76.038887 c
178.78616 55.58429 l
178.78616 54.479717 177.89073 53.58429 176.78616 53.58429 c
34.28616 53.58429 l
33.181591 53.58429 32.28616 54.479717 32.28616 55.58429 c
32.28616 76.038887 l
32.28616 77.143456 33.181591 78.038887 34.28616 78.038887 c
h
34.28616 78.038887 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
241.28616 527.96112 m
383.78616 527.96112 l
384.89072 527.96112 385.78616 528.85657 385.78616 529.96112 c
385.78616 550.41571 l
385.78616 551.52026 384.89072 552.41571 383.78616 552.41571 c
241.28616 552.41571 l
240.18159 552.41571 239.28616 551.52026 239.28616 550.41571 c
239.28616 529.96112 l
239.28616 528.85657 240.18159 527.96112 241.28616 527.96112 c
h
241.28616 527.96112 m
S
/Cs1 SC
0 sc
0 i
278.19815 543.68842 m
(;614<\).1<\).)[ 8.664000 6.888000 6.672000 6.444000 6.444000 3.780000 6.444000 6.672000 6.444000 3.780000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
108.12264 78.122742 m
104.27281 78.122742 l
104.27281 82.431023 l
102.3479 82.431023 l
106.19773 93.431023 l
110.04755 82.431023 l
108.12264 82.431023 l
h
108.12264 78.122742 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -207 606 cm
315.12265 527.87726 m
311.27283 527.87726 l
311.27283 523.56897 l
309.3479 523.56897 l
313.19772 512.56897 l
317.04755 523.56897 l
315.12265 523.56897 l
h
315.12265 527.87726 m
S
0 i
1 1 1 sc
CM
125.91602 29.838102 m
210.41603 29.838102 l
211.5206 29.838102 212.41603 28.942671 212.41603 27.838102 c
212.41603 3.4059408 l
212.41603 2.3013711 211.5206 1.4059407 210.41603 1.4059407 c
125.91602 1.4059407 l
124.81145 1.4059407 123.91602 2.3013711 123.91602 3.4059408 c
123.91602 27.838102 l
123.91602 28.942671 124.81145 29.838102 125.91602 29.838102 c
h
125.91602 29.838102 m
f
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
332.91602 576.16193 m
417.41602 576.16193 l
418.5206 576.16193 419.41602 577.05731 419.41602 578.16193 c
419.41602 602.59406 l
419.41602 603.69861 418.5206 604.59406 417.41602 604.59406 c
332.91602 604.59406 l
331.81146 604.59406 330.91602 603.69861 330.91602 602.59406 c
330.91602 578.16193 l
330.91602 577.05731 331.81146 576.16193 332.91602 576.16193 c
h
332.91602 576.16193 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
337.83603 588.09796 m
(5'#&+,-.//012&)[ 6.480000 7.600000 6.480000 2.780000 6.110000 8.530000 5.930000 5.370000 5.930000 5.930000 2.220000 5.560000 5.740000 0.000000 ] xS
352.66104 600.37799 m
(#.3\(.14.)[ 6.480000 5.370000 5.930000 5.560000 5.370000 5.560000 5.370000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
2.8460732 29.838102 m
107.61223 29.838102 l
108.7168 29.838102 109.61223 28.942671 109.61223 27.838102 c
109.61223 3.4059408 l
109.61223 2.3013711 108.7168 1.4059407 107.61223 1.4059407 c
2.8460732 1.4059407 l
1.7415036 1.4059407 0.84607315 2.3013711 0.84607315 3.4059408 c
0.84607315 27.838102 l
0.84607315 28.942671 1.7415036 29.838102 2.8460732 29.838102 c
h
2.8460732 29.838102 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
209.84607 576.16193 m
314.61224 576.16193 l
315.7168 576.16193 316.61224 577.05731 316.61224 578.16193 c
316.61224 602.59406 l
316.61224 603.69861 315.7168 604.59406 314.61224 604.59406 c
209.84607 604.59406 l
208.7415 604.59406 207.84607 603.69861 207.84607 602.59406 c
207.84607 578.16193 l
207.84607 577.05731 208.7415 576.16193 209.84607 576.16193 c
h
209.84607 576.16193 m
S
/Cs1 SC
0 sc
0 i
213.14415 588.09796 m
(;=<><4\).>&+,-.//012&)[ 7.220000 5.560000 5.370000 3.330000 5.370000 5.370000 3.150000 5.370000 3.330000 2.780000 6.110000 8.530000 5.930000 5.370000 5.930000 5.930000 2.220000 5.560000 5.740000 0.000000 ] xS
239.72415 600.37799 m
(#.3\(.14.)[ 6.480000 5.370000 5.930000 5.560000 5.370000 5.560000 5.370000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
57.161156 34.610798 m
53.311329 34.610798 l
53.311329 38.919083 l
51.386417 38.919083 l
55.23624 49.919083 l
59.086067 38.919083 l
57.161156 38.919083 l
h
57.161156 34.610798 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -207 606 cm
264.16116 571.38922 m
260.31134 571.38922 l
260.31134 567.08093 l
258.38641 567.08093 l
262.23624 556.08093 l
266.08606 567.08093 l
264.16116 567.08093 l
h
264.16116 571.38922 m
S
0 i
1 1 1 sc
CM
165.50169 35.374157 m
161.65186 35.374157 l
161.65186 39.682442 l
159.72694 39.682442 l
163.57678 50.682442 l
167.42661 39.682442 l
165.50169 39.682442 l
h
165.50169 35.374157 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -207 606 cm
372.50168 570.62585 m
368.65186 570.62585 l
368.65186 566.31757 l
366.72696 566.31757 l
370.57678 555.31757 l
374.42661 566.31757 l
372.50168 566.31757 l
h
372.50168 570.62585 m
S
0 i
1 1 1 sc
CM
36 327.45435 m
176.78616 327.45435 l
177.89073 327.45435 178.78616 326.5589 178.78616 325.45435 c
178.78616 308.20233 l
178.78616 307.09778 177.89073 306.20233 176.78616 306.20233 c
36 306.20233 l
34.895432 306.20233 34 307.09778 34 308.20233 c
34 325.45435 l
34 326.5589 34.895432 327.45435 36 327.45435 c
h
36 327.45435 m
f
[
4
4
] 0 d
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -207 606 cm
243 278.54565 m
383.78616 278.54565 l
384.89072 278.54565 385.78616 279.4411 385.78616 280.54565 c
385.78616 297.79767 l
385.78616 298.90222 384.89072 299.79767 383.78616 299.79767 c
243 299.79767 l
241.89543 299.79767 241 298.90222 241 297.79767 c
241 280.54565 l
241 279.4411 241.89543 278.54565 243 278.54565 c
h
243 278.54565 m
S
/Cs1 SC
0 sc
0 i
277.27307 292.67166 m
("<-.?&#.3\(.14.)[ 5.560000 5.370000 5.930000 5.370000 2.220000 2.780000 6.480000 5.370000 5.930000 5.560000 5.370000 5.560000 5.370000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
108.12264 289.57895 m
104.27281 289.57895 l
104.27281 293.88724 l
102.3479 293.88724 l
106.19773 304.88724 l
110.04755 293.88724 l
108.12264 293.88724 l
h
108.12264 289.57895 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -207 606 cm
315.12265 316.42105 m
311.27283 316.42105 l
311.27283 312.11276 l
309.3479 312.11276 l
313.19772 301.11276 l
317.04755 312.11276 l
315.12265 312.11276 l
h
315.12265 316.42105 m
S
ep
end
%%Trailer
%%EOF
